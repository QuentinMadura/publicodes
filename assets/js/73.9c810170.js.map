{"version":3,"file":"assets/js/73.9c810170.js","mappings":"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","sources":["webpack://website/../source/component/icons/index.tsx","webpack://website/../source/component/Accordion.tsx","webpack://website/../source/component/Code.tsx","webpack://website/../source/rule/References.tsx","webpack://website/../source/contexts.tsx","webpack://website/../source/hooks.ts","webpack://website/../source/mecanisms/colors.ts","webpack://website/../source/mecanisms/common.tsx","webpack://website/../source/mecanisms/Barème.tsx","webpack://website/../source/writtenNumbers.ts","webpack://website/../source/RuleLink.tsx","webpack://website/../source/mecanisms/Reference.tsx","webpack://website/../source/mecanisms/DefaultInlineMecanism.tsx","webpack://website/../source/mecanisms/Operation.tsx","webpack://website/../source/mecanisms/Product.tsx","webpack://website/../source/mecanisms/Rule.tsx","webpack://website/../source/mecanisms/Texte.tsx","webpack://website/../source/mecanisms/Variations.tsx","webpack://website/../source/Explanation.tsx","webpack://website/../source/mecanisms/Arrondi.tsx","webpack://website/../source/mecanisms/Avec.tsx","webpack://website/../source/mecanisms/Composantes.tsx","webpack://website/../source/mecanisms/Durée.tsx","webpack://website/../source/mecanisms/Grille.tsx","webpack://website/../source/mecanisms/InversionNumérique.jsx","webpack://website/../source/mecanisms/EstNonApplicable.tsx","webpack://website/../source/mecanisms/EstNonDéfini.tsx","webpack://website/../source/mecanisms/Condition.tsx","webpack://website/../source/mecanisms/Situation.tsx","webpack://website/../source/mecanisms/Recalcul.tsx","webpack://website/../source/mecanisms/Replacement.tsx","webpack://website/../source/mecanisms/ReplacementRule.tsx","webpack://website/../source/mecanisms/TauxProgressif.tsx","webpack://website/../source/mecanisms/UnePossibilité.tsx","webpack://website/../source/mecanisms/RésoudreRéférenceCirculaire.tsx","webpack://website/../source/mecanisms/Unité.tsx","webpack://website/../source/rule/RuleSource.tsx","webpack://website/../source/rule/DeveloperAccordion.tsx","webpack://website/../source/rule/Meta.tsx","webpack://website/../source/rule/Header.tsx","webpack://website/../source/rule/RulesNav.tsx","webpack://website/../source/rule/RulePage.tsx","webpack://website/./src/components/Documentation.tsx","webpack://website/../source/index.ts","webpack://website/./src/components/ErrorBoundary.tsx","webpack://website/./src/components/studio.module.css","webpack://website/./src/components/Studio.tsx","webpack://website/../../../node_modules/nearley/lib/nearley.js","webpack://website/../../../node_modules/moo/moo.js","webpack://website/../source/error.ts","webpack://website/../source/utils.ts","webpack://website/../source/AST/index.ts","webpack://website/../source/evaluationFunctions.ts","webpack://website/../source/inferNodeType.ts","webpack://website/../source/mecanisms/inlineMecanism.ts","webpack://website/../source/mecanisms/abattement.ts","webpack://website/../source/mecanisms/applicable.ts","webpack://website/../source/evaluationUtils.ts","webpack://website/../source/units.ts","webpack://website/../source/mecanisms/arrondi.ts","webpack://website/../source/mecanisms/avec.ts","webpack://website/../source/mecanisms/trancheUtils.ts","webpack://website/../source/mecanisms/barème.ts","webpack://website/../source/mecanisms/composantes.ts","webpack://website/../source/mecanisms/condition.ts","webpack://website/../source/date.ts","webpack://website/../source/mecanisms/durée.ts","webpack://website/../source/mecanisms/est.ts","webpack://website/../source/nodeUnits.ts","webpack://website/../source/format.ts","webpack://website/../source/ruleUtils.ts","webpack://website/../source/AST/findCycles.ts","webpack://website/../source/AST/graph.ts","webpack://website/../source/replacement.ts","webpack://website/../source/rule.ts","webpack://website/../source/mecanisms/est-non-applicable.ts","webpack://website/../source/uniroot.ts","webpack://website/../source/mecanisms/grille.ts","webpack://website/../source/mecanisms/inversion.ts","webpack://website/../source/mecanisms/max-min.ts","webpack://website/../source/mecanisms/somme.tsx","webpack://website/../source/mecanisms/moyenne.ts","webpack://website/../source/mecanisms/non-applicable.ts","webpack://website/../source/mecanisms/one-possibility.ts","webpack://website/../source/mecanisms/operation.ts","webpack://website/../source/mecanisms/parDéfaut.ts","webpack://website/../source/mecanisms/plafond.ts","webpack://website/../source/mecanisms/plancher.ts","webpack://website/../source/mecanisms/product.ts","webpack://website/../source/mecanisms/recalcul.ts","webpack://website/../source/mecanisms/résoudre-référence-circulaire.ts","webpack://website/../source/mecanisms/simplifier-unité.ts","webpack://website/../source/mecanisms/situation.ts","webpack://website/../source/mecanisms/tauxProgressif.ts","webpack://website/../source/mecanisms/texte.ts","webpack://website/../source/mecanisms/toutes-ces-conditions.ts","webpack://website/../source/mecanisms/une-de-ces-conditions.ts","webpack://website/../source/mecanisms/unité.ts","webpack://website/../source/mecanisms/variablesManquantes.ts","webpack://website/../source/mecanisms/variations.ts","webpack://website/../source/parseExpression.ts","webpack://website/../source/grammarFunctions.js","webpack://website/../source/grammar.js","webpack://website/../source/parse.ts","webpack://website/../source/reference.ts","webpack://website/../source/parsePublicodes.ts"],"sourcesContent":["interface Props {\n\tclassName?: string\n}\n\nexport const Arrow = ({ className }: Props) => (\n\t<svg\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\theight=\"24px\"\n\t\tviewBox=\"0 0 24 24\"\n\t\twidth=\"24px\"\n\t\tfill=\"#000000\"\n\t\tclassName={className}\n\t\trole=\"img\"\n\t>\n\t\t<path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n\t\t<path d=\"M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\" />\n\t</svg>\n)\n","import { useState } from 'react'\nimport { css, styled } from 'styled-components'\nimport { AccordionItem } from '../contexts'\nimport { Arrow } from './icons'\n\nconst AccordionContainer = styled.div`\n\toverflow: hidden;\n\tborder-radius: 6px;\n\tborder: 1px solid #bbb;\n`\n\nconst H4 = styled.h4`\n\tfont-size: 16px;\n\tfont-weight: 700;\n\tmargin: 2rem 0px 1rem;\n\tfont-size: 1.25rem;\n\tline-height: 1.75rem;\n\n\tbutton {\n\t\tdisplay: flex;\n\t\tflex-wrap: nowrap;\n\t\tflex-direction: row;\n\t\talign-content: center;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t\ttext-align: left;\n\t\twidth: 100%;\n\t\theight: 50px;\n\t\tborder: none;\n\t\tpadding: 1.5rem;\n\t\tcursor: pointer;\n\t\tfont-size: 1rem;\n\t\tfont-weight: bold;\n\n\t\t&:hover {\n\t\t\ttext-decoration: underline;\n\t\t}\n\t}\n`\n\nconst AccordionWrapper = styled.div<{ i: number }>`\n\tborder: 0 solid #bbb;\n\t${({ i }) =>\n\t\ti > 0 &&\n\t\tcss`\n\t\t\tborder-top-width: 1px;\n\t\t`}\n\n\t& ${H4} {\n\t\tmargin: 0;\n\t}\n`\n\nconst Child = styled.div<{ open: boolean }>`\n\tdisplay: ${({ open }) => (open ? 'block' : 'none')};\n\tmargin: 1.5rem;\n`\n\nconst StyledArrow = styled(Arrow)<{ $isOpen: boolean }>`\n\tdisplay: inline-block;\n\twidth: 25px;\n\ttransition: transform 0.1s;\n\theight: 25px;\n\ttransform: rotate(${({ $isOpen }) => ($isOpen ? `180deg` : `360deg`)});\n`\n\nexport interface AccordionProps {\n\titems: AccordionItem[]\n}\n\nexport const Accordion = ({ items }: AccordionProps) => {\n\tconst [open, setOpen] = useState<boolean[]>([])\n\n\tconst toggleAccordion = (i: number) => () =>\n\t\tsetOpen((arr) => {\n\t\t\tarr[i] = !arr[i]\n\n\t\t\treturn [...arr]\n\t\t})\n\n\treturn (\n\t\t<AccordionContainer>\n\t\t\t{items.map(({ id, title, children }, i) => (\n\t\t\t\t<AccordionWrapper id={id} key={id} i={i}>\n\t\t\t\t\t<H4>\n\t\t\t\t\t\t<button onClick={toggleAccordion(i)}>\n\t\t\t\t\t\t\t<span>{title}</span>\n\t\t\t\t\t\t\t<StyledArrow $isOpen={open[i]} />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</H4>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Child open={!!open[i]}>{children}</Child>\n\t\t\t\t\t</div>\n\t\t\t\t</AccordionWrapper>\n\t\t\t))}\n\t\t</AccordionContainer>\n\t)\n}\n","import { useState } from 'react'\nimport { styled } from 'styled-components'\n\nconst PreWrapper = styled.div`\n\tposition: relative;\n\t:hover button,\n\t:focus-within button {\n\t\topacity: 1;\n\t}\n`\n\nconst Bar = styled.div`\n\tposition: absolute;\n\tright: 0;\n\ttop: 0;\n\tmargin: 0.5rem;\n\tline-height: 0;\n\n\t& button {\n\t\tmargin: 0;\n\t\tpadding: 1px 3px;\n\t\ttransition: opacity ease-in-out 0.1s;\n\t\topacity: 0.25;\n\n\t\t:hover {\n\t\t\tcursor: pointer;\n\t\t}\n\t\t:not(:last-child) {\n\t\t\tmargin-right: 0.5rem;\n\t\t}\n\t}\n`\n\nconst Pre = styled.pre`\n\toverflow: auto;\n\tpadding: 0.5rem;\n\tbackground-color: #e6e9ec;\n\tborder-radius: 0.25rem;\n`\n\nexport interface CodeProps {\n\ttabs: { [name: string]: string }\n}\n\nexport const Code = ({ tabs }: CodeProps) => {\n\tconst [tab, setTab] = useState<string>()\n\tconst tabKeys = Object.keys(tabs)\n\n\tconst activeTab = tab ?? tabKeys[0]\n\n\treturn (\n\t\t<PreWrapper>\n\t\t\t<Bar>\n\t\t\t\t{navigator.clipboard && (\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() => navigator.clipboard.writeText(tabs[activeTab])}\n\t\t\t\t\t>\n\t\t\t\t\t\tcopier\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t\t{tabKeys.length > 1 &&\n\t\t\t\t\ttabKeys\n\t\t\t\t\t\t.filter((name) => name !== activeTab)\n\t\t\t\t\t\t.map((name) => (\n\t\t\t\t\t\t\t<button key={name} onClick={() => setTab(name)}>\n\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t))}\n\t\t\t</Bar>\n\t\t\t<Pre>\n\t\t\t\t<code>{tabs[activeTab]}</code>\n\t\t\t</Pre>\n\t\t</PreWrapper>\n\t)\n}\n","import { capitalise0 } from 'publicodes'\n\ntype ReferencesProps = {\n\treferences?: Record<string, string>\n\tdottedName?: string // Useful for extending reference component in userdom\n}\n\nexport default function References({ references }: ReferencesProps) {\n\tif (!references) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<ul>\n\t\t\t{Object.entries(references).map(([name, link]) => (\n\t\t\t\t<li\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t}}\n\t\t\t\t\tkey={name}\n\t\t\t\t>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={link}\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmarginRight: '1rem',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{capitalise0(name)}\n\t\t\t\t\t</a>\n\t\t\t\t\t<span className=\"ui__ label\">{link}</span>\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t)\n}\n","import Engine from 'publicodes'\nimport { ComponentProps, ComponentType, createContext, ReactNode } from 'react'\nimport { Accordion, AccordionProps, Code, CodeProps } from './component'\nimport References from './rule/References'\n\ntype PartialRequired<T, R extends keyof T> = Omit<T, R> & Required<Pick<T, R>>\n\nexport type AccordionItem = { title: string; id: string; children: ReactNode }\n\nexport type SupportedRenderers = {\n\tLink?: ComponentType<{\n\t\tchildren: ReactNode\n\t\tto?: string\n\t\thref?: string\n\t\ttitle?: string\n\t\tsmall?: boolean\n\t\t'aria-label'?: string\n\t}>\n\tHead?: ComponentType<{ children: ReactNode }>\n\n\t/**\n\t * Used to render a rule description or title. Useful to parse markdown, links\n\t * or emojies.\n\t */\n\tText?: ComponentType<{ children: string }>\n\tReferences?: typeof References\n\t/**\n\t * Accordion used for developer documentation.\n\t */\n\tAccordion?: ComponentType<AccordionProps>\n\t/**\n\t * Block of code in pre\n\t */\n\tCode?: ComponentType<CodeProps>\n}\n\nconst DefaultTextRenderer = ({\n\tchildren,\n}: ComponentProps<RenderersCtx['Text']>) => <p>{children}</p>\n\nconst DefaultLinkRenderer = (props: ComponentProps<RenderersCtx['Link']>) => (\n\t<a {...props} />\n)\n\nexport type RenderersCtx = PartialRequired<\n\tSupportedRenderers,\n\t'References' | 'Text' | 'Code' | 'Link' | 'Accordion'\n>\n\nexport const defaultRenderers = (renderers: SupportedRenderers = {}) => {\n\tconst base: RenderersCtx = {\n\t\tReferences,\n\t\tText: DefaultTextRenderer,\n\t\tCode,\n\t\tAccordion,\n\t\tLink: DefaultLinkRenderer,\n\t}\n\n\treturn Object.fromEntries(\n\t\t[...Object.keys(base), ...Object.keys(renderers)]\n\t\t\t.map((key) => [key, renderers[key] ?? base[key]])\n\t\t\t.filter(([, val]) => val)\n\t) as RenderersCtx\n}\n\nexport const RenderersContext = createContext<RenderersCtx>(defaultRenderers())\n\nexport const BasepathContext = createContext<string>('/documentation')\n\nexport const DottedNameContext = createContext<string | undefined>(undefined)\n\nexport const EngineContext = createContext<Engine<string> | undefined>(\n\tundefined\n)\n","import { useContext } from 'react'\nimport { EngineContext } from './contexts'\n\nexport const useEngine = () => {\n\tconst engine = useContext(EngineContext)\n\tif (!engine) {\n\t\tthrow new Error('Engine expected')\n\t}\n\n\treturn engine\n}\n","const colors = {\n\t'applicable si': '#7B1FA2',\n\t'non applicable si': '#7B1FA2',\n\t'est applicable': '#00796B',\n\t'est non applicable': '#00796B',\n\t'est défini': '#00796B',\n\t'est non défini': '#00796B',\n\tsomme: '#18457B',\n\tplafond: '#EF6C00',\n\tplancher: '#EF6C00',\n\tabattement: '#B73731',\n\tproduit: '#2ecc71',\n\t'une de ces conditions': '#3498db',\n\t'toutes ces conditions': '#3498db',\n\t'le maximum de': '#795548',\n\t'le minimum de': '#795548',\n\tcomposantes: '#3498db',\n\tvariations: '#FF9800',\n\t'par défaut': '#00695C',\n\t'taux progressif': '#795548',\n\tbarème: '#9B296F',\n\tgrille: '#AD1457',\n\tavec: '#2653ce',\n}\nexport default (name) => colors[name] || 'palevioletred'\n","import { formatValue } from 'publicodes'\nimport {\n\tEvaluatedNode,\n\tEvaluation,\n\tTypes,\n\tUnit,\n} from 'publicodes/source/AST/types'\nimport React from 'react'\nimport { css, styled } from 'styled-components'\nimport Explanation from '../Explanation'\nimport mecanismColors from './colors'\n\nexport function ConstantNode({ nodeValue, type, fullPrecision, unit }) {\n\tif (nodeValue === undefined) {\n\t\treturn null\n\t}\n\tif (nodeValue === null) {\n\t\treturn <span className=\"value\">{formatValue({ nodeValue })}</span>\n\t} else if (fullPrecision) {\n\t\treturn (\n\t\t\t<span className={type}>\n\t\t\t\t{formatValue(\n\t\t\t\t\t{ nodeValue, unit },\n\t\t\t\t\t{\n\t\t\t\t\t\tprecision: 5,\n\t\t\t\t\t}\n\t\t\t\t)}\n\t\t\t</span>\n\t\t)\n\t} else {\n\t\treturn <span className=\"value\">{formatValue({ nodeValue, unit })}</span>\n\t}\n}\n\ntype NodeValuePointerProps = {\n\tdata: Evaluation<Types>\n\tunit: Unit | undefined\n}\n\nexport const NodeValuePointer = ({ data, unit }: NodeValuePointerProps) => {\n\treturn (\n\t\t<StyledNodeValuePointer className=\"node-value-pointer\">\n\t\t\t{formatValue({ nodeValue: data, unit })}\n\t\t</StyledNodeValuePointer>\n\t)\n}\n\nconst StyledNodeValuePointer = styled.span`\n\tbackground: white;\n\tborder-bottom: 0 !important;\n\tfont-size: 0.875rem;\n\tline-height: 1.25rem;\n\tmargin: 0 0.2rem;\n\tflex-shrink: 0;\n\tpadding: 0.1rem 0.2rem;\n\ttext-decoration: none !important;\n\tbox-shadow: 0px 1px 2px 1px #d9d9d9, 0 0 0 1px #d9d9d9;\n\tborder: 1px solid #f8f9fa;\n\tborder-radius: 0.2rem;\n`\n\n// Un élément du graphe de calcul qui a une valeur interprétée (à afficher)\ntype NodeProps = {\n\tname: string\n\tvalue: Evaluation<Types>\n\tunit?: Unit\n\tchildren: React.ReactNode\n\tdisplayName?: boolean\n}\n\nexport function Mecanism({\n\tname,\n\tvalue,\n\tchildren,\n\tunit,\n\tdisplayName = true,\n}: NodeProps) {\n\treturn (\n\t\t<StyledMecanism mecanismName={name}>\n\t\t\t{displayName && <MecanismName name={name}>{name}</MecanismName>}\n\t\t\t<div>\n\t\t\t\t{children}\n\n\t\t\t\t{value !== undefined && (\n\t\t\t\t\t<StyledMecanismValue>\n\t\t\t\t\t\t<small> =&nbsp;</small>\n\t\t\t\t\t\t<NodeValuePointer data={value} unit={unit} />\n\t\t\t\t\t</StyledMecanismValue>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</StyledMecanism>\n\t)\n}\nconst StyledMecanismValue = styled.div`\n\ttext-align: right;\n\tmargin-top: 0.25rem;\n\tfont-weight: bold;\n`\n\nexport const InfixMecanism = ({\n\tvalue,\n\tprefixed,\n\tchildren,\n}: {\n\tvalue: EvaluatedNode\n\tchildren: React.ReactNode\n\tprefixed?: boolean\n}) => {\n\treturn (\n\t\t<div>\n\t\t\t{prefixed && children}\n\t\t\t<div\n\t\t\t\tclassName=\"value\"\n\t\t\t\tstyle={{\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Explanation node={value} />\n\t\t\t</div>\n\t\t\t{!prefixed && children}\n\t\t</div>\n\t)\n}\n\nexport const InlineMecanismName = ({ name }: { name: string }) => {\n\treturn (\n\t\t<MecanismName inline name={name}>\n\t\t\t{name}\n\t\t</MecanismName>\n\t)\n}\n\nconst MecanismName = ({\n\tname,\n\tinline = false,\n\tchildren,\n}: {\n\tname: string\n\tinline?: boolean\n\tchildren: React.ReactNode\n}) => {\n\treturn (\n\t\t<>\n\t\t\t<StyledMecanismName\n\t\t\t\tname={name}\n\t\t\t\tinline={inline}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\thref={`https://publi.codes/docs/api/mécanismes#${name}`}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</StyledMecanismName>\n\t\t</>\n\t)\n}\n\nconst StyledMecanism = styled.div<{ mecanismName: string }>`\n\tborder: 1px solid;\n\tmax-width: 100%;\n\tborder-radius: 3px;\n\tpadding: 0.5rem 1rem;\n\tmargin-bottom: 0.5rem;\n\tposition: relative;\n\tflex: 1;\n\tflex-direction: column;\n\ttext-align: left;\n\tborder-color: ${({ mecanismName }) => mecanismColors(mecanismName)};\n\t.properties > li {\n\t\tmargin: 1rem 0;\n\t}\n`\n\nconst StyledMecanismName = styled.a<{ name: string; inline?: boolean }>`\n\tbackground-color: ${({ name }) => mecanismColors(name)} !important;\n\tfont-size: inherit;\n\tdisplay: inline-block;\n\tfont-weight: inherit;\n\twidth: fit-content;\n\tfont-family: inherit;\n\tpadding: 0.4rem 0.6rem !important;\n\tcolor: white !important;\n\ttransition: hover 0.2s;\n\t:hover {\n\t\tcolor: white;\n\t}\n\t${(props) =>\n\t\tprops.inline\n\t\t\t? css`\n\t\t\t\t\tborder-radius: 0.3rem;\n\t\t\t\t\tmargin-bottom: 0.5rem;\n\t\t\t  `\n\t\t\t: css`\n\t\t\t\t\ttop: -0.5rem;\n\t\t\t\t\tposition: relative;\n\t\t\t\t\tmargin-left: -1rem;\n\t\t\t\t\tborder-radius: 0 !important;\n\t\t\t\t\tborder-bottom-right-radius: 0.3rem !important;\n\t\t\t\t\t::first-letter {\n\t\t\t\t\t\ttext-transform: capitalize;\n\t\t\t\t\t}\n\t\t\t  `}\n\t:hover {\n\t\topacity: 0.8;\n\t}\n`\n\nexport const CapitalizeFirstLetter = styled.div`\n\tfont-weight: bold;\n\t:first-letter {\n\t\ttext-transform: capitalize;\n\t}\n`\n","import { parseUnit } from 'publicodes'\nimport { styled } from 'styled-components'\nimport Explanation from '../Explanation'\nimport { Mecanism, NodeValuePointer } from './common'\n\nexport default function Barème({ nodeValue, explanation, unit }) {\n\treturn (\n\t\t<Mecanism name=\"barème\" value={nodeValue} unit={unit}>\n\t\t\t<StyledComponent>\n\t\t\t\t<ul className=\"properties\">\n\t\t\t\t\t<BarèmeAttributes explanation={explanation} />\n\t\t\t\t\t<TrancheTable\n\t\t\t\t\t\ttranches={explanation.tranches}\n\t\t\t\t\t\tmultiplicateur={explanation.multiplicateur}\n\t\t\t\t\t/>\n\t\t\t\t\t{/* nous avons remarqué que la notion de taux moyen pour un barème à 2 tranches est moins pertinent pour les règles de calcul des indépendants. Règle empirique à faire évoluer ! */}\n\t\t\t\t\t{nodeValue !== undefined && explanation.tranches.length > 2 && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<b>Taux moyen : </b>\n\t\t\t\t\t\t\t<NodeValuePointer\n\t\t\t\t\t\t\t\tdata={(100 * nodeValue) / explanation.assiette.nodeValue}\n\t\t\t\t\t\t\t\tunit={parseUnit('%')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</ul>\n\t\t\t</StyledComponent>\n\t\t</Mecanism>\n\t)\n}\n\nexport const BarèmeAttributes = ({ explanation }) => {\n\tconst multiplicateur = explanation.multiplicateur\n\treturn (\n\t\t<>\n\t\t\t<li key=\"assiette\">\n\t\t\t\t<span className=\"key\">Assiette : </span>\n\t\t\t\t<span className=\"value\">\n\t\t\t\t\t<Explanation node={explanation.assiette} />\n\t\t\t\t</span>\n\t\t\t</li>\n\t\t\t{multiplicateur && !multiplicateur.isDefault && (\n\t\t\t\t<li key=\"multiplicateur\">\n\t\t\t\t\t<span className=\"key\">Multiplicateur : </span>\n\t\t\t\t\t<span className=\"value\">\n\t\t\t\t\t\t<Explanation node={multiplicateur} />\n\t\t\t\t\t</span>\n\t\t\t\t</li>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport const TrancheTable = ({ tranches, multiplicateur }) => {\n\tconst activeTranche = tranches.find(({ isActive }) => isActive)\n\treturn (\n\t\t<table className=\"tranches\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Plafonds des tranches</th>\n\t\t\t\t\t{tranches[0].taux && <th>Taux</th>}\n\t\t\t\t\t{(tranches[0].montant || activeTranche?.nodeValue != undefined) && (\n\t\t\t\t\t\t<th>Montant</th>\n\t\t\t\t\t)}\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{tranches.map((tranche, i) => (\n\t\t\t\t\t<Tranche key={i} tranche={tranche} multiplicateur={multiplicateur} />\n\t\t\t\t))}\n\t\t\t</tbody>\n\t\t</table>\n\t)\n}\n\nconst Tranche = ({ tranche, multiplicateur }) => {\n\tconst isHighlighted = tranche.isActive\n\treturn (\n\t\t<tr className={`tranche ${isHighlighted ? 'activated' : ''}`}>\n\t\t\t<td key=\"tranche\">\n\t\t\t\t{tranche.plafond.nodeValue === Infinity ? (\n\t\t\t\t\t'Au-delà du dernier plafond'\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\tInférieur à <Explanation node={tranche.plafond} />\n\t\t\t\t\t\t{multiplicateur && !multiplicateur.isDefault && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{' × '}\n\t\t\t\t\t\t\t\t<Explanation node={multiplicateur} />\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</td>\n\t\t\t{tranche.taux && (\n\t\t\t\t<td key=\"taux\">\n\t\t\t\t\t<Explanation node={tranche.taux} />\n\t\t\t\t</td>\n\t\t\t)}\n\t\t\t{(tranche.nodeValue != undefined || tranche.montant) && (\n\t\t\t\t<td key=\"value\">\n\t\t\t\t\t{tranche.montant ? (\n\t\t\t\t\t\t<Explanation node={tranche.montant} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<NodeValuePointer data={tranche.nodeValue} unit={tranche.unit} />\n\t\t\t\t\t)}\n\t\t\t\t</td>\n\t\t\t)}\n\t\t</tr>\n\t)\n}\n\nexport const StyledComponent = styled.div`\n\ttable {\n\t\tmargin: 1em 0;\n\t\twidth: 100%;\n\t\ttext-align: left;\n\t\tfont-weight: 400;\n\t}\n\ttable td {\n\t\tpadding: 0.1em 0.4em;\n\t}\n\ttable th {\n\t\tfont-weight: 600;\n\t}\n\ttable th:first-letter {\n\t\ttext-transform: uppercase;\n\t}\n\t.tranche:nth-child(2n) {\n\t\tbackground: var(--lightestColor);\n\t}\n\t.tranche.activated {\n\t\tbackground: var(--lighterColor);\n\t\tfont-weight: bold;\n\t}\n`\n","export default [\n\t'zéro',\n\t'un',\n\t'deux',\n\t'trois',\n\t'quatre',\n\t'cinq',\n\t'six',\n\t'sept',\n\t'huit',\n\t'neuf',\n\t'dix',\n]\n","import Engine, { utils } from 'publicodes'\nimport { ComponentProps, useContext } from 'react'\nimport {\n\tBasepathContext,\n\tDottedNameContext,\n\tRenderersContext,\n\tSupportedRenderers,\n} from './contexts'\nimport { useEngine } from './hooks'\n\nconst { encodeRuleName } = utils\n\ntype RuleLinkProps<Name extends string> = {\n\tdottedName: Name\n\tengine: Engine<Name>\n\tdocumentationPath: string\n\tdisplayIcon?: boolean\n\tcurrentEngineId?: number\n\tlinkComponent?: SupportedRenderers['Link']\n\tchildren?: React.ReactNode\n} & Omit<\n\tComponentProps<Required<SupportedRenderers>['Link']>,\n\t'to' | 'children'\n>\n\nexport function RuleLink<Name extends string>({\n\tdottedName,\n\tengine,\n\tcurrentEngineId,\n\tdocumentationPath,\n\tdisplayIcon = false,\n\tlinkComponent,\n\tchildren,\n\t...propsRest\n}: RuleLinkProps<Name>) {\n\tconst renderers = useContext(RenderersContext)\n\tconst dottedNameContext = utils.findCommonAncestor(\n\t\tuseContext(DottedNameContext) ?? dottedName,\n\t\tdottedName\n\t)\n\tconst Link = linkComponent || renderers.Link\n\tif (!Link) {\n\t\tthrow new Error('You must provide a <Link /> component.')\n\t}\n\tconst rule = engine.context.parsedRules[dottedName]\n\tconst newPath = documentationPath + '/' + encodeRuleName(dottedName)\n\tconst contextTitle = [\n\t\t...utils\n\t\t\t.ruleParents(dottedName)\n\t\t\t.reverse()\n\t\t\t.filter((name) => name.startsWith(`${dottedNameContext} . `))\n\t\t\t.map((name) => engine.context.parsedRules[name]?.title.trim()),\n\t\trule.title?.trim(),\n\t].join(' › ')\n\n\tif (!rule) {\n\t\tthrow new Error(`Unknown rule: ${dottedName}`)\n\t}\n\n\treturn (\n\t\t<Link\n\t\t\t{...propsRest}\n\t\t\taria-label={\n\t\t\t\tpropsRest['aria-label'] ??\n\t\t\t\t(rule.title &&\n\t\t\t\t\trule.title + ', voir les détails du calcul pour : ' + rule.title)\n\t\t\t}\n\t\t\tto={\n\t\t\t\tnewPath + (currentEngineId ? `?currentEngineId=${currentEngineId}` : '')\n\t\t\t}\n\t\t>\n\t\t\t{children || contextTitle || rule.dottedName.split(' . ').slice(-1)[0]}{' '}\n\t\t\t{displayIcon && rule.rawNode.icônes && <span>{rule.rawNode.icônes}</span>}\n\t\t</Link>\n\t)\n}\n\nexport function RuleLinkWithContext(\n\tprops: Omit<RuleLinkProps<string>, 'engine' | 'documentationPath'> & {\n\t\tuseSubEngine?: boolean\n\t}\n) {\n\tconst engine = useEngine()\n\tconst documentationPath = useContext(BasepathContext)\n\tconst currentEngineIdFromUrl =\n\t\ttypeof window !== 'undefined' &&\n\t\tnew URLSearchParams(window.location.search).get('currentEngineId')\n\tconst currentEngineId =\n\t\tprops.useSubEngine !== false\n\t\t\t? engine.subEngineId ||\n\t\t\t  (currentEngineIdFromUrl ? Number(currentEngineIdFromUrl) : undefined)\n\t\t\t: undefined\n\treturn (\n\t\t<RuleLink\n\t\t\tengine={engine}\n\t\t\tcurrentEngineId={currentEngineId}\n\t\t\tdocumentationPath={documentationPath}\n\t\t\t{...props}\n\t\t/>\n\t)\n}\n","import { EvaluatedNode } from 'publicodes/source/AST/types'\nimport { ReferenceNode } from 'publicodes/source/reference'\nimport { createContext, useContext, useState } from 'react'\nimport { styled } from 'styled-components'\nimport Explanation from '../Explanation'\nimport { RuleLinkWithContext } from '../RuleLink'\nimport { EngineContext } from '../contexts'\nimport { NodeValuePointer } from './common'\n\n// Un élément du graphe de calcul qui a une valeur interprétée (à afficher)\nexport default function Reference(\n\tnode: ReferenceNode & {\n\t\tdottedName: string\n\t} & EvaluatedNode\n) {\n\tconst engine = useContext(EngineContext)\n\tconst { dottedName, nodeValue, unit } = node\n\tconst rule = engine?.context.parsedRules[node.dottedName]\n\tif (!rule) {\n\t\tthrow new Error(`Unknown rule: ${dottedName}`)\n\t}\n\tconst [folded, setFolded] = useState(true)\n\tconst isFoldEnabled = useContext(UnfoldIsEnabledContext)\n\n\tif (\n\t\tnode.dottedName === node.contextDottedName + ' . ' + node.name &&\n\t\t!node.name.includes(' . ') &&\n\t\trule.virtualRule\n\t) {\n\t\treturn <Explanation node={engine?.evaluate(rule)} />\n\t}\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tflex: isFoldEnabled ? 1 : 'initial',\n\t\t\t\tflexDirection: 'column',\n\t\t\t\tmaxWidth: '100%',\n\t\t\t}}\n\t\t>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\talignItems: 'baseline',\n\t\t\t\t\tflexWrap: 'wrap',\n\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<RuleLinkWithContext dottedName={dottedName} />\n\n\t\t\t\t<div style={{ flex: 1, display: 'flex', alignItems: 'baseline' }}>\n\t\t\t\t\t{isFoldEnabled && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<UnfoldButton\n\t\t\t\t\t\t\t\tonClick={() => setFolded(!folded)}\n\t\t\t\t\t\t\t\taria-expanded={!folded}\n\t\t\t\t\t\t\t\taria-label={\n\t\t\t\t\t\t\t\t\tfolded\n\t\t\t\t\t\t\t\t\t\t? 'Déplier, afficher le détail'\n\t\t\t\t\t\t\t\t\t\t: 'Replier, afficher le détail'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{folded ? 'Déplier' : 'Replier'}\n\t\t\t\t\t\t\t</UnfoldButton>\n\t\t\t\t\t\t\t<StyledGuide />\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{nodeValue !== undefined && (\n\t\t\t\t\t\t<NodeValuePointer data={nodeValue} unit={unit} />\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>{' '}\n\t\t\t{!folded && (\n\t\t\t\t<div>\n\t\t\t\t\t<UnfoldIsEnabledContext.Provider value={false}>\n\t\t\t\t\t\t<Explanation node={engine?.evaluate(rule)} />\n\t\t\t\t\t</UnfoldIsEnabledContext.Provider>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport const UnfoldIsEnabledContext = createContext<boolean>(false)\n\nconst UnfoldButton = styled.button`\n\ttext-transform: none !important;\n\tmargin-left: 0.5rem;\n`\nconst StyledGuide = styled.div`\n\t@media (max-width: 500px) {\n\t\t/* border: none; */\n\t}\n\tmargin: 0.5rem;\n\tflex: 1;\n\tborder-bottom: 2px dotted lightgray;\n`\n","import { ASTNode, EvaluatedNode } from 'publicodes/source'\nimport { useContext, useMemo, useState } from 'react'\nimport { styled } from 'styled-components'\nimport Explanation from '../Explanation'\nimport { EngineContext } from '../contexts'\nimport { UnfoldIsEnabledContext } from './Reference'\nimport { Mecanism } from './common'\n\nexport default function DefaultInlineMecanism({\n\tsourceMap,\n\tnodeValue,\n\tunit,\n}: EvaluatedNode & {\n\tsourceMap: NonNullable<EvaluatedNode['sourceMap']>\n}) {\n\tconst { args, mecanismName } = sourceMap\n\n\tconst isChainableMecanism =\n\t\t'valeur' in args && mecanismName in args && Object.keys(args).length === 2\n\tconst isUnaryMecanism = 'valeur' in args && Object.keys(args).length === 1\n\n\treturn (\n\t\t<>\n\t\t\t{isChainableMecanism && <ListOrScalarExplanation node={args.valeur} />}\n\t\t\t<div style={{ paddingTop: '0.5rem' }}>\n\t\t\t\t<Mecanism name={mecanismName} value={nodeValue} unit={unit}>\n\t\t\t\t\t{isChainableMecanism ? (\n\t\t\t\t\t\t<ListOrScalarExplanation node={args[mecanismName]} />\n\t\t\t\t\t) : isUnaryMecanism ? (\n\t\t\t\t\t\t<ListOrScalarExplanation node={args.valeur} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{Object.entries(args).map(([key, value]) => (\n\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\talignItems: 'baseline',\n\t\t\t\t\t\t\t\t\t\tpadding: '0.25rem 0',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span>{key}&nbsp;:&nbsp;</span>\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t<ListOrScalarExplanation node={value} />\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t)}\n\t\t\t\t</Mecanism>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nfunction ListOrScalarExplanation({ node }: { node: ASTNode | Array<ASTNode> }) {\n\tif (Array.isArray(node)) {\n\t\treturn <Table explanation={node} />\n\t}\n\treturn <Explanation node={node} />\n}\n\n// We want to put non applicable rules a the bottom of list #1055\nconst isZeroOrNotApplicable = (x: ASTNode) => {\n\tconst nodeValue = useContext(EngineContext)?.evaluate(x).nodeValue\n\treturn nodeValue === null || nodeValue === 0\n}\n\nfunction Table({ explanation }) {\n\tconst [applicableExplanation, notApplicableExplanation] = explanation.reduce(\n\t\t(acc, x) => {\n\t\t\tacc[isZeroOrNotApplicable(x) ? 1 : 0].push(x)\n\t\t\treturn acc\n\t\t},\n\t\t[[], []]\n\t)\n\tconst [showNotApplicable, setShowNotApplicable] = useState(\n\t\tapplicableExplanation.length === 0\n\t)\n\tconst id = useMemo(\n\t\t() => 'notApplicableExplanation' + Math.random().toString(36).substring(7),\n\t\t[]\n\t)\n\treturn (\n\t\t<>\n\t\t\t<StyledContainer>\n\t\t\t\t{applicableExplanation.map((node: EvaluatedNode, i) => (\n\t\t\t\t\t<Row key={i} node={node} />\n\t\t\t\t))}\n\t\t\t</StyledContainer>\n\t\t\t{notApplicableExplanation.length > 0 &&\n\t\t\t\tapplicableExplanation.length !== 0 && (\n\t\t\t\t\t<StyledButtonContainer\n\t\t\t\t\t\tcss={`\n\t\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\t`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\taria-expanded={showNotApplicable}\n\t\t\t\t\t\t\taria-controls={id}\n\t\t\t\t\t\t\tonClick={() => setShowNotApplicable(!showNotApplicable)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{showNotApplicable\n\t\t\t\t\t\t\t\t? 'Cacher les valeurs non applicables'\n\t\t\t\t\t\t\t\t: `Afficher les valeurs non applicables`}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</StyledButtonContainer>\n\t\t\t\t)}\n\t\t\t{showNotApplicable && (\n\t\t\t\t<StyledContainer id={id}>\n\t\t\t\t\t{notApplicableExplanation.map((node: EvaluatedNode, i) => (\n\t\t\t\t\t\t<Row key={i} node={node} />\n\t\t\t\t\t))}\n\t\t\t\t</StyledContainer>\n\t\t\t)}\n\t\t</>\n\t)\n}\nconst StyledButtonContainer = styled.div`\n\tmargin: 0.5rem 0;\n\tmargin-left: 1.5rem;\n`\nconst StyledContainer = styled.ul`\n\tmargin: 0;\n\tmargin-left: 0.5rem;\n\tlist-style: disc !important;\n`\n\n/* La colonne peut au clic afficher une nouvelle colonne qui sera une autre somme imbriquée */\nfunction Row({ node }: { node: EvaluatedNode }) {\n\treturn (\n\t\t<StyledRow style={{ padding: '0.25rem 0' }}>\n\t\t\t<UnfoldIsEnabledContext.Provider value={true}>\n\t\t\t\t<Explanation node={node} />\n\t\t\t</UnfoldIsEnabledContext.Provider>\n\t\t</StyledRow>\n\t)\n}\n\nconst StyledRow = styled.li`\n\t> * {\n\t\twidth: 100%;\n\t}\n`\n","import { styled } from 'styled-components'\nimport Explanation from '../Explanation'\nimport { NodeValuePointer } from './common'\n\nexport default function Operation({ nodeValue, explanation, operator, unit }) {\n\tconst isUnaryOperation =\n\t\texplanation[0].nodeValue === 0 &&\n\t\toperator === '−' &&\n\t\texplanation[0].nodeKind === 'constant'\n\n\treturn (\n\t\t<StyledOperation className=\"operation\" role=\"math\">\n\t\t\t<span>(</span>\n\t\t\t{!isUnaryOperation && (\n\t\t\t\t<>\n\t\t\t\t\t<Explanation node={explanation[0]} />\n\t\t\t\t\t&nbsp;\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{operator}&nbsp;\n\t\t\t<Explanation node={explanation[1]} />\n\t\t\t{nodeValue != undefined && (\n\t\t\t\t<span className=\"result\">\n\t\t\t\t\t<small> =&nbsp;</small>\n\t\t\t\t\t<NodeValuePointer data={nodeValue} unit={unit} />\n\t\t\t\t</span>\n\t\t\t)}\n\t\t\t<span>)</span>\n\t\t</StyledOperation>\n\t)\n}\n\nconst StyledOperation = styled.div`\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tgap: 0.125rem;\n\t> .operation ::before,\n\t> .operation ::after {\n\t\tcontent: '';\n\t}\n\t.result {\n\t\tmargin-left: 0.2rem;\n\t}\n\t.operation .result {\n\t\tdisplay: none;\n\t}\n`\n","import { EvaluatedNode } from 'publicodes/source/AST/types'\nimport { styled } from 'styled-components'\nimport Explanation from '../Explanation'\nimport { Mecanism } from './common'\n\nexport default function Product(node: EvaluatedNode) {\n\tconst args = node.sourceMap?.args ?? {}\n\treturn (\n\t\t<Mecanism name=\"produit\" value={node.nodeValue} unit={node.unit}>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\talignItems: 'baseline',\n\t\t\t\t\tjustifyContent: 'flex-start',\n\t\t\t\t\tflexWrap: 'wrap',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div style={{ textAlign: 'right' }}>\n\t\t\t\t\t<Explanation node={args.assiette} />\n\t\t\t\t\t{args.plafond && (\n\t\t\t\t\t\t<PlafondSmall>\n\t\t\t\t\t\t\t<span>Plafonnée à :&nbsp;</span>\n\t\t\t\t\t\t\t<Explanation node={args.plafond} />\n\t\t\t\t\t\t</PlafondSmall>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{args.facteur && (\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\talignItems: 'baseline',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div style={{ fontSize: '110%', margin: '0 0.6rem' }}> × </div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Explanation node={args.facteur} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{args.taux && (\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\talignItems: 'baseline',\n\t\t\t\t\t\t\tjustifyContent: 'flex-end',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div style={{ fontSize: '110%', margin: '0 0.6rem' }}> × </div>\n\t\t\t\t\t\t<Explanation node={args.taux} />\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</Mecanism>\n\t)\n}\n\nconst PlafondSmall = styled.small`\n\tdisplay: flex;\n\tborder-left: 2px solid lightgray;\n\tpadding-left: 0.5rem;\n\talign-items: baseline;\n\tflex-wrap: wrap;\n`\n","import { capitalise0 } from 'publicodes'\nimport { styled } from 'styled-components'\nimport Explanation from '../Explanation'\nimport { DottedNameContext } from '../contexts'\n\nexport default function RuleMecanism({\n\trawNode,\n\texplanation,\n\tdottedName,\n\ttitle,\n\tvirtualRule,\n}) {\n\treturn (\n\t\t<Styled>\n\t\t\t<DottedNameContext.Provider value={dottedName}>\n\t\t\t\t<small>{capitalise0(virtualRule ? rawNode.nom : title)}</small>\n\t\t\t\t<StyledExplanation>\n\t\t\t\t\t<Explanation node={explanation.valeur} />\n\t\t\t\t</StyledExplanation>\n\t\t\t</DottedNameContext.Provider>\n\t\t</Styled>\n\t)\n}\n\nconst Styled = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\n\tborder-top-left-radius: 3px;\n\tmargin: 1rem 0;\n\t> small {\n\t\talign-self: flex-start;\n\t\tpadding: 0.125rem 0.5rem;\n\t\tborder: 1px solid #18457b;\n\t\tborder-bottom: none;\n\t\tposition: relative;\n\t\tcolor: #18457b;\n\t\tborder-top-right-radius: 3px;\n\t\tborder-top-left-radius: 3px;\n\t\tbackground-color: white;\n\t}\n`\n\nconst StyledExplanation = styled.div`\n\tborder: 1px solid #18457b;\n\tpadding: 1rem;\n`\n","import { styled } from 'styled-components'\nimport Explanation from '../Explanation'\n\nexport default function Texte({ nodeValue, unit, explanation }) {\n\treturn (\n\t\t<p>\n\t\t\t{explanation.map((element) =>\n\t\t\t\ttypeof element === 'string' ? (\n\t\t\t\t\telement\n\t\t\t\t) : (\n\t\t\t\t\t<Highlight>\n\t\t\t\t\t\t<Explanation node={element} />\n\t\t\t\t\t</Highlight>\n\t\t\t\t)\n\t\t\t)}\n\t\t</p>\n\t)\n}\n\nconst Highlight = styled.span`\n\tborder: 1px solid rgba(0, 0, 0, 0.1);\n\tpadding: 0.2rem;\n\tposition: relative;\n\tborder-radius: 0.15rem;\n\tbackground-color: rgba(0, 0, 0, 0.05);\n`\n","import { EvaluatedNode } from 'publicodes'\nimport type { VariationNode } from 'publicodes/source/mecanisms/variations'\nimport { useState } from 'react'\nimport { styled } from 'styled-components'\nimport Explanation from '../Explanation'\nimport writtenNumbers from '../writtenNumbers'\nimport { CapitalizeFirstLetter, InlineMecanismName, Mecanism } from './common'\n\nexport default function Variations({\n\tnodeValue,\n\texplanation,\n\tunit,\n}: VariationNode & EvaluatedNode) {\n\tconst [expandedVariation, toggleVariation] = useState<undefined | number>(\n\t\tundefined\n\t)\n\treturn (\n\t\t<StyledComponent>\n\t\t\t<Mecanism\n\t\t\t\tname=\"variations\"\n\t\t\t\tdisplayName={false}\n\t\t\t\tunit={unit}\n\t\t\t\tvalue={nodeValue}\n\t\t\t>\n\t\t\t\t<>\n\t\t\t\t\t<CapitalizeFirstLetter>\n\t\t\t\t\t\t{writtenNumbers[explanation.length]}{' '}\n\t\t\t\t\t\t<InlineMecanismName name=\"variations\" /> possibles :\n\t\t\t\t\t</CapitalizeFirstLetter>\n\t\t\t\t\t<ol>\n\t\t\t\t\t\t{explanation.map(({ condition, consequence }, i: number) => {\n\t\t\t\t\t\t\tconst satisfied =\n\t\t\t\t\t\t\t\t'nodeValue' in condition &&\n\t\t\t\t\t\t\t\tcondition.nodeValue !== false &&\n\t\t\t\t\t\t\t\tcondition.nodeValue !== null\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\ttransition: 'all 0.2s',\n\t\t\t\t\t\t\t\t\t\topacity:\n\t\t\t\t\t\t\t\t\t\t\texpandedVariation === i ||\n\t\t\t\t\t\t\t\t\t\t\tsatisfied ||\n\t\t\t\t\t\t\t\t\t\t\tnodeValue == undefined\n\t\t\t\t\t\t\t\t\t\t\t\t? 1\n\t\t\t\t\t\t\t\t\t\t\t\t: 0.8,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{!satisfied && (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<em>non applicable </em>\n\t\t\t\t\t\t\t\t\t\t\t{expandedVariation !== i ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"ui__ link-button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => toggleVariation(i)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tdétails ▶️\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"ui__ link-button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => toggleVariation(undefined)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\treplier 🔽\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{(expandedVariation === i || satisfied) && (\n\t\t\t\t\t\t\t\t\t\t<div style={{ margin: '1rem 0' }}>\n\t\t\t\t\t\t\t\t\t\t\t{!condition.isDefault && (\n\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tflexWrap: 'wrap',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talignItems: 'baseline',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginBottom: '0.4rem',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tSi :&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Explanation node={condition} />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: 'fit-content',\n\t\t\t\t\t\t\t\t\t\t\t\t\tflexWrap: 'wrap',\n\t\t\t\t\t\t\t\t\t\t\t\t\talignItems: 'baseline',\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`consequenceType ${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsatisfied ? 'satisfied' : ''\n\t\t\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{!condition.isDefault ? 'Alors' : 'Sinon'} :&nbsp;\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`consequenceContent ${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsatisfied ? 'satisfied' : ''\n\t\t\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{consequence && <Explanation node={consequence} />}\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ol>\n\t\t\t\t</>\n\t\t\t</Mecanism>\n\t\t</StyledComponent>\n\t)\n}\n\nconst StyledComponent = styled.div`\n\t.mecanism > ol {\n\t\tmargin-left: 1rem;\n\t\tmargin-top: 1rem;\n\t}\n\t.mecanism > ol > li {\n\t\tmargin-bottom: 0.3em;\n\t}\n\t.mecanism > ol > li span.consequenceType {\n\t\tmargin: 0 0.6em 0.6em 0;\n\t}\n\n\t.mecanism > ol > li span.consequenceType.satisfied {\n\t\tbackground: yellow;\n\t}\n`\n","import { transformAST } from 'publicodes'\nimport { useEngine } from './hooks'\nimport Arrondi from './mecanisms/Arrondi'\nimport Avec from './mecanisms/Avec'\nimport Barème from './mecanisms/Barème'\nimport Composantes from './mecanisms/Composantes'\nimport Condition from './mecanisms/Condition'\nimport DefaultInlineMecanism from './mecanisms/DefaultInlineMecanism'\nimport Durée from './mecanisms/Durée'\nimport EstNonApplicable from './mecanisms/EstNonApplicable'\nimport EstNonDéfini from './mecanisms/EstNonDéfini'\nimport Grille from './mecanisms/Grille'\nimport InversionNumérique from './mecanisms/InversionNumérique'\nimport Operation from './mecanisms/Operation'\nimport Product from './mecanisms/Product'\nimport Recalcul from './mecanisms/Recalcul'\nimport Reference from './mecanisms/Reference'\nimport Replacement from './mecanisms/Replacement'\nimport ReplacementRule from './mecanisms/ReplacementRule'\nimport Rule from './mecanisms/Rule'\nimport RésoudreRéférenceCirculaire from './mecanisms/RésoudreRéférenceCirculaire'\nimport Situation from './mecanisms/Situation'\nimport TauxProgressif from './mecanisms/TauxProgressif'\nimport Texte from './mecanisms/Texte'\nimport UnePossibilité from './mecanisms/UnePossibilité'\nimport Unité from './mecanisms/Unité'\nimport Variations from './mecanisms/Variations'\nimport { ConstantNode } from './mecanisms/common'\n\nconst UIComponents = {\n\tconstant: ConstantNode,\n\tarrondi: Arrondi,\n\tbarème: Barème,\n\tavec: Avec,\n\tcomposantes: Composantes,\n\tdurée: Durée,\n\tproduit: Product,\n\tgrille: Grille,\n\tinversion: InversionNumérique,\n\toperation: Operation,\n\ttexte: Texte,\n\treference: Reference,\n\t'est non applicable': EstNonApplicable,\n\t'est non défini': EstNonDéfini,\n\trule: Rule,\n\tcondition: Condition,\n\t'dans la situation': Situation,\n\trecalcul: Recalcul,\n\treplacement: Replacement,\n\treplacementRule: ReplacementRule,\n\t'taux progressif': TauxProgressif,\n\t'une possibilité': UnePossibilité,\n\t'résoudre référence circulaire': RésoudreRéférenceCirculaire,\n\tunité: Unité,\n\t'variable manquante': (node) => <Explanation node={node.explanation} />,\n\tvariations: Variations,\n} as const\n\nexport default function Explanation({ node }) {\n\tconst visualisationKind = node.sourceMap?.mecanismName ?? node.nodeKind\n\tconst engine = useEngine()\n\tconst evaluateEverything = transformAST((node) => {\n\t\tif ('nodeValue' in node || 'replacementRule' === node.nodeKind) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn engine.evaluateNode(node)\n\t}, false)\n\tconst displayedNode = evaluateEverything(node)\n\tconst Component =\n\t\tUIComponents[visualisationKind] ??\n\t\t(node.sourceMap?.mecanismName ? DefaultInlineMecanism : undefined)\n\n\tif (!Component) {\n\t\tthrow new Error(`Unknown visualisation: ${visualisationKind}`)\n\t}\n\n\treturn <Component {...displayedNode} />\n}\n","import Explanation from '../Explanation'\nimport { InfixMecanism } from './common'\n\nexport default function MecanismArrondi({ explanation }) {\n\treturn (\n\t\t<InfixMecanism value={explanation.valeur}>\n\t\t\t<p>\n\t\t\t\t<strong>Arrondi : </strong>\n\t\t\t\t<Explanation node={explanation.arrondi} />\n\t\t\t</p>\n\t\t</InfixMecanism>\n\t)\n}\n","import Explanation from '../Explanation'\nimport { Mecanism } from './common'\n\nexport default function MecanismAvec(node) {\n\treturn (\n\t\t<>\n\t\t\t<Explanation node={node.explanation.valeur} />\n\t\t\t<div style={{ paddingTop: '0.5rem' }}>\n\t\t\t\t<Mecanism name=\"avec\" value={node.nodeValue} unit={node.unit}>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{Object.entries(node.explanation.avec).map(([name, value]) => (\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t{name}&nbsp;= <Explanation node={value} />\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</Mecanism>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n","import Explanation from '../Explanation'\nimport writtenNumbers from '../writtenNumbers'\nimport { CapitalizeFirstLetter, InlineMecanismName, Mecanism } from './common'\n\nexport default function Composantes({\n\tnodeValue,\n\texplanation,\n\tunit,\n\tsourceMap,\n}) {\n\treturn (\n\t\t<Mecanism\n\t\t\tname=\"composantes\"\n\t\t\tdisplayName={false}\n\t\t\tvalue={nodeValue}\n\t\t\tunit={unit}\n\t\t>\n\t\t\t<CapitalizeFirstLetter>\n\t\t\t\tLa somme de {writtenNumbers[explanation.length]}{' '}\n\t\t\t\t<InlineMecanismName name=\"composantes\" /> :\n\t\t\t</CapitalizeFirstLetter>\n\t\t\t<ol>\n\t\t\t\t{sourceMap.args.valeur.map((c, i) => [\n\t\t\t\t\t<li key={i}>\n\t\t\t\t\t\t<Explanation node={c} />\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\t\t\tfontSize: '2.6rem',\n\t\t\t\t\t\t\t\tmargin: '0.4em 0 0.2em',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{i === explanation.length - 1 ? null : '+'}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>,\n\t\t\t\t])}\n\t\t\t</ol>\n\t\t</Mecanism>\n\t)\n}\n","import DefaultInlineMecanism from './DefaultInlineMecanism'\n\nexport default function MecanismDurée(node) {\n\treturn (\n\t\t<DefaultInlineMecanism\n\t\t\t{...node}\n\t\t\tsourceMap={{ mecanismName: node.nodeKind, args: node.explanation }}\n\t\t/>\n\t)\n}\n","import { BarèmeAttributes, TrancheTable, StyledComponent } from './Barème'\nimport { Mecanism } from './common'\n\nexport default function Grille({ nodeValue, explanation, unit }) {\n\treturn (\n\t\t<StyledComponent>\n\t\t\t<Mecanism name=\"grille\" value={nodeValue} unit={unit}>\n\t\t\t\t<ul className=\"properties\">\n\t\t\t\t\t<BarèmeAttributes explanation={explanation} />\n\t\t\t\t\t<TrancheTable\n\t\t\t\t\t\ttranches={explanation.tranches}\n\t\t\t\t\t\tmultiplicateur={explanation.multiplicateur}\n\t\t\t\t\t/>\n\t\t\t\t</ul>\n\t\t\t</Mecanism>\n\t\t</StyledComponent>\n\t)\n}\n","import Explanation from '../Explanation'\nimport { Mecanism } from './common'\n\nexport default function InversionNumérique({ nodeValue, explanation }) {\n\treturn (\n\t\t<Mecanism name=\"inversion numérique\" value={nodeValue}>\n\t\t\t{explanation.inversionFailed ? (\n\t\t\t\t<>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tCette valeur devrait pouvoir être estimée à partir d'une autre\n\t\t\t\t\t\tvariable qui possède une formule de calcul et dont la valeur a été\n\t\t\t\t\t\tfixée dans la simulation :\n\t\t\t\t\t</p>\n\t\t\t\t\t<Explanation node={explanation.inversionGoal} />\n\t\t\t\t\t<p>\n\t\t\t\t\t\tMalheureusement, il a été impossible de retrouver une valeur pour\n\t\t\t\t\t\tcette formule qui permette d'atterrir sur la valeur demandée.\n\t\t\t\t\t</p>\n\t\t\t\t</>\n\t\t\t) : explanation.inversionGoal ? (\n\t\t\t\t<>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tCette valeur a été estimée à partir d'une autre variable qui possède\n\t\t\t\t\t\tune formule de calcul et dont la valeur a été fixée dans la\n\t\t\t\t\t\tsimulation :\n\t\t\t\t\t</p>\n\t\t\t\t\t<Explanation node={explanation.inversionGoal} />\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tCette formule de calcul n'existe pas, mais on peut la calculer par\n\t\t\t\t\t\tinversion en utilisant les formules des règles suivantes :\n\t\t\t\t\t</p>\n\t\t\t\t\t<ul id=\"inversionsPossibles\">\n\t\t\t\t\t\t{explanation.inversionCandidates.map((el) => (\n\t\t\t\t\t\t\t<li key={el.dottedName}>\n\t\t\t\t\t\t\t\t<Explanation node={el} />\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</Mecanism>\n\t)\n}\n","import DefaultInlineMecanism from './DefaultInlineMecanism'\n\nexport default function MecanismCondition(node) {\n\treturn (\n\t\t<DefaultInlineMecanism\n\t\t\t{...node}\n\t\t\tsourceMap={{\n\t\t\t\tmecanismName: node.nodeKind,\n\t\t\t\targs: { valeur: node.explanation },\n\t\t\t}}\n\t\t/>\n\t)\n}\n","import DefaultInlineMecanism from './DefaultInlineMecanism'\n\nexport default function MecanismCondition(node) {\n\treturn (\n\t\t<DefaultInlineMecanism\n\t\t\t{...node}\n\t\t\tsourceMap={{\n\t\t\t\tmecanismName: node.nodeKind,\n\t\t\t\targs: { valeur: node.explanation },\n\t\t\t}}\n\t\t/>\n\t)\n}\n","import DefaultInlineMecanism from './DefaultInlineMecanism'\n\nexport default function MecanismCondition(node) {\n\treturn (\n\t\t<DefaultInlineMecanism\n\t\t\t{...node}\n\t\t\tsourceMap={{ mecanismName: node.nodeKind, args: node.explanation }}\n\t\t/>\n\t)\n}\n","import { RuleNode } from 'publicodes/source'\nimport { useContext } from 'react'\nimport { EngineContext } from '../contexts'\nimport Explanation from '../Explanation'\nimport { InfixMecanism } from './common'\n\nexport default function MecanismSituation({ sourceMap }) {\n\tconst engine = useContext(EngineContext)\n\tconst situationValeur = engine?.evaluate(sourceMap.args['dans la situation'])\n\treturn situationValeur?.nodeValue !== undefined ? (\n\t\t<InfixMecanism prefixed value={sourceMap.args['valeur']}>\n\t\t\t<p>\n\t\t\t\t<strong>Valeur renseignée dans la simulation : </strong>\n\t\t\t\t<Explanation node={(situationValeur as RuleNode).explanation.valeur} />\n\t\t\t</p>\n\t\t</InfixMecanism>\n\t) : (\n\t\t<Explanation node={sourceMap.args['valeur']} />\n\t)\n}\n","import { EvaluatedNode } from 'publicodes'\nimport { RecalculNode } from 'publicodes/source/mecanisms/recalcul'\nimport { EngineContext } from '../contexts'\nimport Explanation from '../Explanation'\nimport { useEngine } from '../hooks'\nimport { RuleLinkWithContext } from '../RuleLink'\nimport { Mecanism } from './common'\n\nexport default function Recalcul({\n\tnodeValue,\n\texplanation,\n\tunit,\n}: RecalculNode & EvaluatedNode) {\n\tconst engine = useEngine()\n\tconst recalculEngine = explanation.subEngineId\n\t\t? engine.subEngines[explanation.subEngineId]\n\t\t: engine\n\treturn (\n\t\t<Mecanism name=\"recalcul\" value={nodeValue} unit={unit}>\n\t\t\t<>\n\t\t\t\t{explanation.recalculNode && (\n\t\t\t\t\t<EngineContext.Provider value={recalculEngine}>\n\t\t\t\t\t\tRecalcul de la valeur de{' '}\n\t\t\t\t\t\t<Explanation node={explanation.recalculNode} /> avec la situation\n\t\t\t\t\t\tsuivante :\n\t\t\t\t\t</EngineContext.Provider>\n\t\t\t\t)}\n\t\t\t\t<ul>\n\t\t\t\t\t{explanation.amendedSituation.map(([origin, replacement]) => (\n\t\t\t\t\t\t<li key={origin.dottedName}>\n\t\t\t\t\t\t\t<RuleLinkWithContext dottedName={origin.dottedName as string} /> ={' '}\n\t\t\t\t\t\t\t<Explanation node={replacement} />\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</>\n\t\t</Mecanism>\n\t)\n}\n","import { EvaluatedNode } from 'publicodes/source/AST/types'\nimport { VariationNode } from 'publicodes/source/mecanisms/variations'\nimport React, { useEffect, useRef } from 'react'\nimport Explanation from '../Explanation'\n\nexport default function Replacement(node: VariationNode & EvaluatedNode) {\n\tconst applicableReplacement = node.explanation.find(\n\t\t({ condition }) =>\n\t\t\t'nodeValue' in condition &&\n\t\t\tcondition.nodeValue !== false &&\n\t\t\tcondition.nodeValue !== null\n\t)?.consequence\n\tconst replacedNode = node.explanation.slice(-1)[0].consequence as {\n\t\tdottedName: string\n\t}\n\treturn <Explanation node={applicableReplacement ?? replacedNode} />\n\n\t//  TODO : remettre le bouton pour les remplacements mais de manière plus discrète et accessible\n\t// const [displayReplacements, changeDisplayReplacement] = useState(false)\n\n\t// return (\n\t// \t<span style={{ display: 'inline-flex' }}>\n\t// \t\t{applicableReplacement && replacedNode !== applicableReplacement && (\n\t// \t\t\t<>\n\t// \t\t\t\t&nbsp;\n\t// \t\t\t\t<button\n\t// \t\t\t\t\tonClick={() => changeDisplayReplacement(!displayReplacements)}\n\t// \t\t\t\t>\n\t// \t\t\t\t\t🔄\n\t// \t\t\t\t</button>{' '}\n\t// \t\t\t\t&nbsp;\n\t// \t\t\t</>\n\t// \t\t)}\n\t// \t\t<span style={{ flex: 1, display: 'inline-flex' }}>\n\t// \t\t\t<Explanation node={applicableReplacement ?? replacedNode} />\n\t// \t\t</span>\n\t// \t\t{displayReplacements && (\n\t// \t\t\t<Overlay onClose={() => changeDisplayReplacement(false)}>\n\t// \t\t\t\t<h3>Remplacement existant</h3>\n\t// \t\t\t\t<p>\n\t// \t\t\t\t\tUn ou plusieurs remplacements ciblent la règle{' '}\n\t// \t\t\t\t\t<RuleLinkWithContext dottedName={replacedNode.dottedName} /> à cet\n\t// \t\t\t\t\tendroit. Sa valeur est calculée selon la formule suivante :\n\t// \t\t\t\t</p>\n\n\t// \t\t\t\t<Variations {...node} />\n\t// \t\t\t\t<div style={{ marginTop: '1rem' }} />\n\t// \t\t\t\t<p>\n\t// \t\t\t\t\t<a href=\"https://publi.codes/documentation/principes-de-base#remplacement\">\n\t// \t\t\t\t\t\tEn savoir plus sur le remplacement dans publicodes\n\t// \t\t\t\t\t</a>\n\t// \t\t\t\t</p>\n\t// \t\t\t</Overlay>\n\t// \t\t)}\n\t// \t</span>\n\t// )\n}\n\nfunction Overlay({\n\tchildren,\n\tonClose,\n}: {\n\tchildren: React.ReactNode\n\tonClose: () => void\n}) {\n\tconst divRef = useRef<HTMLDivElement>(null)\n\n\tuseEffect(() => {\n\t\tconst hideOnClickOutside = (click) => {\n\t\t\tif (!divRef.current) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (divRef.current.contains(click.target)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tonClose()\n\t\t}\n\t\twindow.addEventListener('click', hideOnClickOutside)\n\t\treturn () => window.removeEventListener('click', hideOnClickOutside)\n\t}, [])\n\treturn (\n\t\t<div\n\t\t\tref={divRef}\n\t\t\tstyle={{\n\t\t\t\tbackgroundColor: 'white',\n\t\t\t\tzIndex: 3,\n\t\t\t\tboxShadow: '0px 1px 2px rgba(0,0,0,0.25)',\n\t\t\t\tposition: 'absolute',\n\t\t\t\tpadding: '1rem',\n\t\t\t\tborder: '1px solid rgba(0,0,0,0.25)',\n\t\t\t\tborderRadius: '0.3rem',\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t)\n}\n","import { ReplacementRule } from 'publicodes/source/replacement'\nimport Explanation from '../Explanation'\n\nexport default function ReplacementMecanism(node: ReplacementRule) {\n\treturn (\n\t\t<span>\n\t\t\tRemplace <Explanation node={node.replacedReference} />{' '}\n\t\t\t{node.rawNode.par && (\n\t\t\t\t<>\n\t\t\t\t\tpar <Explanation node={node.replacementNode} />\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{node.rawNode.dans && (\n\t\t\t\t<>\n\t\t\t\t\tdans{' '}\n\t\t\t\t\t{node.whiteListedNames\n\t\t\t\t\t\t.map((child, i) => <Explanation key={i} node={child} />)\n\t\t\t\t\t\t.join(', ')}\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{node.rawNode['sauf dans'] && (\n\t\t\t\t<>\n\t\t\t\t\tsauf dans{' '}\n\t\t\t\t\t{node.blackListedNames\n\t\t\t\t\t\t.map((child, i) => <Explanation key={i} node={child} />)\n\t\t\t\t\t\t.join(', ')}\n\t\t\t\t</>\n\t\t\t)}\n\t\t</span>\n\t)\n}\n","import { BarèmeAttributes, StyledComponent, TrancheTable } from './Barème'\nimport { Mecanism } from './common'\n\nexport default function TauxProgressif({ nodeValue, explanation, unit }) {\n\treturn (\n\t\t<StyledComponent>\n\t\t\t<Mecanism name=\"taux progressif\" value={nodeValue} unit={unit}>\n\t\t\t\t<ul className=\"properties\">\n\t\t\t\t\t<BarèmeAttributes explanation={explanation} />\n\t\t\t\t\t<TrancheTable\n\t\t\t\t\t\ttranches={explanation.tranches}\n\t\t\t\t\t\tmultiplicateur={explanation.multiplicateur}\n\t\t\t\t\t/>\n\t\t\t\t</ul>\n\t\t\t</Mecanism>\n\t\t</StyledComponent>\n\t)\n}\n","import Explanation from '../Explanation'\nimport { Mecanism } from './common'\n\nexport default function UnePossibilitéMecanism({ explanation }) {\n\treturn (\n\t\t<Mecanism name=\"une possibilité parmi\" value={undefined}>\n\t\t\t<ul>\n\t\t\t\t{explanation.map((node, i) => (\n\t\t\t\t\t<li key={i}>\n\t\t\t\t\t\t<Explanation node={node} />\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</Mecanism>\n\t)\n}\n","import Explanation from '../Explanation'\nimport { Mecanism } from './common'\n\nexport default function MecanismRésoudreRéférenceCirculaire({ explanation }) {\n\treturn (\n\t\t<Mecanism\n\t\t\tname=\"résoudre la référence circulaire\"\n\t\t\tvalue={explanation.valeur}\n\t\t>\n\t\t\t<p>\n\t\t\t\t{' '}\n\t\t\t\tCette valeur a été retrouvé en résolvant la référence circulaire dans la\n\t\t\t\tformule ci dessous :{' '}\n\t\t\t</p>\n\n\t\t\t<Explanation node={explanation.valeur} />\n\t\t</Mecanism>\n\t)\n}\n","import Explanation from '../Explanation'\nimport { InfixMecanism } from './common'\nimport { formatValue, serializeUnit } from 'publicodes'\n\nexport default function MecanismUnité({ nodeValue, explanation, unit }) {\n\tif (explanation.nodeKind === 'constant') {\n\t\treturn formatValue({ nodeValue, unit })\n\t} else if (explanation.nodeKind === 'reference') {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Explanation node={explanation} />\n\t\t\t\t&nbsp;{serializeUnit(unit)}\n\t\t\t</>\n\t\t)\n\t} else {\n\t\treturn (\n\t\t\t<InfixMecanism value={explanation}>\n\t\t\t\t<p>\n\t\t\t\t\t<strong>Unité : </strong>\n\t\t\t\t\t{serializeUnit(unit)}\n\t\t\t\t</p>\n\t\t\t</InfixMecanism>\n\t\t)\n\t}\n}\n","import Engine, { formatValue, utils } from 'publicodes'\nconst { encodeRuleName } = utils\n\ntype Props = { dottedName: string; engine: Engine }\n\nexport default function RuleSource({ engine, dottedName }: Props) {\n\tconst href = useRuleSource(engine, dottedName)\n\n\tif (typeof window !== 'undefined' && window.location.host === 'publi.codes') {\n\t\treturn null\n\t}\n\n\tconst linkLabel = 'Afficher la règle dans le bac à sable Publicodes'\n\n\treturn (\n\t\t<p style={{ textAlign: 'right' }}>\n\t\t\t<a\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\thref={href}\n\t\t\t\taria-label={`${linkLabel}, nouvelle fenêtre`}\n\t\t\t>\n\t\t\t\t<span aria-hidden>✍️</span> {linkLabel}\n\t\t\t</a>\n\t\t</p>\n\t)\n}\n\nexport const useRuleSource = (engine: Engine, dottedName: string) => {\n\t// Array.from is a workaround for https://github.com/facebook/docusaurus/issues/7606#issuecomment-1330452598\n\tconst dependencies = Array.from(\n\t\tengine.context.referencesMaps.referencesIn.get(dottedName) ?? []\n\t)\n\n\tconst node = engine.evaluateNode(engine.context.parsedRules[dottedName])\n\n\tconst rules = {\n\t\t[dottedName]: Object.fromEntries(\n\t\t\tObject.entries(node.rawNode).filter(([key]) => key !== 'nom')\n\t\t),\n\t}\n\n\t// When we import a rule in the Publicodes Studio, we need to provide a\n\t// simplified definition of its dependencies to avoid undefined references.\n\tconst situation = Object.fromEntries(\n\t\tdependencies\n\t\t\t.filter((name) => name !== dottedName && !name.endsWith(' . $SITUATION'))\n\t\t\t.map((dottedName) => [dottedName, formatValueForStudio(node)])\n\t)\n\n\tconst source = encodeURIComponent(JSON.stringify({ rules, situation }))\n\n\tconst baseURL = location.hostname === 'localhost' ? '' : 'https://publi.codes'\n\n\treturn `${baseURL}/studio/${encodeRuleName(dottedName)}#${source}`\n}\n\n// TODO: This formating function should be in the core code. We need to think\n// about the different options of the formatting options and our use cases\n// (putting a value in the URL #1169, importing a value in the Studio, showing a value\n// on screen)\nfunction formatValueForStudio(node: Parameters<typeof formatValue>[0]) {\n\tconst base = formatValue(node)\n\t\t.replace(/\\s\\/\\s/g, '/')\n\t\t.replace(/(\\d)\\s(\\d)/g, '$1$2')\n\t\t.replace(',', '.')\n\tif (base.match(/^[0-9]/) || base === 'Oui' || base === 'Non') {\n\t\treturn base.toLowerCase()\n\t} else if (base === '-') {\n\t\treturn 'non'\n\t} else {\n\t\treturn `'${base}'`\n\t}\n}\n","import Engine, { EvaluatedNode, RuleNode, utils } from 'publicodes'\nimport { useContext } from 'react'\nimport { styled } from 'styled-components'\nimport Explanation from '../Explanation'\nimport { RuleLinkWithContext } from '../RuleLink'\nimport { RenderersContext } from '../contexts'\nimport RuleSource from './RuleSource'\n\nconst Ul = styled.ul`\n\tpadding: 0;\n\tmax-height: 400px;\n\toverflow: auto;\n\tlist-style: none;\n`\n\nconst Li = styled.li`\n\tposition: relative;\n\tpadding-left: 1.5rem;\n\n\t&::before {\n\t\tcontent: '●';\n\t\tfont-size: 80%;\n\t\tdisplay: inline-block;\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\twidth: 1.5rem;\n\t\ttext-align: center;\n\t\tcolor: #b3b3b3;\n\t\tmargin-bottom: 0.5rem;\n\t}\n`\n\nexport function DeveloperAccordion({\n\trule,\n\tengine,\n\tdottedName,\n\tsituation = {},\n\tapiDocumentationUrl,\n\tapiEvaluateUrl,\n\tnpmPackage,\n}: {\n\trule: EvaluatedNode & { nodeKind: 'rule' }\n\tengine: Engine\n\tdottedName: string\n\tsituation?: Record<string, unknown>\n\tapiDocumentationUrl?: string\n\tapiEvaluateUrl?: string\n\tnpmPackage?: string\n}) {\n\tconst { Accordion } = useContext(RenderersContext)\n\n\tconst accordionItems = [\n\t\t{\n\t\t\ttitle: 'Règle et situation',\n\t\t\tid: 'rule-situation',\n\t\t\tchildren: (\n\t\t\t\t<>\n\t\t\t\t\t<ActualRule engine={engine} dottedName={dottedName} />\n\n\t\t\t\t\t<ActualSituation situation={situation} />\n\t\t\t\t</>\n\t\t\t),\n\t\t},\n\t\t(apiDocumentationUrl && apiEvaluateUrl) || npmPackage\n\t\t\t? {\n\t\t\t\t\ttitle:\n\t\t\t\t\t\t'Réutiliser ce calcul (' +\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tapiDocumentationUrl && apiEvaluateUrl ? 'API REST' : null,\n\t\t\t\t\t\t\tnpmPackage ? 'Paquet NPM' : null,\n\t\t\t\t\t\t]\n\t\t\t\t\t\t\t.filter((x) => x !== null)\n\t\t\t\t\t\t\t.join(' / ') +\n\t\t\t\t\t\t')',\n\t\t\t\t\tid: 'usage',\n\t\t\t\t\tchildren: (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{utils.isExperimental(\n\t\t\t\t\t\t\t\tengine.baseContext.parsedRules,\n\t\t\t\t\t\t\t\tdottedName\n\t\t\t\t\t\t\t) && (\n\t\t\t\t\t\t\t\t<StyledWarning>\n\t\t\t\t\t\t\t\t\t<h4>⚠️ Cette règle est tagguée comme experimentale ⚠️</h4>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\tCela veut dire qu'elle peut être modifiée, renommée, ou\n\t\t\t\t\t\t\t\t\t\tsupprimée sans qu'il n'y ait de changement de version\n\t\t\t\t\t\t\t\t\t\tmajeure dans l'API.\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</StyledWarning>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{npmPackage && (\n\t\t\t\t\t\t\t\t<PackageUsage\n\t\t\t\t\t\t\t\t\trule={rule}\n\t\t\t\t\t\t\t\t\tsituation={situation}\n\t\t\t\t\t\t\t\t\tdottedName={dottedName}\n\t\t\t\t\t\t\t\t\tnpmPackage={npmPackage}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{apiDocumentationUrl && apiEvaluateUrl && (\n\t\t\t\t\t\t\t\t<ApiUsage\n\t\t\t\t\t\t\t\t\tsituation={situation}\n\t\t\t\t\t\t\t\t\tdottedName={dottedName}\n\t\t\t\t\t\t\t\t\tapiDocumentationUrl={apiDocumentationUrl}\n\t\t\t\t\t\t\t\t\tapiEvaluateUrl={apiEvaluateUrl}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t),\n\t\t\t  }\n\t\t\t: null,\n\t\t{\n\t\t\ttitle: 'Dépendances et effets de la règle',\n\t\t\tid: 'dependencies-effects',\n\t\t\tchildren: (\n\t\t\t\t<>\n\t\t\t\t\t<MissingVars selfMissing={Object.keys(rule.missingVariables)} />\n\n\t\t\t\t\t<ReverseMissing\n\t\t\t\t\t\tengine={engine}\n\t\t\t\t\t\tdottedName={dottedName}\n\t\t\t\t\t\truleIsNotDefined={rule.nodeValue === undefined}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Effect\n\t\t\t\t\t\tengine={engine}\n\t\t\t\t\t\tdottedName={dottedName}\n\t\t\t\t\t\treplacements={rule.replacements}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t),\n\t\t},\n\t].filter(<T,>(elem: T | null): elem is T => elem !== null)\n\n\treturn <Accordion items={accordionItems}></Accordion>\n}\n\nfunction ActualRule({\n\tengine,\n\tdottedName,\n}: {\n\tengine: Engine<string>\n\tdottedName: string\n}) {\n\tconst { Code } = useContext(RenderersContext)\n\n\treturn (\n\t\t<section>\n\t\t\t<h4>Règle actuelle</h4>\n\t\t\t<Code tabs={{ dottedName }} />\n\t\t\t<RuleSource dottedName={dottedName} engine={engine} />\n\t\t</section>\n\t)\n}\n\nfunction ActualSituation({\n\tsituation,\n}: {\n\tsituation: Record<string, unknown>\n}) {\n\tconst { Code } = useContext(RenderersContext)\n\n\tconst keys = Object.keys(situation)\n\n\tconst tabs = {\n\t\tjson: JSON.stringify(situation, null, 2),\n\t}\n\n\treturn (\n\t\t<section>\n\t\t\t<h4>Situation actuelle</h4>\n\t\t\t{keys.length ? (\n\t\t\t\t<p>\n\t\t\t\t\tVoici les données que vous avez saisies dans notre simulateur sous\n\t\t\t\t\tforme de JSON.\n\t\t\t\t</p>\n\t\t\t) : (\n\t\t\t\t<p>\n\t\t\t\t\tVotre situation est pour l'instant vide, vous n'avez probablement pas\n\t\t\t\t\tencore fait de simulation.\n\t\t\t\t</p>\n\t\t\t)}\n\t\t\t<Code tabs={tabs} />\n\t\t</section>\n\t)\n}\n\nconst LINK_NPM_LABEL = 'Retrouvez ce paquet sur NPM'\nconst LINK_PUBLICODES_LABEL = 'moteur Publicodes'\n\nfunction PackageUsage({\n\trule,\n\tsituation,\n\tdottedName,\n\tnpmPackage,\n}: {\n\trule: EvaluatedNode & { nodeKind: 'rule' }\n\tsituation: Record<string, unknown>\n\tdottedName: string\n\tnpmPackage: string\n}) {\n\tconst { Code, Link } = useContext(RenderersContext)\n\n\tconst tabs = {\n\t\tnpmPackage: `// npm i publicodes ${npmPackage}\n\nimport Engine, { formatValue } from 'publicodes'\nimport rules from '${npmPackage}'\n\nconst engine = new Engine(rules)\nengine.setSituation(${JSON.stringify(situation, null, 2)})\n\n// ${rule.title}\nconst evaluation = engine.evaluate(${JSON.stringify(dottedName)})\n\nconsole.log(formatValue(evaluation))\n`,\n\t}\n\n\treturn (\n\t\t<section>\n\t\t\t<h4>Lancer un calcul avec Publicodes</h4>\n\t\t\t<p>\n\t\t\t\tVous pouvez installer notre package de règles pour l'utiliser avec le{' '}\n\t\t\t\t<Link\n\t\t\t\t\taria-label={`${LINK_PUBLICODES_LABEL}, accéder au site publi.codes, nouvelle fenêtre`}\n\t\t\t\t\thref=\"https://publi.codes/\"\n\t\t\t\t>\n\t\t\t\t\t{LINK_PUBLICODES_LABEL}\n\t\t\t\t</Link>{' '}\n\t\t\t\tet ainsi effectuer vos propres calculs. Voici un exemple avec votre\n\t\t\t\tsituation et la règle actuelle :\n\t\t\t</p>\n\t\t\t<Code tabs={tabs} />\n\n\t\t\t<p style={{ textAlign: 'right' }}>\n\t\t\t\t<Link\n\t\t\t\t\thref={'https://www.npmjs.com/package/' + npmPackage}\n\t\t\t\t\taria-label={`${LINK_NPM_LABEL}, accéder à la page npm du package Publicodes, nouvelle fenêtre`}\n\t\t\t\t>\n\t\t\t\t\t<span aria-hidden>📦</span> {LINK_NPM_LABEL}\n\t\t\t\t</Link>\n\t\t\t</p>\n\t\t</section>\n\t)\n}\n\nconst LINK_API_LABEL = 'En savoir plus sur notre API REST'\n\nfunction ApiUsage({\n\tsituation,\n\tdottedName,\n\tapiDocumentationUrl,\n\tapiEvaluateUrl,\n}: {\n\tsituation: Record<string, unknown>\n\tdottedName: string\n\tapiDocumentationUrl: string\n\tapiEvaluateUrl: string\n}) {\n\tconst { Code, Link } = useContext(RenderersContext)\n\n\tconst data = {\n\t\texpressions: [dottedName],\n\t\tsituation: situation,\n\t}\n\n\tconst tabs = {\n\t\tcurl: `curl '${apiEvaluateUrl}' \\\\\n  -H 'accept: application/json' \\\\\n  -H 'content-type: application/json' \\\\\n  --data-raw $'${JSON.stringify(data).replace(/'/g, \"'\\\\''\")}' \\\\\n  --compressed`,\n\t\t'fetch js': `const request = await fetch(\"${apiEvaluateUrl}\", {\n  \"headers\": { \"content-type\": \"application/json\" },\n  \"method\": \"POST\",\n  \"body\": JSON.stringify(${JSON.stringify(data, null, 2)}),\n})\nconst { evaluate } = await request.json()\n\nconsole.log(evaluate)`,\n\t}\n\n\treturn (\n\t\t<section>\n\t\t\t<h4>Utiliser notre API REST</h4>\n\t\t\t<p>\n\t\t\t\tVous trouverez ici un exemple d'utilisation de notre API REST via curl\n\t\t\t\tou un fetch javascript.\n\t\t\t</p>\n\t\t\t<Code tabs={tabs} />\n\t\t\t{apiDocumentationUrl && (\n\t\t\t\t<p style={{ textAlign: 'right' }}>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto={apiDocumentationUrl}\n\t\t\t\t\t\taria-label={`${LINK_API_LABEL}, accéder à la documentation, nouvelle fenêtre`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span aria-hidden>👩‍💻</span> {LINK_API_LABEL}\n\t\t\t\t\t</Link>\n\t\t\t\t</p>\n\t\t\t)}\n\t\t</section>\n\t)\n}\n\nfunction MissingVars({ selfMissing }: { selfMissing: string[] }) {\n\treturn (\n\t\t<section>\n\t\t\t<h4>Données manquantes</h4>\n\t\t\t{!!selfMissing?.length ? (\n\t\t\t\t<>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tLes règles suivantes sont nécessaires pour le calcul mais n'ont pas\n\t\t\t\t\t\tété saisies dans la situation. Leur valeur par défaut est utilisée.\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<Ul>\n\t\t\t\t\t\t{selfMissing.map((dottedName) => (\n\t\t\t\t\t\t\t<Li key={dottedName}>\n\t\t\t\t\t\t\t\t<RuleLinkWithContext dottedName={dottedName} />\n\t\t\t\t\t\t\t</Li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Ul>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<p>Il n'y a pas de données manquante.</p>\n\t\t\t)}\n\t\t</section>\n\t)\n}\n\nconst isReplacementOfThisRule = (node: RuleNode, dottedName: string) =>\n\tnode &&\n\t'replacements' in node &&\n\tnode.replacements.some(\n\t\t({ replacedReference }) => replacedReference.dottedName === dottedName\n\t)\n\nfunction ReverseMissing({\n\tengine,\n\tdottedName,\n\truleIsNotDefined = false,\n}: {\n\tengine: Engine\n\tdottedName: string\n\truleIsNotDefined?: boolean\n}) {\n\tconst ruleNamesWithMissing = Array.from(\n\t\tengine.context.referencesMaps.rulesThatUse.get(dottedName) ?? []\n\t).filter(\n\t\t(ruleName) =>\n\t\t\truleName !== '$EVALUATION' &&\n\t\t\truleName in engine.context.parsedRules &&\n\t\t\t!engine.context.parsedRules[ruleName].private &&\n\t\t\t!isReplacementOfThisRule(engine.context.parsedRules[ruleName], dottedName)\n\t)\n\n\treturn (\n\t\t<section>\n\t\t\t<h4>Règles qui ont besoin de cette valeur</h4>\n\n\t\t\t{ruleNamesWithMissing.length ? (\n\t\t\t\t<>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tLes règles suivantes ont besoin de la règle courante pour être\n\t\t\t\t\t\tcalculées :\n\t\t\t\t\t\t{ruleIsNotDefined && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\tLa règle courante n'étant pas encore définie, c'est sa valeur\n\t\t\t\t\t\t\t\tpar défaut qui est utilisée pour déterminer la valeur de ces\n\t\t\t\t\t\t\t\trègles.\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</p>\n\t\t\t\t\t<Ul>\n\t\t\t\t\t\t{ruleNamesWithMissing.map((dottedName) => (\n\t\t\t\t\t\t\t<Li key={dottedName}>\n\t\t\t\t\t\t\t\t<RuleLinkWithContext dottedName={dottedName} />\n\t\t\t\t\t\t\t</Li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Ul>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<p>Aucune règle n'utilise cette valeur.</p>\n\t\t\t)}\n\t\t</section>\n\t)\n}\n\nfunction Effect({\n\tengine,\n\tdottedName,\n\treplacements,\n}: {\n\tengine: Engine\n\tdottedName: string\n\treplacements: RuleNode['replacements']\n}) {\n\tconst effects = Array.from(\n\t\tengine.context.referencesMaps.rulesThatUse.get(dottedName) ?? []\n\t).filter(\n\t\t(ruleName) =>\n\t\t\truleName !== '$EVALUATION' &&\n\t\t\truleName in engine.context.parsedRules &&\n\t\t\t!engine.context.parsedRules[ruleName].private &&\n\t\t\tisReplacementOfThisRule(engine.context.parsedRules[ruleName], dottedName)\n\t)\n\n\treturn (\n\t\t<>\n\t\t\t<section>\n\t\t\t\t<h4>Effets sur d'autres règles</h4>\n\t\t\t\t{!!replacements.length ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tUne règle peut avoir des effets sur d'autres règles afin de\n\t\t\t\t\t\t\tmodifier leur comportement.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<Ul>\n\t\t\t\t\t\t\t{replacements.map((replacement) => (\n\t\t\t\t\t\t\t\t<Li\n\t\t\t\t\t\t\t\t\tstyle={{ marginBottom: '0.5rem' }}\n\t\t\t\t\t\t\t\t\tkey={replacement.replacedReference.dottedName}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Explanation node={replacement} />\n\t\t\t\t\t\t\t\t</Li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Ul>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<p>Cette règle ne modifie aucune autre règle.</p>\n\t\t\t\t)}\n\t\t\t</section>\n\n\t\t\t<section>\n\t\t\t\t<h4>Règles qui peuvent avoir un effet sur cette valeur</h4>\n\t\t\t\t{effects.length ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tLes règles suivantes peuvent remplacer la valeur de la règle\n\t\t\t\t\t\t\tcourante :\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<Ul>\n\t\t\t\t\t\t\t{effects.map((dottedName) => (\n\t\t\t\t\t\t\t\t<Li key={dottedName}>\n\t\t\t\t\t\t\t\t\t<RuleLinkWithContext dottedName={dottedName} />\n\t\t\t\t\t\t\t\t</Li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Ul>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<p>Aucune autre règle n'a d'effet sur cette valeur.</p>\n\t\t\t\t)}\n\t\t\t</section>\n\t\t</>\n\t)\n}\n\nconst StyledWarning = styled.div``\n","import { useContext } from 'react'\nimport { RenderersContext } from '../contexts'\n\ntype PropType = {\n\ttitle: string\n\tdescription?: string\n}\n\nexport default function Meta({ title, description }: PropType) {\n\tconst { Head } = useContext(RenderersContext)\n\tif (!Head) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<Head>\n\t\t\t<title>{title}</title>\n\t\t\t<meta property=\"og:type\" content=\"article\" />\n\t\t\t<meta property=\"og:title\" content={title} />\n\t\t\t{description && <meta property=\"og:description\" content={description} />}\n\t\t\t{description && <meta name=\"description\" content={description} />}\n\t\t</Head>\n\t)\n}\n","import { utils } from 'publicodes'\nimport { useEngine } from '../hooks'\nimport { RuleLinkWithContext } from '../RuleLink'\nimport Meta from './Meta'\n\nexport default function RuleHeader({ dottedName }) {\n\tconst engine = useEngine()\n\tconst {\n\t\ttitle,\n\t\trawNode: { description, question, icônes },\n\t} = engine.context.parsedRules[dottedName]\n\tconst displayTitle = icônes ? title + ' ' + icônes : title\n\treturn (\n\t\t<header>\n\t\t\t<Meta title={displayTitle} description={description || question} />\n\t\t\t<div>\n\t\t\t\t<span id=\"rules-nav-open-nav-button\">\n\t\t\t\t\t{/* Portal for OpenNavButton in RulesNav */}\n\t\t\t\t</span>\n\t\t\t\t{utils\n\t\t\t\t\t.ruleParents(dottedName)\n\t\t\t\t\t.reverse()\n\t\t\t\t\t.map((parentDottedName) => (\n\t\t\t\t\t\t<span key={parentDottedName}>\n\t\t\t\t\t\t\t<RuleLinkWithContext dottedName={parentDottedName} displayIcon />\n\t\t\t\t\t\t\t<span aria-hidden>{' › '}</span>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<h1>\n\t\t\t\t<RuleLinkWithContext dottedName={dottedName} displayIcon />\n\t\t\t</h1>\n\t\t</header>\n\t)\n}\n","import { utils } from 'publicodes'\nimport { memo, useCallback, useEffect, useRef, useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport { styled } from 'styled-components'\nimport { RuleLinkWithContext } from '../RuleLink'\nimport { Arrow } from '../component/icons'\nimport { useEngine } from '../hooks'\ninterface Props {\n\tdottedName: string\n\tmobileMenuPortalId?: string\n\topenNavButtonPortalId?: string\n}\n\nexport const RulesNav = ({\n\tdottedName,\n\tmobileMenuPortalId,\n\topenNavButtonPortalId,\n}: Props) => {\n\tconst baseEngine = useEngine()\n\tconst [navOpen, setNavOpen] = useState(false)\n\n\tconst initLevel = (dn: string) =>\n\t\tObject.fromEntries([\n\t\t\t[dn, true],\n\t\t\t...utils.ruleParents(dn).map((parent) => [parent, true]),\n\t\t] as [string, boolean][])\n\n\tconst [level, setLevel] = useState(initLevel(dottedName))\n\n\tuseEffect(() => {\n\t\tsetLevel((prev) => ({ ...prev, ...initLevel(dottedName) }))\n\t\tsetNavOpen(false)\n\t}, [dottedName])\n\n\tconst parsedRules = baseEngine.getParsedRules()\n\n\tconst toggleDropdown = useCallback((ruleDottedName: string) => {\n\t\tsetLevel((prevLevel) =>\n\t\t\t!prevLevel[ruleDottedName]\n\t\t\t\t? {\n\t\t\t\t\t\t...prevLevel,\n\t\t\t\t\t\t[ruleDottedName]: !prevLevel[ruleDottedName],\n\t\t\t\t  }\n\t\t\t\t: Object.fromEntries(\n\t\t\t\t\t\tObject.entries(prevLevel).map(([dot, val]) =>\n\t\t\t\t\t\t\tdot.startsWith(ruleDottedName) ? [dot, false] : [dot, val]\n\t\t\t\t\t\t)\n\t\t\t\t  )\n\t\t)\n\t}, [])\n\n\tconst openNavButtonPortalElement =\n\t\t(openNavButtonPortalId && document.getElementById(openNavButtonPortalId)) ||\n\t\tdocument.getElementById('rules-nav-open-nav-button')\n\n\tconst menu = (\n\t\t<Container $open={navOpen}>\n\t\t\t<Background\n\t\t\t\t$open={navOpen}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetNavOpen((open) => !open)\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t{/* Portal in Header */}\n\t\t\t{openNavButtonPortalElement &&\n\t\t\t\tReactDOM.createPortal(\n\t\t\t\t\t<OpenNavButton onClick={() => setNavOpen(true)}>\n\t\t\t\t\t\tToutes les règles\n\t\t\t\t\t</OpenNavButton>,\n\t\t\t\t\topenNavButtonPortalElement\n\t\t\t\t)}\n\n\t\t\t<Nav $open={navOpen}>\n\t\t\t\t<ul>\n\t\t\t\t\t{Object.entries(parsedRules)\n\t\t\t\t\t\t.sort(([a], [b]) => a.localeCompare(b))\n\t\t\t\t\t\t.map(([ruleDottedName, rest]) => {\n\t\t\t\t\t\t\tconst parentDottedName = utils.ruleParent(ruleDottedName)\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\truleDottedName.split(' . ').length > 1 &&\n\t\t\t\t\t\t\t\t!level[parentDottedName]\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn null\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst open = ruleDottedName in level && level[ruleDottedName]\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<MemoNavLi\n\t\t\t\t\t\t\t\t\tkey={ruleDottedName}\n\t\t\t\t\t\t\t\t\truleDottedName={ruleDottedName}\n\t\t\t\t\t\t\t\t\topen={open}\n\t\t\t\t\t\t\t\t\tactive={dottedName === ruleDottedName}\n\t\t\t\t\t\t\t\t\tonClickDropdown={toggleDropdown}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</Nav>\n\t\t</Container>\n\t)\n\n\tconst isMobileMenu = window.matchMedia(\n\t\t`(max-width: ${breakpointsWidth.lg})`\n\t).matches\n\n\tconst mobileMenuPortalElement = mobileMenuPortalId\n\t\t? document.getElementById(mobileMenuPortalId)\n\t\t: null\n\n\treturn isMobileMenu && mobileMenuPortalElement\n\t\t? ReactDOM.createPortal(menu, mobileMenuPortalElement)\n\t\t: menu\n}\n\nconst NavLi = ({ ruleDottedName, open, active, onClickDropdown }) => {\n\tconst baseEngine = useEngine()\n\n\tconst parsedRules = baseEngine.getParsedRules()\n\tconst childrenCount = Object.keys(parsedRules).reduce(\n\t\t(acc, ruleDot) =>\n\t\t\truleDot.startsWith(ruleDottedName + ' . ') &&\n\t\t\truleDot.split(' . ').length === ruleDottedName.split(' . ').length + 1\n\t\t\t\t? acc + 1\n\t\t\t\t: acc,\n\t\t0\n\t)\n\n\tconst activeLi = useRef<HTMLLIElement>(null)\n\tuseEffect(() => {\n\t\tactiveLi.current?.scrollIntoView({\n\t\t\tbehavior: 'auto',\n\t\t\tblock: 'center',\n\t\t\tinline: 'start',\n\t\t})\n\t}, [])\n\treturn (\n\t\t<li\n\t\t\tkey={ruleDottedName}\n\t\t\tref={active ? activeLi : undefined}\n\t\t\tstyle={{\n\t\t\t\tpaddingLeft: (ruleDottedName.split(' . ').length - 1) * 16,\n\t\t\t}}\n\t\t\tclassName={\n\t\t\t\t(childrenCount > 0 ? 'dropdown ' : '') + (active ? 'active ' : '')\n\t\t\t}\n\t\t>\n\t\t\t<span className=\"content\">\n\t\t\t\t{childrenCount > 0 && (\n\t\t\t\t\t<DropdownButton\n\t\t\t\t\t\taria-label={open ? 'Replier le sous-menu' : 'Déplier le sous-menu'}\n\t\t\t\t\t\taria-expanded={open}\n\t\t\t\t\t\tonClick={() => onClickDropdown(ruleDottedName)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<StyledArrow $open={open} />\n\t\t\t\t\t</DropdownButton>\n\t\t\t\t)}\n\t\t\t\t<RuleLinkWithContext dottedName={ruleDottedName} displayIcon />\n\t\t\t</span>\n\t\t</li>\n\t)\n}\n\nconst MemoNavLi = memo(NavLi)\n\nexport const breakpointsWidth = {\n\tsm: '576px',\n\tmd: '768px',\n\tlg: '992px',\n\txl: '1200px',\n}\n\nconst Container = styled.div<{ $open: boolean }>`\n\tz-index: 200;\n\toverflow: auto;\n\tposition: sticky;\n\ttop: 0;\n\n\t@media (min-width: ${breakpointsWidth.lg}) {\n\t\tmax-width: 50%;\n\t\tflex-shrink: 0;\n\t}\n`\n\nconst Background = styled.div<{ $open: boolean }>`\n\tbackground: rgb(0 0 0 / 25%);\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\tbottom: 0;\n\tright: 0;\n\tz-index: 200;\n\ttransition: ease-in-out 0.25s;\n\ttransition-property: visibility, opacity;\n\tvisibility: ${({ $open }) => ($open ? 'visible' : 'hidden')};\n\topacity: ${({ $open }) => ($open ? '1' : '0')};\n\n\t@media (min-width: ${breakpointsWidth.lg}) {\n\t\tdisplay: none;\n\t}\n`\n\nconst OpenNavButton = styled.button`\n\tmargin: 0.25rem 0;\n\tmargin-right: 0.5rem;\n\tbackground: none;\n\tborder: 1px solid rgb(29, 66, 140);\n\tborder-radius: 3px;\n\tcolor: rgb(29, 66, 140);\n\tpadding: 0.5rem;\n\tdisplay: inline-block;\n\n\t&:hover {\n\t\tbackground-color: rgb(219, 231, 255);\n\t}\n\t@media (min-width: ${breakpointsWidth.lg}) {\n\t\tdisplay: none;\n\t}\n`\n\nconst Nav = styled.nav<{ $open: boolean }>`\n\t@media (min-width: ${breakpointsWidth.lg}) {\n\t\tflex-shrink: 0;\n\t}\n\tborder-right: 1px solid #e6e6e6;\n\toverflow: auto;\n\tmax-height: calc(100vh - 2rem);\n\tposition: sticky;\n\ttop: 0;\n\t@media (max-width: ${breakpointsWidth.lg}) {\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tpadding-top: 1rem;\n\t\tbottom: 0;\n\t\tz-index: 200;\n\t\tmax-height: initial;\n\t\tbackground: white;\n\t\tmax-width: 80vw;\n\t\theight: 100%;\n\n\t\ttransition: all ease-in-out 0.25s;\n\t\t${({ $open }) => ($open ? '' : 'transform: translateX(-100%);')}\n\t}\n\n\tul {\n\t\tflex-wrap: nowrap;\n\t\tmargin: 0;\n\n\t\tpadding: 0;\n\t\tlist-style: none;\n\t\tli {\n\t\t\tmargin-bottom: 3px;\n\t\t\tmax-width: 350px;\n\t\t\t.content {\n\t\t\t\tborder-radius: 3px;\n\t\t\t\tpadding: 3px 1rem;\n\t\t\t\tdisplay: flex;\n\t\t\t\twidth: fit-content;\n\t\t\t\talign-items: center;\n\t\t\t\tflex-direction: row;\n\t\t\t\tflex-wrap: nowrap;\n\t\t\t}\n\n\t\t\t&.active .content {\n\t\t\t\tbackground-color: #e6e6e6;\n\t\t\t}\n\t\t\t&:not(.active) a {\n\t\t\t\tfont-weight: normal;\n\t\t\t}\n\t\t\t&:not(.dropdown) .content:before {\n\t\t\t\tcontent: ' ';\n\t\t\t\tdisplay: inline-block;\n\t\t\t\tbackground-color: #b3b3b3;\n\t\t\t\tmin-width: 0.5rem;\n\t\t\t\tmin-height: 0.5rem;\n\t\t\t\tborder-radius: 0.5rem;\n\t\t\t\tmargin-left: 0.5rem;\n\t\t\t\tmargin-right: 1.25rem;\n\t\t\t\tpointer-events: none;\n\t\t\t}\n\t\t}\n\t}\n`\n\nconst DropdownButton = styled.button`\n\tmargin-right: 0.75rem;\n\tflex-shrink: 0;\n\tbackground: none;\n\tborder: 1px solid #b3b3b3;\n\tborder-radius: 2rem;\n\twidth: 1.5rem;\n\theight: 1.5rem;\n\tcolor: #999;\n\tpadding: 0;\n\tdisplay: inline-block;\n`\n\nconst StyledArrow = styled(Arrow)<{ $open: boolean }>`\n\twidth: 100%;\n\ttransition: transform 0.1s;\n\theight: 100%;\n\ttransform: rotate(${({ $open }) => ($open ? '0deg' : '-90deg')});\n`\n","import Engine, {\n\tASTNode,\n\tEvaluatedNode,\n\tformatValue,\n\tPublicodesExpression,\n\tRuleNode,\n\tserializeUnit,\n\tutils,\n} from 'publicodes'\nimport { useContext, useEffect, useRef, useState } from 'react'\nimport { styled } from 'styled-components'\nimport {\n\tBasepathContext,\n\tdefaultRenderers,\n\tDottedNameContext,\n\tEngineContext,\n\tRenderersContext,\n\tSupportedRenderers,\n} from '../contexts'\nimport Explanation from '../Explanation'\nimport { useEngine } from '../hooks'\nimport { RuleLinkWithContext } from '../RuleLink'\nimport { DeveloperAccordion } from './DeveloperAccordion'\nimport RuleHeader from './Header'\nimport { breakpointsWidth, RulesNav } from './RulesNav'\n\ntype RulePageProps = {\n\tdocumentationPath: string\n\trulePath: string\n\tengine: Engine\n\tlanguage: 'fr' | 'en'\n\trenderers: SupportedRenderers\n\tapiDocumentationUrl?: string\n\tapiEvaluateUrl?: string\n\tnpmPackage?: string\n\tmobileMenuPortalId?: string\n\topenNavButtonPortalId?: string\n\tshowDevSection?: boolean\n}\n\nexport default function RulePage({\n\tdocumentationPath,\n\trulePath,\n\tengine,\n\trenderers,\n\tlanguage,\n\tapiDocumentationUrl,\n\tapiEvaluateUrl,\n\tnpmPackage,\n\tmobileMenuPortalId,\n\topenNavButtonPortalId,\n\tshowDevSection = true,\n}: RulePageProps) {\n\tconst currentEngineId =\n\t\ttypeof window !== 'undefined' &&\n\t\tnew URLSearchParams(window.location.search).get('currentEngineId')\n\n\tconst prevRenderers = useRef(renderers)\n\tconst [renderersValue, setRenderers] = useState(defaultRenderers(renderers))\n\tuseEffect(() => {\n\t\tif (prevRenderers.current !== renderers) {\n\t\t\tprevRenderers.current = renderers\n\n\t\t\tsetRenderers(defaultRenderers(renderers))\n\t\t}\n\t}, [renderers])\n\n\treturn (\n\t\t<EngineContext.Provider value={engine}>\n\t\t\t<BasepathContext.Provider value={documentationPath}>\n\t\t\t\t<RenderersContext.Provider value={defaultRenderers(renderers)}>\n\t\t\t\t\t<Rule\n\t\t\t\t\t\tdottedName={utils.decodeRuleName(rulePath)}\n\t\t\t\t\t\tsubEngineId={\n\t\t\t\t\t\t\tcurrentEngineId ? parseInt(currentEngineId) : undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlanguage={language}\n\t\t\t\t\t\tapiDocumentationUrl={apiDocumentationUrl}\n\t\t\t\t\t\tapiEvaluateUrl={apiEvaluateUrl}\n\t\t\t\t\t\tnpmPackage={npmPackage}\n\t\t\t\t\t\tmobileMenuPortalId={mobileMenuPortalId}\n\t\t\t\t\t\topenNavButtonPortalId={openNavButtonPortalId}\n\t\t\t\t\t\tshowDevSection={showDevSection}\n\t\t\t\t\t/>\n\t\t\t\t</RenderersContext.Provider>\n\t\t\t</BasepathContext.Provider>\n\t\t</EngineContext.Provider>\n\t)\n}\n\ntype RuleProps = {\n\tdottedName: string\n\tsubEngineId?: number\n} & Pick<\n\tRulePageProps,\n\t| 'language'\n\t| 'apiDocumentationUrl'\n\t| 'apiEvaluateUrl'\n\t| 'npmPackage'\n\t| 'mobileMenuPortalId'\n\t| 'openNavButtonPortalId'\n\t| 'showDevSection'\n>\n\nfunction Rule({\n\tdottedName,\n\tlanguage,\n\tsubEngineId,\n\tapiDocumentationUrl,\n\tapiEvaluateUrl,\n\tnpmPackage,\n\tmobileMenuPortalId,\n\topenNavButtonPortalId,\n\tshowDevSection,\n}: RuleProps) {\n\tconst baseEngine = useEngine()\n\tconst { References, Text } = useContext(RenderersContext)\n\n\tconst useSubEngine =\n\t\tsubEngineId && baseEngine.subEngines.length >= subEngineId\n\n\tconst engine = useSubEngine\n\t\t? baseEngine.subEngines[subEngineId as number]\n\t\t: baseEngine\n\n\tif (!(dottedName in engine.context.parsedRules)) {\n\t\treturn <p>Cette règle est introuvable dans la base</p>\n\t}\n\n\tconst rule = engine.evaluateNode(\n\t\tengine.context.parsedRules[dottedName]\n\t) as EvaluatedNode & { nodeKind: 'rule' }\n\n\tconst { description, question } = rule.rawNode\n\tconst { valeur, nullableParent, ruleDisabledByItsParent } = rule.explanation\n\n\tconst situation = buildSituationUsedInRule(engine, rule)\n\n\tconst references = References?.({\n\t\treferences: rule.rawNode.références,\n\t\tdottedName: rule.dottedName,\n\t})\n\treturn (\n\t\t<EngineContext.Provider value={engine}>\n\t\t\t<Container id=\"documentation-rule-root\">\n\t\t\t\t<RulesNav\n\t\t\t\t\tdottedName={dottedName}\n\t\t\t\t\tmobileMenuPortalId={mobileMenuPortalId}\n\t\t\t\t\topenNavButtonPortalId={openNavButtonPortalId}\n\t\t\t\t/>\n\t\t\t\t<Article>\n\t\t\t\t\t<DottedNameContext.Provider value={dottedName}>\n\t\t\t\t\t\t<RuleHeader dottedName={dottedName} />\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<Text>{description || question || ''}</Text>\n\t\t\t\t\t\t</section>\n\n\t\t\t\t\t\t<p style={{ fontSize: '1.25rem', lineHeight: '2rem' }}>\n\t\t\t\t\t\t\tValeur : {formatValue(rule, { language })}\n\t\t\t\t\t\t\t{rule.nodeValue === undefined && rule.unit && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\tUnité : {serializeUnit(rule.unit)}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t{ruleDisabledByItsParent && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<blockquote>\n\t\t\t\t\t\t\t\t\tCette règle est <strong>non applicable</strong> car elle\n\t\t\t\t\t\t\t\t\tappartient à l'espace de nom :{' '}\n\t\t\t\t\t\t\t\t\t<Explanation node={nullableParent} />\n\t\t\t\t\t\t\t\t</blockquote>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{useSubEngine && (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\talignItems: 'baseline',\n\t\t\t\t\t\t\t\t\tflexWrap: 'wrap',\n\t\t\t\t\t\t\t\t\tmargin: '1rem 0',\n\t\t\t\t\t\t\t\t\tpaddingTop: '0.4rem',\n\t\t\t\t\t\t\t\t\tpaddingBottom: '0.4rem',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\tLes valeurs affichées sont calculées avec la situation\n\t\t\t\t\t\t\t\t\tspécifique du <strong>mécanisme recalcul</strong>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div style={{ flex: 1 }} />\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<RuleLinkWithContext\n\t\t\t\t\t\t\t\t\t\tdottedName={dottedName}\n\t\t\t\t\t\t\t\t\t\tuseSubEngine={false}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tRetourner à la version de base\n\t\t\t\t\t\t\t\t\t</RuleLinkWithContext>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<h2>Comment cette donnée est-elle calculée ?</h2>\n\t\t\t\t\t\t<div id=\"documentation-rule-explanation\">\n\t\t\t\t\t\t\t<Explanation node={valeur} />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{rule.rawNode.note && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<h3>Note</h3>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Text>{rule.rawNode.note}</Text>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{references && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<h3>Références</h3>\n\t\t\t\t\t\t\t\t{references}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t{showDevSection && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<h3>Informations techniques</h3>\n\t\t\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\t\t\tSi vous êtes développeur/euse vous trouverez ci-dessous des\n\t\t\t\t\t\t\t\t\tinformations techniques utiles pour l'intégration de cette\n\t\t\t\t\t\t\t\t\trègle dans votre application.\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t<DeveloperAccordion\n\t\t\t\t\t\t\t\t\tengine={engine}\n\t\t\t\t\t\t\t\t\tsituation={situation}\n\t\t\t\t\t\t\t\t\tdottedName={dottedName}\n\t\t\t\t\t\t\t\t\trule={rule}\n\t\t\t\t\t\t\t\t\tapiDocumentationUrl={apiDocumentationUrl}\n\t\t\t\t\t\t\t\t\tapiEvaluateUrl={apiEvaluateUrl}\n\t\t\t\t\t\t\t\t\tnpmPackage={npmPackage}\n\t\t\t\t\t\t\t\t></DeveloperAccordion>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</DottedNameContext.Provider>\n\t\t\t\t</Article>\n\t\t\t</Container>\n\t\t</EngineContext.Provider>\n\t)\n}\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex-wrap: nowrap;\n\talign-items: flex-start;\n\t@media (max-width: ${breakpointsWidth.lg}) {\n\t\tflex-direction: column;\n\t}\n`\n\nconst Article = styled.article`\n\tflex-shrink: 1;\n\tmax-width: 100%;\n\t@media (min-width: ${breakpointsWidth.lg}) {\n\t\tmin-width: 0;\n\t\tpadding-left: 1rem;\n\t\tborder-left: 1px solid #e6e6e6;\n\t\tmargin-left: -1px;\n\t}\n`\n\nfunction buildSituationUsedInRule<Names extends string>(\n\tengine: Engine<Names>,\n\trule: EvaluatedNode & RuleNode\n): Partial<Record<Names, PublicodesExpression>> {\n\tconst situation = [...(rule.traversedVariables as Names[]), rule.dottedName]\n\t\t.map((name) => {\n\t\t\tconst valeur = engine.context.parsedRules[`${name} . $SITUATION`]?.rawNode\n\t\t\t\t.valeur as ASTNode\n\t\t\treturn [name, valeur] as const\n\t\t})\n\t\t.filter(\n\t\t\t([_, valeur]) =>\n\t\t\t\tvaleur &&\n\t\t\t\t!(valeur.nodeKind === 'constant' && valeur.nodeValue === undefined)\n\t\t)\n\t\t.reduce(\n\t\t\t(acc, [name, valeur]) => ({\n\t\t\t\t[name]:\n\t\t\t\t\ttypeof valeur === 'object' && valeur && 'rawNode' in valeur\n\t\t\t\t\t\t? valeur.rawNode\n\t\t\t\t\t\t: valeur,\n\t\t\t\t...acc,\n\t\t\t}),\n\t\t\t{}\n\t\t)\n\n\treturn situation\n}\n","import Head from '@docusaurus/Head'\nimport Engine, { utils } from 'publicodes'\nimport { getDocumentationSiteMap, RulePage } from 'publicodes-react'\nimport { invertObj, last } from 'ramda'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { Link, useHistory, useLocation } from 'react-router-dom'\nimport ErrorBoundary, { nl2br } from './ErrorBoundary'\n\n// this is a heavy library, this component shoudl be lazy loaded\nimport { parse } from 'yaml'\n\ntype ResultsProps = {\n\trules: string\n\tonClickShare?: React.MouseEventHandler\n\tdefaultTarget?: string\n\tonTargetChange?: (target: string) => void\n\tbaseUrl?: string\n\tshowDevSection?: boolean\n}\n\nclass Logger {\n\tmessages: string[] = []\n\twarn(message: string) {\n\t\tthis.messages.push(message)\n\t}\n\terror(message: string) {\n\t\tthis.messages.push(message)\n\t}\n\tlog(message: string) {\n\t\tthis.messages.push(message)\n\t}\n\ttoJSX() {\n\t\treturn this.messages.map((m) => (\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: 'lightyellow',\n\t\t\t\t\tpadding: 20,\n\t\t\t\t\tborderRadius: 5,\n\t\t\t\t}}\n\t\t\t\tkey={m}\n\t\t\t>\n\t\t\t\t{nl2br(m)}\n\t\t\t</div>\n\t\t))\n\t}\n}\n\nexport default function Documentation({\n\tonClickShare,\n\trules,\n\tdefaultTarget = '',\n\tonTargetChange,\n\tbaseUrl,\n\tshowDevSection,\n}: ResultsProps) {\n\tconst logger = useMemo(() => new Logger(), [rules])\n\tconst engine = useMemo(\n\t\t() => new Engine(parse(rules), { logger }),\n\t\t[rules, logger]\n\t)\n\tconst targets = useMemo(() => Object.keys(engine.getParsedRules()), [engine])\n\tconst pathToRules = useMemo(\n\t\t() => getDocumentationSiteMap({ engine, documentationPath: '' }),\n\t\t[engine]\n\t)\n\tconst ruleToPaths = useMemo(() => invertObj(pathToRules), [pathToRules])\n\tconst { search, pathname } = useLocation()\n\tconst searchParams = new URLSearchParams(search ?? '')\n\tconst history = useHistory()\n\tconst [currentTarget, setTarget] = useState(\n\t\tsearchParams.get('rule') || defaultTarget\n\t)\n\tconst setCurrentTarget = useCallback(\n\t\t(target) => {\n\t\t\tonTargetChange?.(target)\n\t\t\tsetTarget(target)\n\t\t},\n\t\t[onTargetChange]\n\t)\n\n\tuseEffect(() => {\n\t\tif (!targets.includes(currentTarget)) {\n\t\t\tsetCurrentTarget(last(targets) ?? '')\n\t\t}\n\t}, [currentTarget])\n\n\tuseEffect(() => {\n\t\tif (searchParams.get('rule') !== currentTarget) {\n\t\t\tsearchParams.set('rule', currentTarget)\n\t\t}\n\t}, [searchParams, currentTarget])\n\n\tuseEffect(() => {\n\t\tif (baseUrl == null) {\n\t\t\treturn\n\t\t}\n\t\tconst newPathname = baseUrl + '/' + utils.encodeRuleName(currentTarget)\n\n\t\tif (pathname !== newPathname) {\n\t\t\thistory.replace({\n\t\t\t\t...history.location,\n\t\t\t\tpathname: newPathname,\n\t\t\t})\n\t\t}\n\t}, [baseUrl, currentTarget, pathname, history])\n\n\treturn (\n\t\t<div style={{ padding: '1rem' }}>\n\t\t\t{logger.toJSX()}\n\n\t\t\t<ErrorBoundary>\n\t\t\t\t<RulePage\n\t\t\t\t\tlanguage={'fr'}\n\t\t\t\t\trulePath={ruleToPaths[currentTarget]?.replace(/^\\//, '') || ''}\n\t\t\t\t\tengine={engine}\n\t\t\t\t\tdocumentationPath={''}\n\t\t\t\t\tshowDevSection={showDevSection}\n\t\t\t\t\trenderers={{\n\t\t\t\t\t\tLink: ({ to, children }) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tto={to}\n\t\t\t\t\t\t\t\t\tonClick={(evt) => {\n\t\t\t\t\t\t\t\t\t\tevt.preventDefault()\n\t\t\t\t\t\t\t\t\t\tevt.stopPropagation()\n\t\t\t\t\t\t\t\t\t\tsetCurrentTarget(pathToRules[to])\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t},\n\t\t\t\t\t\tHead,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</ErrorBoundary>\n\n\t\t\t{onClickShare && (\n\t\t\t\t<button\n\t\t\t\t\tstyle={{ margin: '1rem auto', display: 'block' }}\n\t\t\t\t\tonClick={onClickShare}\n\t\t\t\t>\n\t\t\t\t\t🔗 Copier le lien de la page\n\t\t\t\t</button>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n","import { utils } from 'publicodes'\nexport { default as Explanation } from './Explanation'\nexport { default as RulePage } from './rule/RulePage'\nexport { RuleLink } from './RuleLink'\n\nexport function getDocumentationSiteMap({ engine, documentationPath }) {\n\tconst parsedRules = engine.context.parsedRules\n\treturn Object.fromEntries(\n\t\tObject.keys(parsedRules).map((dottedName) => [\n\t\t\tdocumentationPath + '/' + utils.encodeRuleName(dottedName),\n\t\t\tdottedName,\n\t\t])\n\t)\n}\n","import React from 'react'\nexport default class ErrorBoundary extends React.Component {\n\tstate: { error: false | { message: string; name: string } } = { error: false }\n\n\tstatic getDerivedStateFromError(error: Error) {\n\t\tconsole.error(error)\n\t\treturn { error: { message: error.message, name: error.name } }\n\t}\n\trender() {\n\t\tif (this.state.error) {\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackground: 'lightyellow',\n\t\t\t\t\t\tpadding: '20px',\n\t\t\t\t\t\tborderRadius: '5px',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<strong>{this.state.error.name}</strong>\n\t\t\t\t\t<br />\n\t\t\t\t\t{nl2br(this.state.error.message)}\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<a onClick={() => window.location.reload()}>Rafraichir</a>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\treturn this.props.children\n\t}\n}\n\nconst newlineRegex = /(\\r\\n|\\r|\\n)/g\n\nexport function nl2br(str: string) {\n\tif (typeof str !== 'string') {\n\t\treturn str\n\t}\n\n\treturn str.split(newlineRegex).map(function (line, index) {\n\t\tif (line.match(newlineRegex)) {\n\t\t\treturn React.createElement('br', { key: index })\n\t\t}\n\t\treturn line\n\t})\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"studio\":\"studio_P5i9\"};","import { utils } from 'publicodes'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useHistory, useLocation, useParams } from 'react-router-dom'\nimport Documentation from './Documentation'\nimport ErrorBoundary from './ErrorBoundary'\nimport styles from './studio.module.css'\nimport { stringify } from 'yaml'\nimport MonacoEditor from '@monaco-editor/react'\n\nconst { decodeRuleName } = utils\n\nconst EXAMPLE_CODE = `\n# Bienvenue dans le bac à sable du langage publicode !\n# Pour en savoir plus sur le langage :\n# => https://publi.codes/docs/principes-de-base\n\nprix:\n  avec:\n    carottes: 2€/kg\n    champignons: 5€/kg\n    avocat: 2€/avocat\n\ndépenses primeur:\n  somme:\n    - prix . carottes * 1.5 kg\n    - prix . champignons * 500g\n    - prix . avocat * 3 avocat\n`.substring(1)\n\nconst tryToParseJson = <T,>(str: string): T | string => {\n\ttry {\n\t\treturn JSON.parse(str)\n\t} catch {\n\t\treturn str\n\t}\n}\n\ninterface JsonCode {\n\trules: Record<string, unknown>\n\tsituation: Record<string, unknown>\n}\n\nconst jsonCodeToYaml = (json: JsonCode) =>\n\t`\n# Ci-dessous la règle d'origine, écrite en publicodes.\n\n# Publicodes est un langage déclaratif développé par l'Urssaf\n# en partenariat avec beta.gouv.fr pour encoder les algorithmes d'intérêt public.\n\n# Vous pouvez modifier les valeurs directement dans l'éditeur pour voir les calculs\n# s'actualiser en temps réel\n\n`.substring(1) +\n\tstringify(json.rules) +\n\t'\\n\\n# Situation :\\n' +\n\tstringify(json.situation).split('\\n').sort().join('\\n')\n\nexport default function Studio() {\n\tconst { search, pathname, hash } = useLocation()\n\tconst searchParams = new URLSearchParams(search ?? '')\n\tconst initialValue = useMemo(() => {\n\t\tconst code = searchParams.get('code')\n\t\tconst hashCode = hash && decodeURIComponent(hash.substring(1))\n\n\t\tif (code || hashCode) {\n\t\t\tconst objOrYaml = tryToParseJson<JsonCode>(code || hashCode)\n\n\t\t\treturn typeof objOrYaml === 'string'\n\t\t\t\t? objOrYaml\n\t\t\t\t: jsonCodeToYaml(objOrYaml)\n\t\t}\n\n\t\treturn EXAMPLE_CODE\n\t}, [hash, search])\n\tconst [editorValue, setEditorValue] = useState(initialValue)\n\tconst debouncedEditorValue = useDebounce(editorValue, 1000)\n\n\tconst history = useHistory()\n\tuseEffect(() => {\n\t\thistory.replace({\n\t\t\tpathname,\n\t\t\thash: encodeURIComponent(debouncedEditorValue),\n\t\t})\n\t}, [debouncedEditorValue, history])\n\n\tconst handleShare = useCallback(() => {\n\t\twindow?.navigator.clipboard.writeText(window.location.href)\n\t}, [window.location.href])\n\n\tconst { target } = useParams<{ target?: string }>()\n\tconst defaultTarget = target && decodeRuleName(target)\n\n\treturn (\n\t\t<div className={styles.studio}>\n\t\t\t<div>\n\t\t\t\t<MonacoEditor\n\t\t\t\t\tlanguage=\"yaml\"\n\t\t\t\t\theight=\"75vh\"\n\t\t\t\t\tdefaultValue={editorValue}\n\t\t\t\t\tonChange={(newValue) => setEditorValue(newValue ?? '')}\n\t\t\t\t\toptions={{\n\t\t\t\t\t\tminimap: { enabled: false },\n\t\t\t\t\t\tautomaticLayout: true,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<section>\n\t\t\t\t<ErrorBoundary key={debouncedEditorValue}>\n\t\t\t\t\t{/* TODO: prévoir de changer la signature de EngineProvider */}\n\n\t\t\t\t\t<Documentation\n\t\t\t\t\t\trules={debouncedEditorValue}\n\t\t\t\t\t\tonClickShare={handleShare}\n\t\t\t\t\t\tdefaultTarget={defaultTarget}\n\t\t\t\t\t\tbaseUrl=\"/studio\"\n\t\t\t\t\t/>\n\t\t\t\t</ErrorBoundary>\n\t\t\t</section>\n\t\t</div>\n\t)\n}\n\nfunction useDebounce<T>(value: T, delay: number) {\n\tconst [debouncedValue, setDebouncedValue] = useState(value)\n\tuseEffect(\n\t\t() => {\n\t\t\t// Update debounced value after delay\n\t\t\tconst handler = setTimeout(() => {\n\t\t\t\tsetDebouncedValue(value)\n\t\t\t}, delay)\n\n\t\t\t// Cancel the timeout if value changes (also on delay change or unmount)\n\t\t\t// This is how we prevent debounced value from updating if value is changed ...\n\t\t\t// .. within the delay period. Timeout gets cleared and restarted.\n\t\t\treturn () => {\n\t\t\t\tclearTimeout(handler)\n\t\t\t}\n\t\t},\n\t\t[value, delay] // Only re-call effect if value or delay changes\n\t)\n\treturn debouncedValue\n}\n","(function(root, factory) {\n    if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        root.nearley = factory();\n    }\n}(this, function() {\n\n    function Rule(name, symbols, postprocess) {\n        this.id = ++Rule.highestId;\n        this.name = name;\n        this.symbols = symbols;        // a list of literal | regex class | nonterminal\n        this.postprocess = postprocess;\n        return this;\n    }\n    Rule.highestId = 0;\n\n    Rule.prototype.toString = function(withCursorAt) {\n        var symbolSequence = (typeof withCursorAt === \"undefined\")\n                             ? this.symbols.map(getSymbolShortDisplay).join(' ')\n                             : (   this.symbols.slice(0, withCursorAt).map(getSymbolShortDisplay).join(' ')\n                                 + \" ● \"\n                                 + this.symbols.slice(withCursorAt).map(getSymbolShortDisplay).join(' ')     );\n        return this.name + \" → \" + symbolSequence;\n    }\n\n\n    // a State is a rule at a position from a given starting point in the input stream (reference)\n    function State(rule, dot, reference, wantedBy) {\n        this.rule = rule;\n        this.dot = dot;\n        this.reference = reference;\n        this.data = [];\n        this.wantedBy = wantedBy;\n        this.isComplete = this.dot === rule.symbols.length;\n    }\n\n    State.prototype.toString = function() {\n        return \"{\" + this.rule.toString(this.dot) + \"}, from: \" + (this.reference || 0);\n    };\n\n    State.prototype.nextState = function(child) {\n        var state = new State(this.rule, this.dot + 1, this.reference, this.wantedBy);\n        state.left = this;\n        state.right = child;\n        if (state.isComplete) {\n            state.data = state.build();\n            // Having right set here will prevent the right state and its children\n            // form being garbage collected\n            state.right = undefined;\n        }\n        return state;\n    };\n\n    State.prototype.build = function() {\n        var children = [];\n        var node = this;\n        do {\n            children.push(node.right.data);\n            node = node.left;\n        } while (node.left);\n        children.reverse();\n        return children;\n    };\n\n    State.prototype.finish = function() {\n        if (this.rule.postprocess) {\n            this.data = this.rule.postprocess(this.data, this.reference, Parser.fail);\n        }\n    };\n\n\n    function Column(grammar, index) {\n        this.grammar = grammar;\n        this.index = index;\n        this.states = [];\n        this.wants = {}; // states indexed by the non-terminal they expect\n        this.scannable = []; // list of states that expect a token\n        this.completed = {}; // states that are nullable\n    }\n\n\n    Column.prototype.process = function(nextColumn) {\n        var states = this.states;\n        var wants = this.wants;\n        var completed = this.completed;\n\n        for (var w = 0; w < states.length; w++) { // nb. we push() during iteration\n            var state = states[w];\n\n            if (state.isComplete) {\n                state.finish();\n                if (state.data !== Parser.fail) {\n                    // complete\n                    var wantedBy = state.wantedBy;\n                    for (var i = wantedBy.length; i--; ) { // this line is hot\n                        var left = wantedBy[i];\n                        this.complete(left, state);\n                    }\n\n                    // special-case nullables\n                    if (state.reference === this.index) {\n                        // make sure future predictors of this rule get completed.\n                        var exp = state.rule.name;\n                        (this.completed[exp] = this.completed[exp] || []).push(state);\n                    }\n                }\n\n            } else {\n                // queue scannable states\n                var exp = state.rule.symbols[state.dot];\n                if (typeof exp !== 'string') {\n                    this.scannable.push(state);\n                    continue;\n                }\n\n                // predict\n                if (wants[exp]) {\n                    wants[exp].push(state);\n\n                    if (completed.hasOwnProperty(exp)) {\n                        var nulls = completed[exp];\n                        for (var i = 0; i < nulls.length; i++) {\n                            var right = nulls[i];\n                            this.complete(state, right);\n                        }\n                    }\n                } else {\n                    wants[exp] = [state];\n                    this.predict(exp);\n                }\n            }\n        }\n    }\n\n    Column.prototype.predict = function(exp) {\n        var rules = this.grammar.byName[exp] || [];\n\n        for (var i = 0; i < rules.length; i++) {\n            var r = rules[i];\n            var wantedBy = this.wants[exp];\n            var s = new State(r, 0, this.index, wantedBy);\n            this.states.push(s);\n        }\n    }\n\n    Column.prototype.complete = function(left, right) {\n        var copy = left.nextState(right);\n        this.states.push(copy);\n    }\n\n\n    function Grammar(rules, start) {\n        this.rules = rules;\n        this.start = start || this.rules[0].name;\n        var byName = this.byName = {};\n        this.rules.forEach(function(rule) {\n            if (!byName.hasOwnProperty(rule.name)) {\n                byName[rule.name] = [];\n            }\n            byName[rule.name].push(rule);\n        });\n    }\n\n    // So we can allow passing (rules, start) directly to Parser for backwards compatibility\n    Grammar.fromCompiled = function(rules, start) {\n        var lexer = rules.Lexer;\n        if (rules.ParserStart) {\n          start = rules.ParserStart;\n          rules = rules.ParserRules;\n        }\n        var rules = rules.map(function (r) { return (new Rule(r.name, r.symbols, r.postprocess)); });\n        var g = new Grammar(rules, start);\n        g.lexer = lexer; // nb. storing lexer on Grammar is iffy, but unavoidable\n        return g;\n    }\n\n\n    function StreamLexer() {\n      this.reset(\"\");\n    }\n\n    StreamLexer.prototype.reset = function(data, state) {\n        this.buffer = data;\n        this.index = 0;\n        this.line = state ? state.line : 1;\n        this.lastLineBreak = state ? -state.col : 0;\n    }\n\n    StreamLexer.prototype.next = function() {\n        if (this.index < this.buffer.length) {\n            var ch = this.buffer[this.index++];\n            if (ch === '\\n') {\n              this.line += 1;\n              this.lastLineBreak = this.index;\n            }\n            return {value: ch};\n        }\n    }\n\n    StreamLexer.prototype.save = function() {\n      return {\n        line: this.line,\n        col: this.index - this.lastLineBreak,\n      }\n    }\n\n    StreamLexer.prototype.formatError = function(token, message) {\n        // nb. this gets called after consuming the offending token,\n        // so the culprit is index-1\n        var buffer = this.buffer;\n        if (typeof buffer === 'string') {\n            var lines = buffer\n                .split(\"\\n\")\n                .slice(\n                    Math.max(0, this.line - 5), \n                    this.line\n                );\n\n            var nextLineBreak = buffer.indexOf('\\n', this.index);\n            if (nextLineBreak === -1) nextLineBreak = buffer.length;\n            var col = this.index - this.lastLineBreak;\n            var lastLineDigits = String(this.line).length;\n            message += \" at line \" + this.line + \" col \" + col + \":\\n\\n\";\n            message += lines\n                .map(function(line, i) {\n                    return pad(this.line - lines.length + i + 1, lastLineDigits) + \" \" + line;\n                }, this)\n                .join(\"\\n\");\n            message += \"\\n\" + pad(\"\", lastLineDigits + col) + \"^\\n\";\n            return message;\n        } else {\n            return message + \" at index \" + (this.index - 1);\n        }\n\n        function pad(n, length) {\n            var s = String(n);\n            return Array(length - s.length + 1).join(\" \") + s;\n        }\n    }\n\n    function Parser(rules, start, options) {\n        if (rules instanceof Grammar) {\n            var grammar = rules;\n            var options = start;\n        } else {\n            var grammar = Grammar.fromCompiled(rules, start);\n        }\n        this.grammar = grammar;\n\n        // Read options\n        this.options = {\n            keepHistory: false,\n            lexer: grammar.lexer || new StreamLexer,\n        };\n        for (var key in (options || {})) {\n            this.options[key] = options[key];\n        }\n\n        // Setup lexer\n        this.lexer = this.options.lexer;\n        this.lexerState = undefined;\n\n        // Setup a table\n        var column = new Column(grammar, 0);\n        var table = this.table = [column];\n\n        // I could be expecting anything.\n        column.wants[grammar.start] = [];\n        column.predict(grammar.start);\n        // TODO what if start rule is nullable?\n        column.process();\n        this.current = 0; // token index\n    }\n\n    // create a reserved token for indicating a parse fail\n    Parser.fail = {};\n\n    Parser.prototype.feed = function(chunk) {\n        var lexer = this.lexer;\n        lexer.reset(chunk, this.lexerState);\n\n        var token;\n        while (true) {\n            try {\n                token = lexer.next();\n                if (!token) {\n                    break;\n                }\n            } catch (e) {\n                // Create the next column so that the error reporter\n                // can display the correctly predicted states.\n                var nextColumn = new Column(this.grammar, this.current + 1);\n                this.table.push(nextColumn);\n                var err = new Error(this.reportLexerError(e));\n                err.offset = this.current;\n                err.token = e.token;\n                throw err;\n            }\n            // We add new states to table[current+1]\n            var column = this.table[this.current];\n\n            // GC unused states\n            if (!this.options.keepHistory) {\n                delete this.table[this.current - 1];\n            }\n\n            var n = this.current + 1;\n            var nextColumn = new Column(this.grammar, n);\n            this.table.push(nextColumn);\n\n            // Advance all tokens that expect the symbol\n            var literal = token.text !== undefined ? token.text : token.value;\n            var value = lexer.constructor === StreamLexer ? token.value : token;\n            var scannable = column.scannable;\n            for (var w = scannable.length; w--; ) {\n                var state = scannable[w];\n                var expect = state.rule.symbols[state.dot];\n                // Try to consume the token\n                // either regex or literal\n                if (expect.test ? expect.test(value) :\n                    expect.type ? expect.type === token.type\n                                : expect.literal === literal) {\n                    // Add it\n                    var next = state.nextState({data: value, token: token, isToken: true, reference: n - 1});\n                    nextColumn.states.push(next);\n                }\n            }\n\n            // Next, for each of the rules, we either\n            // (a) complete it, and try to see if the reference row expected that\n            //     rule\n            // (b) predict the next nonterminal it expects by adding that\n            //     nonterminal's start state\n            // To prevent duplication, we also keep track of rules we have already\n            // added\n\n            nextColumn.process();\n\n            // If needed, throw an error:\n            if (nextColumn.states.length === 0) {\n                // No states at all! This is not good.\n                var err = new Error(this.reportError(token));\n                err.offset = this.current;\n                err.token = token;\n                throw err;\n            }\n\n            // maybe save lexer state\n            if (this.options.keepHistory) {\n              column.lexerState = lexer.save()\n            }\n\n            this.current++;\n        }\n        if (column) {\n          this.lexerState = lexer.save()\n        }\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n\n        // Allow chaining, for whatever it's worth\n        return this;\n    };\n\n    Parser.prototype.reportLexerError = function(lexerError) {\n        var tokenDisplay, lexerMessage;\n        // Planning to add a token property to moo's thrown error\n        // even on erroring tokens to be used in error display below\n        var token = lexerError.token;\n        if (token) {\n            tokenDisplay = \"input \" + JSON.stringify(token.text[0]) + \" (lexer error)\";\n            lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        } else {\n            tokenDisplay = \"input (lexer error)\";\n            lexerMessage = lexerError.message;\n        }\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportError = function(token) {\n        var tokenDisplay = (token.type ? token.type + \" token: \" : \"\") + JSON.stringify(token.value !== undefined ? token.value : token);\n        var lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportErrorCommon = function(lexerMessage, tokenDisplay) {\n        var lines = [];\n        lines.push(lexerMessage);\n        var lastColumnIndex = this.table.length - 2;\n        var lastColumn = this.table[lastColumnIndex];\n        var expectantStates = lastColumn.states\n            .filter(function(state) {\n                var nextSymbol = state.rule.symbols[state.dot];\n                return nextSymbol && typeof nextSymbol !== \"string\";\n            });\n\n        if (expectantStates.length === 0) {\n            lines.push('Unexpected ' + tokenDisplay + '. I did not expect any more input. Here is the state of my parse table:\\n');\n            this.displayStateStack(lastColumn.states, lines);\n        } else {\n            lines.push('Unexpected ' + tokenDisplay + '. Instead, I was expecting to see one of the following:\\n');\n            // Display a \"state stack\" for each expectant state\n            // - which shows you how this state came to be, step by step.\n            // If there is more than one derivation, we only display the first one.\n            var stateStacks = expectantStates\n                .map(function(state) {\n                    return this.buildFirstStateStack(state, []) || [state];\n                }, this);\n            // Display each state that is expecting a terminal symbol next.\n            stateStacks.forEach(function(stateStack) {\n                var state = stateStack[0];\n                var nextSymbol = state.rule.symbols[state.dot];\n                var symbolDisplay = this.getSymbolDisplay(nextSymbol);\n                lines.push('A ' + symbolDisplay + ' based on:');\n                this.displayStateStack(stateStack, lines);\n            }, this);\n        }\n        lines.push(\"\");\n        return lines.join(\"\\n\");\n    }\n    \n    Parser.prototype.displayStateStack = function(stateStack, lines) {\n        var lastDisplay;\n        var sameDisplayCount = 0;\n        for (var j = 0; j < stateStack.length; j++) {\n            var state = stateStack[j];\n            var display = state.rule.toString(state.dot);\n            if (display === lastDisplay) {\n                sameDisplayCount++;\n            } else {\n                if (sameDisplayCount > 0) {\n                    lines.push('    ^ ' + sameDisplayCount + ' more lines identical to this');\n                }\n                sameDisplayCount = 0;\n                lines.push('    ' + display);\n            }\n            lastDisplay = display;\n        }\n    };\n\n    Parser.prototype.getSymbolDisplay = function(symbol) {\n        return getSymbolLongDisplay(symbol);\n    };\n\n    /*\n    Builds a the first state stack. You can think of a state stack as the call stack\n    of the recursive-descent parser which the Nearley parse algorithm simulates.\n    A state stack is represented as an array of state objects. Within a\n    state stack, the first item of the array will be the starting\n    state, with each successive item in the array going further back into history.\n\n    This function needs to be given a starting state and an empty array representing\n    the visited states, and it returns an single state stack.\n\n    */\n    Parser.prototype.buildFirstStateStack = function(state, visited) {\n        if (visited.indexOf(state) !== -1) {\n            // Found cycle, return null\n            // to eliminate this path from the results, because\n            // we don't know how to display it meaningfully\n            return null;\n        }\n        if (state.wantedBy.length === 0) {\n            return [state];\n        }\n        var prevState = state.wantedBy[0];\n        var childVisited = [state].concat(visited);\n        var childResult = this.buildFirstStateStack(prevState, childVisited);\n        if (childResult === null) {\n            return null;\n        }\n        return [state].concat(childResult);\n    };\n\n    Parser.prototype.save = function() {\n        var column = this.table[this.current];\n        column.lexerState = this.lexerState;\n        return column;\n    };\n\n    Parser.prototype.restore = function(column) {\n        var index = column.index;\n        this.current = index;\n        this.table[index] = column;\n        this.table.splice(index + 1);\n        this.lexerState = column.lexerState;\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n    };\n\n    // nb. deprecated: use save/restore instead!\n    Parser.prototype.rewind = function(index) {\n        if (!this.options.keepHistory) {\n            throw new Error('set option `keepHistory` to enable rewinding')\n        }\n        // nb. recall column (table) indicies fall between token indicies.\n        //        col 0   --   token 0   --   col 1\n        this.restore(this.table[index]);\n    };\n\n    Parser.prototype.finish = function() {\n        // Return the possible parsings\n        var considerations = [];\n        var start = this.grammar.start;\n        var column = this.table[this.table.length - 1]\n        column.states.forEach(function (t) {\n            if (t.rule.name === start\n                    && t.dot === t.rule.symbols.length\n                    && t.reference === 0\n                    && t.data !== Parser.fail) {\n                considerations.push(t);\n            }\n        });\n        return considerations.map(function(c) {return c.data; });\n    };\n\n    function getSymbolLongDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return 'character matching ' + symbol;\n            } else if (symbol.type) {\n                return symbol.type + ' token';\n            } else if (symbol.test) {\n                return 'token matching ' + String(symbol.test);\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    function getSymbolShortDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return symbol.toString();\n            } else if (symbol.type) {\n                return '%' + symbol.type;\n            } else if (symbol.test) {\n                return '<' + String(symbol.test) + '>';\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    return {\n        Parser: Parser,\n        Grammar: Grammar,\n        Rule: Rule,\n    };\n\n}));\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory) /* global define */\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory()\n  } else {\n    root.moo = factory()\n  }\n}(this, function() {\n  'use strict';\n\n  var hasOwnProperty = Object.prototype.hasOwnProperty\n  var toString = Object.prototype.toString\n  var hasSticky = typeof new RegExp().sticky === 'boolean'\n\n  /***************************************************************************/\n\n  function isRegExp(o) { return o && toString.call(o) === '[object RegExp]' }\n  function isObject(o) { return o && typeof o === 'object' && !isRegExp(o) && !Array.isArray(o) }\n\n  function reEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n  }\n  function reGroups(s) {\n    var re = new RegExp('|' + s)\n    return re.exec('').length - 1\n  }\n  function reCapture(s) {\n    return '(' + s + ')'\n  }\n  function reUnion(regexps) {\n    if (!regexps.length) return '(?!)'\n    var source =  regexps.map(function(s) {\n      return \"(?:\" + s + \")\"\n    }).join('|')\n    return \"(?:\" + source + \")\"\n  }\n\n  function regexpOrLiteral(obj) {\n    if (typeof obj === 'string') {\n      return '(?:' + reEscape(obj) + ')'\n\n    } else if (isRegExp(obj)) {\n      // TODO: consider /u support\n      if (obj.ignoreCase) throw new Error('RegExp /i flag not allowed')\n      if (obj.global) throw new Error('RegExp /g flag is implied')\n      if (obj.sticky) throw new Error('RegExp /y flag is implied')\n      if (obj.multiline) throw new Error('RegExp /m flag is implied')\n      return obj.source\n\n    } else {\n      throw new Error('Not a pattern: ' + obj)\n    }\n  }\n\n  function pad(s, length) {\n    if (s.length > length) {\n      return s\n    }\n    return Array(length - s.length + 1).join(\" \") + s\n  }\n\n  function lastNLines(string, numLines) {\n    var position = string.length\n    var lineBreaks = 0;\n    while (true) {\n      var idx = string.lastIndexOf(\"\\n\", position - 1)\n      if (idx === -1) {\n        break;\n      } else {\n        lineBreaks++\n      }\n      position = idx\n      if (lineBreaks === numLines) {\n        break;\n      }\n      if (position === 0) {\n        break;\n      }\n    }\n    var startPosition = \n      lineBreaks < numLines ?\n      0 : \n      position + 1\n    return string.substring(startPosition).split(\"\\n\")\n  }\n\n  function objectToRules(object) {\n    var keys = Object.getOwnPropertyNames(object)\n    var result = []\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      var thing = object[key]\n      var rules = [].concat(thing)\n      if (key === 'include') {\n        for (var j = 0; j < rules.length; j++) {\n          result.push({include: rules[j]})\n        }\n        continue\n      }\n      var match = []\n      rules.forEach(function(rule) {\n        if (isObject(rule)) {\n          if (match.length) result.push(ruleOptions(key, match))\n          result.push(ruleOptions(key, rule))\n          match = []\n        } else {\n          match.push(rule)\n        }\n      })\n      if (match.length) result.push(ruleOptions(key, match))\n    }\n    return result\n  }\n\n  function arrayToRules(array) {\n    var result = []\n    for (var i = 0; i < array.length; i++) {\n      var obj = array[i]\n      if (obj.include) {\n        var include = [].concat(obj.include)\n        for (var j = 0; j < include.length; j++) {\n          result.push({include: include[j]})\n        }\n        continue\n      }\n      if (!obj.type) {\n        throw new Error('Rule has no type: ' + JSON.stringify(obj))\n      }\n      result.push(ruleOptions(obj.type, obj))\n    }\n    return result\n  }\n\n  function ruleOptions(type, obj) {\n    if (!isObject(obj)) {\n      obj = { match: obj }\n    }\n    if (obj.include) {\n      throw new Error('Matching rules cannot also include states')\n    }\n\n    // nb. error and fallback imply lineBreaks\n    var options = {\n      defaultType: type,\n      lineBreaks: !!obj.error || !!obj.fallback,\n      pop: false,\n      next: null,\n      push: null,\n      error: false,\n      fallback: false,\n      value: null,\n      type: null,\n      shouldThrow: false,\n    }\n\n    // Avoid Object.assign(), so we support IE9+\n    for (var key in obj) {\n      if (hasOwnProperty.call(obj, key)) {\n        options[key] = obj[key]\n      }\n    }\n\n    // type transform cannot be a string\n    if (typeof options.type === 'string' && type !== options.type) {\n      throw new Error(\"Type transform cannot be a string (type '\" + options.type + \"' for token '\" + type + \"')\")\n    }\n\n    // convert to array\n    var match = options.match\n    options.match = Array.isArray(match) ? match : match ? [match] : []\n    options.match.sort(function(a, b) {\n      return isRegExp(a) && isRegExp(b) ? 0\n           : isRegExp(b) ? -1 : isRegExp(a) ? +1 : b.length - a.length\n    })\n    return options\n  }\n\n  function toRules(spec) {\n    return Array.isArray(spec) ? arrayToRules(spec) : objectToRules(spec)\n  }\n\n  var defaultErrorRule = ruleOptions('error', {lineBreaks: true, shouldThrow: true})\n  function compileRules(rules, hasStates) {\n    var errorRule = null\n    var fast = Object.create(null)\n    var fastAllowed = true\n    var unicodeFlag = null\n    var groups = []\n    var parts = []\n\n    // If there is a fallback rule, then disable fast matching\n    for (var i = 0; i < rules.length; i++) {\n      if (rules[i].fallback) {\n        fastAllowed = false\n      }\n    }\n\n    for (var i = 0; i < rules.length; i++) {\n      var options = rules[i]\n\n      if (options.include) {\n        // all valid inclusions are removed by states() preprocessor\n        throw new Error('Inheritance is not allowed in stateless lexers')\n      }\n\n      if (options.error || options.fallback) {\n        // errorRule can only be set once\n        if (errorRule) {\n          if (!options.fallback === !errorRule.fallback) {\n            throw new Error(\"Multiple \" + (options.fallback ? \"fallback\" : \"error\") + \" rules not allowed (for token '\" + options.defaultType + \"')\")\n          } else {\n            throw new Error(\"fallback and error are mutually exclusive (for token '\" + options.defaultType + \"')\")\n          }\n        }\n        errorRule = options\n      }\n\n      var match = options.match.slice()\n      if (fastAllowed) {\n        while (match.length && typeof match[0] === 'string' && match[0].length === 1) {\n          var word = match.shift()\n          fast[word.charCodeAt(0)] = options\n        }\n      }\n\n      // Warn about inappropriate state-switching options\n      if (options.pop || options.push || options.next) {\n        if (!hasStates) {\n          throw new Error(\"State-switching options are not allowed in stateless lexers (for token '\" + options.defaultType + \"')\")\n        }\n        if (options.fallback) {\n          throw new Error(\"State-switching options are not allowed on fallback tokens (for token '\" + options.defaultType + \"')\")\n        }\n      }\n\n      // Only rules with a .match are included in the RegExp\n      if (match.length === 0) {\n        continue\n      }\n      fastAllowed = false\n\n      groups.push(options)\n\n      // Check unicode flag is used everywhere or nowhere\n      for (var j = 0; j < match.length; j++) {\n        var obj = match[j]\n        if (!isRegExp(obj)) {\n          continue\n        }\n\n        if (unicodeFlag === null) {\n          unicodeFlag = obj.unicode\n        } else if (unicodeFlag !== obj.unicode && options.fallback === false) {\n          throw new Error('If one rule is /u then all must be')\n        }\n      }\n\n      // convert to RegExp\n      var pat = reUnion(match.map(regexpOrLiteral))\n\n      // validate\n      var regexp = new RegExp(pat)\n      if (regexp.test(\"\")) {\n        throw new Error(\"RegExp matches empty string: \" + regexp)\n      }\n      var groupCount = reGroups(pat)\n      if (groupCount > 0) {\n        throw new Error(\"RegExp has capture groups: \" + regexp + \"\\nUse (?: … ) instead\")\n      }\n\n      // try and detect rules matching newlines\n      if (!options.lineBreaks && regexp.test('\\n')) {\n        throw new Error('Rule should declare lineBreaks: ' + regexp)\n      }\n\n      // store regex\n      parts.push(reCapture(pat))\n    }\n\n\n    // If there's no fallback rule, use the sticky flag so we only look for\n    // matches at the current index.\n    //\n    // If we don't support the sticky flag, then fake it using an irrefutable\n    // match (i.e. an empty pattern).\n    var fallbackRule = errorRule && errorRule.fallback\n    var flags = hasSticky && !fallbackRule ? 'ym' : 'gm'\n    var suffix = hasSticky || fallbackRule ? '' : '|'\n\n    if (unicodeFlag === true) flags += \"u\"\n    var combined = new RegExp(reUnion(parts) + suffix, flags)\n    return {regexp: combined, groups: groups, fast: fast, error: errorRule || defaultErrorRule}\n  }\n\n  function compile(rules) {\n    var result = compileRules(toRules(rules))\n    return new Lexer({start: result}, 'start')\n  }\n\n  function checkStateGroup(g, name, map) {\n    var state = g && (g.push || g.next)\n    if (state && !map[state]) {\n      throw new Error(\"Missing state '\" + state + \"' (in token '\" + g.defaultType + \"' of state '\" + name + \"')\")\n    }\n    if (g && g.pop && +g.pop !== 1) {\n      throw new Error(\"pop must be 1 (in token '\" + g.defaultType + \"' of state '\" + name + \"')\")\n    }\n  }\n  function compileStates(states, start) {\n    var all = states.$all ? toRules(states.$all) : []\n    delete states.$all\n\n    var keys = Object.getOwnPropertyNames(states)\n    if (!start) start = keys[0]\n\n    var ruleMap = Object.create(null)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      ruleMap[key] = toRules(states[key]).concat(all)\n    }\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      var rules = ruleMap[key]\n      var included = Object.create(null)\n      for (var j = 0; j < rules.length; j++) {\n        var rule = rules[j]\n        if (!rule.include) continue\n        var splice = [j, 1]\n        if (rule.include !== key && !included[rule.include]) {\n          included[rule.include] = true\n          var newRules = ruleMap[rule.include]\n          if (!newRules) {\n            throw new Error(\"Cannot include nonexistent state '\" + rule.include + \"' (in state '\" + key + \"')\")\n          }\n          for (var k = 0; k < newRules.length; k++) {\n            var newRule = newRules[k]\n            if (rules.indexOf(newRule) !== -1) continue\n            splice.push(newRule)\n          }\n        }\n        rules.splice.apply(rules, splice)\n        j--\n      }\n    }\n\n    var map = Object.create(null)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      map[key] = compileRules(ruleMap[key], true)\n    }\n\n    for (var i = 0; i < keys.length; i++) {\n      var name = keys[i]\n      var state = map[name]\n      var groups = state.groups\n      for (var j = 0; j < groups.length; j++) {\n        checkStateGroup(groups[j], name, map)\n      }\n      var fastKeys = Object.getOwnPropertyNames(state.fast)\n      for (var j = 0; j < fastKeys.length; j++) {\n        checkStateGroup(state.fast[fastKeys[j]], name, map)\n      }\n    }\n\n    return new Lexer(map, start)\n  }\n\n  function keywordTransform(map) {\n\n    // Use a JavaScript Map to map keywords to their corresponding token type\n    // unless Map is unsupported, then fall back to using an Object:\n    var isMap = typeof Map !== 'undefined'\n    var reverseMap = isMap ? new Map : Object.create(null)\n\n    var types = Object.getOwnPropertyNames(map)\n    for (var i = 0; i < types.length; i++) {\n      var tokenType = types[i]\n      var item = map[tokenType]\n      var keywordList = Array.isArray(item) ? item : [item]\n      keywordList.forEach(function(keyword) {\n        if (typeof keyword !== 'string') {\n          throw new Error(\"keyword must be string (in keyword '\" + tokenType + \"')\")\n        }\n        if (isMap) {\n          reverseMap.set(keyword, tokenType)\n        } else {\n          reverseMap[keyword] = tokenType\n        }\n      })\n    }\n    return function(k) {\n      return isMap ? reverseMap.get(k) : reverseMap[k]\n    }\n  }\n\n  /***************************************************************************/\n\n  var Lexer = function(states, state) {\n    this.startState = state\n    this.states = states\n    this.buffer = ''\n    this.stack = []\n    this.reset()\n  }\n\n  Lexer.prototype.reset = function(data, info) {\n    this.buffer = data || ''\n    this.index = 0\n    this.line = info ? info.line : 1\n    this.col = info ? info.col : 1\n    this.queuedToken = info ? info.queuedToken : null\n    this.queuedText = info ? info.queuedText: \"\";\n    this.queuedThrow = info ? info.queuedThrow : null\n    this.setState(info ? info.state : this.startState)\n    this.stack = info && info.stack ? info.stack.slice() : []\n    return this\n  }\n\n  Lexer.prototype.save = function() {\n    return {\n      line: this.line,\n      col: this.col,\n      state: this.state,\n      stack: this.stack.slice(),\n      queuedToken: this.queuedToken,\n      queuedText: this.queuedText,\n      queuedThrow: this.queuedThrow,\n    }\n  }\n\n  Lexer.prototype.setState = function(state) {\n    if (!state || this.state === state) return\n    this.state = state\n    var info = this.states[state]\n    this.groups = info.groups\n    this.error = info.error\n    this.re = info.regexp\n    this.fast = info.fast\n  }\n\n  Lexer.prototype.popState = function() {\n    this.setState(this.stack.pop())\n  }\n\n  Lexer.prototype.pushState = function(state) {\n    this.stack.push(this.state)\n    this.setState(state)\n  }\n\n  var eat = hasSticky ? function(re, buffer) { // assume re is /y\n    return re.exec(buffer)\n  } : function(re, buffer) { // assume re is /g\n    var match = re.exec(buffer)\n    // will always match, since we used the |(?:) trick\n    if (match[0].length === 0) {\n      return null\n    }\n    return match\n  }\n\n  Lexer.prototype._getGroup = function(match) {\n    var groupCount = this.groups.length\n    for (var i = 0; i < groupCount; i++) {\n      if (match[i + 1] !== undefined) {\n        return this.groups[i]\n      }\n    }\n    throw new Error('Cannot find token type for matched text')\n  }\n\n  function tokenToString() {\n    return this.value\n  }\n\n  Lexer.prototype.next = function() {\n    var index = this.index\n\n    // If a fallback token matched, we don't need to re-run the RegExp\n    if (this.queuedGroup) {\n      var token = this._token(this.queuedGroup, this.queuedText, index)\n      this.queuedGroup = null\n      this.queuedText = \"\"\n      return token\n    }\n\n    var buffer = this.buffer\n    if (index === buffer.length) {\n      return // EOF\n    }\n\n    // Fast matching for single characters\n    var group = this.fast[buffer.charCodeAt(index)]\n    if (group) {\n      return this._token(group, buffer.charAt(index), index)\n    }\n\n    // Execute RegExp\n    var re = this.re\n    re.lastIndex = index\n    var match = eat(re, buffer)\n\n    // Error tokens match the remaining buffer\n    var error = this.error\n    if (match == null) {\n      return this._token(error, buffer.slice(index, buffer.length), index)\n    }\n\n    var group = this._getGroup(match)\n    var text = match[0]\n\n    if (error.fallback && match.index !== index) {\n      this.queuedGroup = group\n      this.queuedText = text\n\n      // Fallback tokens contain the unmatched portion of the buffer\n      return this._token(error, buffer.slice(index, match.index), index)\n    }\n\n    return this._token(group, text, index)\n  }\n\n  Lexer.prototype._token = function(group, text, offset) {\n    // count line breaks\n    var lineBreaks = 0\n    if (group.lineBreaks) {\n      var matchNL = /\\n/g\n      var nl = 1\n      if (text === '\\n') {\n        lineBreaks = 1\n      } else {\n        while (matchNL.exec(text)) { lineBreaks++; nl = matchNL.lastIndex }\n      }\n    }\n\n    var token = {\n      type: (typeof group.type === 'function' && group.type(text)) || group.defaultType,\n      value: typeof group.value === 'function' ? group.value(text) : text,\n      text: text,\n      toString: tokenToString,\n      offset: offset,\n      lineBreaks: lineBreaks,\n      line: this.line,\n      col: this.col,\n    }\n    // nb. adding more props to token object will make V8 sad!\n\n    var size = text.length\n    this.index += size\n    this.line += lineBreaks\n    if (lineBreaks !== 0) {\n      this.col = size - nl + 1\n    } else {\n      this.col += size\n    }\n\n    // throw, if no rule with {error: true}\n    if (group.shouldThrow) {\n      var err = new Error(this.formatError(token, \"invalid syntax\"))\n      throw err;\n    }\n\n    if (group.pop) this.popState()\n    else if (group.push) this.pushState(group.push)\n    else if (group.next) this.setState(group.next)\n\n    return token\n  }\n\n  if (typeof Symbol !== 'undefined' && Symbol.iterator) {\n    var LexerIterator = function(lexer) {\n      this.lexer = lexer\n    }\n\n    LexerIterator.prototype.next = function() {\n      var token = this.lexer.next()\n      return {value: token, done: !token}\n    }\n\n    LexerIterator.prototype[Symbol.iterator] = function() {\n      return this\n    }\n\n    Lexer.prototype[Symbol.iterator] = function() {\n      return new LexerIterator(this)\n    }\n  }\n\n  Lexer.prototype.formatError = function(token, message) {\n    if (token == null) {\n      // An undefined token indicates EOF\n      var text = this.buffer.slice(this.index)\n      var token = {\n        text: text,\n        offset: this.index,\n        lineBreaks: text.indexOf('\\n') === -1 ? 0 : 1,\n        line: this.line,\n        col: this.col,\n      }\n    }\n    \n    var numLinesAround = 2\n    var firstDisplayedLine = Math.max(token.line - numLinesAround, 1)\n    var lastDisplayedLine = token.line + numLinesAround\n    var lastLineDigits = String(lastDisplayedLine).length\n    var displayedLines = lastNLines(\n        this.buffer, \n        (this.line - token.line) + numLinesAround + 1\n      )\n      .slice(0, 5)\n    var errorLines = []\n    errorLines.push(message + \" at line \" + token.line + \" col \" + token.col + \":\")\n    errorLines.push(\"\")\n    for (var i = 0; i < displayedLines.length; i++) {\n      var line = displayedLines[i]\n      var lineNo = firstDisplayedLine + i\n      errorLines.push(pad(String(lineNo), lastLineDigits) + \"  \" + line);\n      if (lineNo === token.line) {\n        errorLines.push(pad(\"\", lastLineDigits + token.col + 1) + \"^\")\n      }\n    }\n    return errorLines.join(\"\\n\")\n  }\n\n  Lexer.prototype.clone = function() {\n    return new Lexer(this.states, this.state)\n  }\n\n  Lexer.prototype.has = function(tokenType) {\n    return true\n  }\n\n\n  return {\n    compile: compile,\n    states: compileStates,\n    error: Object.freeze({error: true}),\n    fallback: Object.freeze({fallback: true}),\n    keywords: keywordTransform,\n  }\n\n}));\n","import { Logger } from '.'\n\n/**\n * Each error name with corresponding type in info value\n */\ninterface PublicodesErrorTypes {\n\tInternalError: {\n\t\tdottedName?: string\n\t}\n\tEngineError: {}\n\tSyntaxError: {\n\t\tdottedName: string\n\t}\n\tEvaluationError: {\n\t\tdottedName: string\n\t}\n\tUnknownRule: {\n\t\tdottedName: string\n\t}\n\tPrivateRule: {\n\t\tdottedName: string\n\t}\n}\n\n/**\n * Return true if `error` is a PublicodesError,\n * use `name` parameter to check and narow error type\n * @example\n * try {\n * \tnew Engine().evaluate()\n * } catch (error) {\n * \tif (isPublicodesError(error, 'EngineError')) {\n * \t\tconsole.log(error.info)\n * \t}\n * }\n */\nexport const isPublicodesError = <Name extends keyof PublicodesErrorTypes>(\n\terror: unknown,\n\tname?: Name\n): error is PublicodesError<\n\ttypeof name extends undefined ? keyof PublicodesErrorTypes : Name\n> =>\n\terror instanceof PublicodesError &&\n\t(name === undefined ? true : error.name === name)\n\n/**\n * Generic error for Publicodes\n */\nexport class PublicodesError<\n\tName extends keyof PublicodesErrorTypes\n> extends Error {\n\tname: Name\n\tinfo: PublicodesErrorTypes[Name]\n\n\tconstructor(\n\t\tname: Name,\n\t\tmessage: string,\n\t\tinfo: PublicodesErrorTypes[Name],\n\t\toriginalError?: Error\n\t) {\n\t\tsuper(buildMessage(name, message, info, originalError))\n\t\tthis.name = name\n\t\tthis.info = info\n\t}\n}\n\nconst buildMessage = (\n\tname: string,\n\tmessage: string,\n\tinfo?: PublicodesErrorTypes[keyof PublicodesErrorTypes],\n\toriginalError?: Error\n) => {\n\tconst types: Partial<Record<keyof PublicodesErrorTypes, string>> = {\n\t\tSyntaxError: 'Erreur syntaxique',\n\t\tEvaluationError: \"Erreur d'évaluation\",\n\t\tUnknownRule: 'Règle inconnue',\n\t\tPrivateRule: 'Règle privée',\n\t}\n\tconst isError = /error/i.test(name)\n\n\treturn (\n\t\t`\\n[ ${types[name] ?? name} ]` +\n\t\t(info && 'dottedName' in info && info.dottedName?.length\n\t\t\t? `\\n➡️  Dans la règle \"${info.dottedName}\"`\n\t\t\t: '') +\n\t\t`\\n${isError ? '✖️' : '⚠️'}  ${message}` +\n\t\t(originalError\n\t\t\t? '\\n' + (isError ? '    ' : 'ℹ️  ') + originalError.message\n\t\t\t: '')\n\t)\n}\n\n/**\n * @deprecated Throw an internal server error, replace this by `throw new PublicodesError('InternalError', ...)`\n */\nexport class PublicodesInternalError extends PublicodesError<'InternalError'> {\n\tconstructor(payload: {}) {\n\t\tsuper(\n\t\t\t'InternalError',\n\t\t\t`\nErreur interne du moteur.\n\nCette erreur est le signe d'un bug dans publicodes. Pour nous aider à le résoudre, vous pouvez copier ce texte dans un nouveau ticket : https://github.com/betagouv/mon-entreprise/issues/new.\n\npayload:\n${JSON.stringify(payload, null, 2)}\n`,\n\t\t\tpayload\n\t\t)\n\t}\n}\n\n/**\n * Use this error in default case of a switch to check exhaustivity statically\n * inspired by https://github.com/ts-essentials/ts-essentials#exhaustive-switch-cases\n */\nexport class UnreachableCaseError extends PublicodesInternalError {\n\tconstructor(value: never) {\n\t\tsuper(value)\n\t}\n}\n\nexport function warning(\n\tlogger: Logger,\n\tmessage: string,\n\tinformation: { dottedName: string },\n\toriginalError?: Error\n) {\n\tlogger.warn(\n\t\tbuildMessage('Avertissement', message, information, originalError)\n\t)\n}\n\nexport function experimentalRuleWarning(logger: Logger, dottedName: string) {\n\tlogger.warn(\n\t\tbuildMessage(\n\t\t\t'Avertissement',\n\t\t\t\"Cette règle est tagguée comme experimentale. \\n\\nCela veut dire qu'elle peut être modifiée, renommée, ou supprimée sans qu'il n'y ait de changement de version majeure dans l'API.\\n\",\n\t\t\t{ dottedName }\n\t\t)\n\t)\n}\n","export function addToMapSet<T>(map: Map<T, Set<T>>, key: T, value: T) {\n\tif (map.has(key)) {\n\t\tmap.get(key)!.add(value)\n\t\treturn\n\t}\n\tmap.set(key, new Set([value]))\n}\n\nexport function mergeWithArray<\n\tN extends string | number | symbol,\n\tM extends string | number | symbol,\n\tT\n>(obj1: Record<N, Array<T>>, obj2: Record<M, Array<T>>): Record<N | M, Array<T>>\n\nexport function mergeWithArray<\n\tN extends string | number | symbol,\n\tM extends string | number | symbol,\n\tT\n>(\n\tobj1: Partial<Record<N, Array<T>>>,\n\tobj2: Partial<Record<M, Array<T>>>\n): Partial<Record<N | M, Array<T>>>\n\nexport function mergeWithArray<K extends string | number | symbol, T>(\n\tobj1: Partial<Record<K, Array<T>>>,\n\tobj2: Partial<Record<K, Array<T>>>\n): Partial<Record<K, Array<T>>> {\n\treturn (Object.entries(obj2) as Array<[K, Array<T>]>).reduce(\n\t\t(obj, [key, value]) => ({\n\t\t\t...obj,\n\t\t\t[key]: [...(obj[key] ?? []), ...value],\n\t\t}),\n\t\tobj1\n\t) as Partial<Record<K, Array<T>>>\n}\n\nexport const weakCopyObj = <T extends Record<string, unknown>>(obj: T): T => {\n\tconst copy = {} as T\n\tfor (const key in obj) {\n\t\tcopy[key] = obj[key]\n\t}\n\n\treturn copy\n}\n","import { ParsedRules } from '..'\nimport { UnreachableCaseError } from '../error'\nimport { TrancheNodes } from '../mecanisms/trancheUtils'\nimport { ReplacementRule } from '../replacement'\nimport { RuleNode } from '../rule'\nimport { weakCopyObj } from '../utils'\nimport {\n\tASTNode,\n\tASTTransformer,\n\tASTVisitor,\n\tNodeKind,\n\tTraverseFunction,\n} from './types'\n\n/**\n\tThis function creates a transormation of the AST from on a simpler\n\tcallback function `fn`\n\n\t`fn` will be called with the nodes of the ASTTree during the exploration\n\n\tThe outcome of the callback function has an influence on the exploration of the AST :\n\t- `false`, the node is not updated and the exploration does not continue further down this branch\n\t- `undefined`, the node is not updated but the exploration continues and its children will be transformed\n\t- `ASTNode`, the node is transformed to the new value and the exploration does not continue further down the branch\n\n\t`updateFn` : It is possible to specifically use the updated version of a child\n\tby using the function passed as second argument. The returned value will be the\n\ttransformed version of the node.\n\t*/\nexport function makeASTTransformer(\n\tfn: (node: ASTNode, transform: ASTTransformer) => ASTNode | undefined | false,\n\tstopOnUpdate = true\n): ASTTransformer {\n\tfunction transform(node: ASTNode): ASTNode {\n\t\tconst updatedNode = fn(node, transform)\n\t\tif (updatedNode === false) {\n\t\t\treturn node\n\t\t}\n\t\tif (updatedNode === undefined) {\n\t\t\treturn traverseASTNode(transform, node)\n\t\t}\n\t\treturn stopOnUpdate ? updatedNode : traverseASTNode(transform, updatedNode)\n\t}\n\treturn transform\n}\nexport function makeASTVisitor(\n\tfn: (node: ASTNode, visit: ASTVisitor) => 'continue' | 'stop'\n): ASTVisitor {\n\tfunction visit(node: ASTNode) {\n\t\tswitch (fn(node, visit)) {\n\t\t\tcase 'continue':\n\t\t\t\ttraverseASTNode(transformizedVisit, node)\n\t\t\t\treturn\n\t\t\tcase 'stop':\n\t\t\t\treturn\n\t\t}\n\t}\n\tconst transformizedVisit: ASTTransformer = (node) => {\n\t\tvisit(node)\n\t\treturn node\n\t}\n\treturn visit\n}\n\n// Can be made more flexible with other args like a filter function (ASTNode -> Bool).\nexport function iterAST(\n\tchildrenSelector: (node: ASTNode) => Iterable<ASTNode>,\n\tnode: ASTNode\n): ASTNode[] {\n\tfunction* iterate(node: ASTNode): IterableIterator<ASTNode> {\n\t\tyield node\n\t\tconst selectedSubNodes = childrenSelector(node)\n\t\tfor (const subNode of selectedSubNodes) yield* iterate(subNode)\n\t}\n\treturn [...iterate(node)]\n}\n\n/**\n * This function allows to construct a specific value while exploring the AST with\n * a simple reducing function as argument.\n *\n * `fn` will be called with the currently reduced value `acc` and the current node of the AST\n *\n * If the callback function returns:\n * - `undefined`, the exploration continues further down and all the children are reduced\n * \tsuccessively to a single value\n * - `T`, the reduced value is returned\n *\n * `reduceFn` : It is possible to specifically use the reduced value of a child\n * by using the function passed as second argument. The returned value will be the reduced version\n * of the node\n */\nexport function reduceAST<T>(\n\tfn: (acc: T, n: ASTNode, reduceFn: (n: ASTNode) => T) => T | undefined,\n\tstart: T,\n\tnode: ASTNode\n): T {\n\tfunction traverseFn(acc: T, node: ASTNode): T {\n\t\tconst result = fn(acc, node, traverseFn.bind(null, start))\n\t\tif (result === undefined) {\n\t\t\treturn getChildrenNodes(node).reduce(traverseFn, acc)\n\t\t}\n\t\treturn result\n\t}\n\treturn traverseFn(start, node)\n}\n\nexport function getChildrenNodes(node: ASTNode): ASTNode[] {\n\tconst nodes: ASTNode[] = []\n\ttraverseASTNode((node) => {\n\t\tnodes.push(node)\n\t\treturn node\n\t}, node)\n\treturn nodes\n}\n\nexport function traverseParsedRules<Names extends string>(\n\tfn: ASTTransformer,\n\tparsedRules: ParsedRules<Names>\n): ParsedRules<Names> {\n\tconst ret = {} as Record<Names, ASTNode>\n\tfor (const name in parsedRules) {\n\t\tret[name] = fn(parsedRules[name])\n\t}\n\n\treturn ret as ParsedRules<Names>\n}\n\n/**\n * Apply a transform function on children. Not recursive.\n */\nexport const traverseASTNode: TraverseFunction<NodeKind> = (fn, node) => {\n\tnode = traverseSourceMap(fn, node)\n\tswitch (node.nodeKind) {\n\t\tcase 'rule':\n\t\t\treturn traverseRuleNode(fn, node)\n\t\tcase 'reference':\n\t\tcase 'constant':\n\t\t\treturn node\n\t\tcase 'arrondi':\n\t\t\treturn traverseArrondiNode(fn, node)\n\t\tcase 'simplifier unité':\n\t\tcase 'variable manquante':\n\t\tcase 'est non applicable':\n\t\tcase 'est non défini':\n\t\t\treturn traverseUnaryOperationNode(fn, node)\n\t\tcase 'barème':\n\t\tcase 'taux progressif':\n\t\tcase 'grille':\n\t\t\treturn traverseNodeWithTranches(fn, node)\n\t\tcase 'une possibilité':\n\t\t\treturn traverseArrayNode(fn, node)\n\t\tcase 'durée':\n\t\t\treturn traverseDuréeNode(fn, node)\n\t\tcase 'résoudre référence circulaire':\n\t\t\treturn traverseRésoudreRéférenceCirculaireNode(fn, node)\n\t\tcase 'inversion':\n\t\t\treturn traverseInversionNode(fn, node)\n\t\tcase 'operation':\n\t\t\treturn traverseOperationNode(fn, node)\n\n\t\tcase 'recalcul':\n\t\t\treturn traverseRecalculNode(fn, node)\n\t\tcase 'unité':\n\t\t\treturn traverseUnitéNode(fn, node)\n\t\tcase 'variations':\n\t\t\treturn traverseVariationNode(fn, node)\n\t\tcase 'replacementRule':\n\t\t\treturn traverseReplacementNode(fn, node)\n\t\tcase 'texte':\n\t\t\treturn traverseTextNode(fn, node)\n\t\tcase 'condition':\n\t\t\treturn traverseConditionNode(fn, node)\n\n\t\tdefault:\n\t\t\tthrow new UnreachableCaseError(node)\n\t}\n}\n\nconst traverseSourceMap: TraverseFunction<NodeKind> = (fn, node) => {\n\tif (!('sourceMap' in node) || !node.sourceMap || !node.sourceMap.args) {\n\t\treturn node\n\t}\n\tconst sourceMap = node.sourceMap\n\n\tconst args = {}\n\tfor (const key in sourceMap.args) {\n\t\tconst value = sourceMap.args[key]\n\t\targs[key] = Array.isArray(value) ? value.map((v) => fn(v)) : fn(value)\n\t}\n\n\treturn {\n\t\t...node,\n\t\tsourceMap: {\n\t\t\t...sourceMap,\n\t\t\targs,\n\t\t},\n\t}\n}\n\nconst traverseRuleNode: TraverseFunction<'rule'> = (fn, node) => {\n\tconst copy = weakCopyObj(node)\n\tcopy.suggestions = {}\n\tfor (const key in node.suggestions) {\n\t\tcopy.suggestions[key] = fn(node.suggestions[key])\n\t}\n\tcopy.replacements = node.replacements.map(fn) as Array<ReplacementRule>\n\tcopy.explanation = {\n\t\truleDisabledByItsParent: node.explanation.ruleDisabledByItsParent,\n\t\tnullableParent: node.explanation.nullableParent\n\t\t\t? fn(node.explanation.nullableParent)\n\t\t\t: undefined,\n\t\tparents: node.explanation.parents.map(fn),\n\t\tvaleur: fn(node.explanation.valeur),\n\t}\n\n\treturn copy\n}\n\nconst traverseReplacementNode: TraverseFunction<'replacementRule'> = (\n\tfn,\n\tnode\n) =>\n\t({\n\t\t...node,\n\t\tdefinitionRule: fn(node.definitionRule),\n\t\treplacedReference: fn(node.replacedReference),\n\t\treplacementNode: fn(node.replacementNode),\n\t\twhiteListedNames: node.whiteListedNames.map(fn),\n\t\tblackListedNames: node.blackListedNames.map(fn),\n\t} as ReplacementRule)\n\nconst traverseUnaryOperationNode: TraverseFunction<\n\t| 'simplifier unité'\n\t| 'est non applicable'\n\t| 'est non défini'\n\t| 'variable manquante'\n> = (fn, node) => ({\n\t...node,\n\texplanation: fn(node.explanation),\n})\n\nfunction traverseTranche(fn: (n: ASTNode) => ASTNode, tranches: TrancheNodes) {\n\treturn tranches.map((tranche) => ({\n\t\t...tranche,\n\t\t...(tranche.plafond && { plafond: fn(tranche.plafond) }),\n\t\t...('montant' in tranche && { montant: fn(tranche.montant) }),\n\t\t...('taux' in tranche && { taux: fn(tranche.taux) }),\n\t}))\n}\nconst traverseNodeWithTranches: TraverseFunction<\n\t'barème' | 'taux progressif' | 'grille'\n> = (fn, node) => ({\n\t...node,\n\texplanation: {\n\t\tassiette: fn(node.explanation.assiette),\n\t\tmultiplicateur: fn(node.explanation.multiplicateur),\n\t\ttranches: traverseTranche(fn, node.explanation.tranches),\n\t},\n})\n\nconst traverseArrayNode: TraverseFunction<'une possibilité'> = (fn, node) => ({\n\t...node,\n\texplanation: node.explanation.map(fn),\n})\n\nconst traverseOperationNode: TraverseFunction<'operation'> = (fn, node) => {\n\tconst copy = weakCopyObj(node)\n\tcopy.explanation = [fn(node.explanation[0]), fn(node.explanation[1])]\n\n\treturn copy\n}\n\nconst traverseDuréeNode: TraverseFunction<'durée'> = (fn, node) => ({\n\t...node,\n\texplanation: {\n\t\tdepuis: fn(node.explanation.depuis),\n\t\t\"jusqu'à\": fn(node.explanation[\"jusqu'à\"]),\n\t},\n})\n\nconst traverseInversionNode: TraverseFunction<'inversion'> = (fn, node) => ({\n\t...node,\n\texplanation: {\n\t\t...node.explanation,\n\t\tinversionCandidates: node.explanation.inversionCandidates.map(fn) as any, // TODO\n\t},\n})\n\nconst traverseArrondiNode: TraverseFunction<'arrondi'> = (fn, node) => ({\n\t...node,\n\texplanation: {\n\t\tvaleur: fn(node.explanation.valeur),\n\t\tarrondi: fn(node.explanation.arrondi),\n\t},\n})\n\nconst traverseRésoudreRéférenceCirculaireNode: TraverseFunction<\n\t'résoudre référence circulaire'\n> = (fn, node) => ({\n\t...node,\n\texplanation: {\n\t\t...node.explanation,\n\t\tvaleur: fn(node.explanation.valeur),\n\t},\n})\n\nconst traverseTextNode: TraverseFunction<'texte'> = (fn, node) => ({\n\t...node,\n\texplanation: node.explanation.map((element) =>\n\t\ttypeof element === 'string' ? element : fn(element)\n\t),\n})\n\nconst traverseRecalculNode: TraverseFunction<'recalcul'> = (fn, node) => ({\n\t...node,\n\texplanation: {\n\t\t...node.explanation,\n\t\tamendedSituation: node.explanation.amendedSituation.map(([name, value]) => [\n\t\t\tfn(name),\n\t\t\tfn(value),\n\t\t]) as any, //TODO\n\t\trecalcul:\n\t\t\tnode.explanation.recalculNode && fn(node.explanation.recalculNode),\n\t},\n})\n\nconst traverseUnitéNode: TraverseFunction<'unité'> = (fn, node) => {\n\tconst copy = weakCopyObj(node)\n\tcopy.explanation = fn(node.explanation)\n\n\treturn copy\n}\n\nconst traverseVariationNode: TraverseFunction<'variations'> = (fn, node) => ({\n\t...node,\n\texplanation: node.explanation.map(({ condition, consequence }) => ({\n\t\tcondition: fn(condition),\n\t\tconsequence: consequence && fn(consequence),\n\t})),\n})\n\nconst traverseConditionNode: TraverseFunction<'condition'> = (fn, node) => {\n\tconst copy = weakCopyObj(node)\n\tcopy.explanation = {\n\t\tsi: fn(node.explanation.si),\n\t\talors: fn(node.explanation.alors),\n\t\tsinon: fn(node.explanation.sinon),\n\t}\n\n\treturn copy\n}\n","import { EvaluationFunction, PublicodesError } from '.'\nimport { ASTNode } from './AST/types'\n\nexport let evaluationFunctions = {\n\tconstant: (node) => node,\n} as any\n\nexport function registerEvaluationFunction<\n\tNodeName extends ASTNode['nodeKind']\n>(nodeKind: NodeName, evaluationFunction: EvaluationFunction<NodeName>) {\n\tevaluationFunctions ??= {}\n\tif (evaluationFunctions[nodeKind]) {\n\t\tthrow new PublicodesError(\n\t\t\t'EvaluationError',\n\t\t\t`Multiple evaluation functions registered for the nodeKind \\x1b[4m${nodeKind}`,\n\t\t\t{ dottedName: '' }\n\t\t)\n\t}\n\tevaluationFunctions[nodeKind] = evaluationFunction\n}\n","import { ParsedRules } from '.'\nimport { ASTNode } from './AST/types'\n\nexport type NodesTypes = WeakMap<ASTNode, InferedType>\n\n// TODO: Currently only handle nullability, but the infering logic should be\n// extended to support the full unit type system.\nexport type InferedType = {\n\tisNullable: boolean | undefined\n\ttype: 'string' | 'number' | 'boolean' | undefined\n}\n\nconst UNDEFINED_TYPE = {\n\tisNullable: undefined,\n\ttype: undefined,\n}\n\nexport default function inferNodesTypes(\n\tnewRulesNames: Array<string>,\n\tparsedRules: ParsedRules<string>,\n\tnodesTypes: NodesTypes\n) {\n\tfunction inferNodeUnitAndCache(node: ASTNode): InferedType {\n\t\tif (!node || typeof node !== 'object') {\n\t\t\treturn UNDEFINED_TYPE\n\t\t}\n\t\tif (nodesTypes.has(node)) {\n\t\t\treturn nodesTypes.get(node)!\n\t\t}\n\t\t// Sometimes there are cycles, so we need to prevent infinite loop by setting a default\n\t\tnodesTypes.set(node, UNDEFINED_TYPE)\n\t\tconst type = inferNodeType(node)\n\t\tnodesTypes.set(node, type)\n\t\treturn type\n\t}\n\n\tfunction inferNodeType(node: ASTNode): InferedType {\n\t\tswitch (node.nodeKind) {\n\t\t\tcase 'barème':\n\t\t\tcase 'durée':\n\t\t\tcase 'grille':\n\t\t\tcase 'taux progressif':\n\t\t\t\treturn { isNullable: false, type: 'number' }\n\t\t\tcase 'est non défini':\n\t\t\tcase 'est non applicable':\n\t\t\t\treturn { isNullable: false, type: 'boolean' }\n\n\t\t\tcase 'constant':\n\t\t\t\treturn {\n\t\t\t\t\tisNullable: node.isNullable ?? node.nodeValue === null,\n\t\t\t\t\ttype: node.type,\n\t\t\t\t}\n\t\t\tcase 'operation':\n\t\t\t\treturn {\n\t\t\t\t\tisNullable: ['<', '<=', '>', '>=', '/', '*'].includes(\n\t\t\t\t\t\tnode.operationKind\n\t\t\t\t\t)\n\t\t\t\t\t\t? inferNodeUnitAndCache(node.explanation[0]).isNullable ||\n\t\t\t\t\t\t  inferNodeUnitAndCache(node.explanation[1]).isNullable\n\t\t\t\t\t\t: node.operationKind === '-'\n\t\t\t\t\t\t? inferNodeUnitAndCache(node.explanation[0]).isNullable\n\t\t\t\t\t\t: false,\n\t\t\t\t\ttype: ['<', '<=', '>', '>=', '=', '!=', 'et', 'ou'].includes(\n\t\t\t\t\t\tnode.operationKind\n\t\t\t\t\t)\n\t\t\t\t\t\t? 'boolean'\n\t\t\t\t\t\t: 'number',\n\t\t\t\t}\n\n\t\t\tcase 'inversion':\n\t\t\tcase 'recalcul':\n\t\t\tcase 'replacementRule':\n\t\t\tcase 'résoudre référence circulaire':\n\t\t\t\treturn { isNullable: false, type: 'number' }\n\n\t\t\tcase 'texte':\n\t\t\tcase 'une possibilité':\n\t\t\t\treturn { isNullable: false, type: 'string' }\n\n\t\t\tcase 'rule':\n\t\t\tcase 'arrondi':\n\t\t\t\treturn inferNodeUnitAndCache(node.explanation.valeur)\n\t\t\tcase 'unité':\n\t\t\tcase 'simplifier unité':\n\t\t\tcase 'variable manquante':\n\t\t\t\treturn inferNodeUnitAndCache(node.explanation)\n\t\t\tcase 'condition':\n\t\t\t\treturn {\n\t\t\t\t\tisNullable: [\n\t\t\t\t\t\tnode.explanation.si,\n\t\t\t\t\t\tnode.explanation.alors,\n\t\t\t\t\t\tnode.explanation.sinon,\n\t\t\t\t\t].some((n) => inferNodeUnitAndCache(n).isNullable),\n\t\t\t\t\ttype:\n\t\t\t\t\t\tinferNodeUnitAndCache(node.explanation.alors).type ??\n\t\t\t\t\t\tinferNodeUnitAndCache(node.explanation.sinon).type,\n\t\t\t\t}\n\n\t\t\tcase 'variations':\n\t\t\t\tconst consequencesTypes = node.explanation.map(({ consequence }) =>\n\t\t\t\t\tinferNodeUnitAndCache(consequence)\n\t\t\t\t)\n\t\t\t\treturn {\n\t\t\t\t\tisNullable: consequencesTypes.some(\n\t\t\t\t\t\t(consequence) => consequence.isNullable\n\t\t\t\t\t),\n\t\t\t\t\ttype: consequencesTypes\n\t\t\t\t\t\t.map((c) => c.type)\n\t\t\t\t\t\t.find((type) => type !== undefined),\n\t\t\t\t}\n\n\t\t\tcase 'reference':\n\t\t\t\treturn inferNodeUnitAndCache(parsedRules[node.dottedName as string])\n\t\t}\n\t}\n\n\tnewRulesNames.forEach((name) => {\n\t\tconst rule = parsedRules[name]\n\t\tinferNodeUnitAndCache(rule)\n\t\trule.explanation.parents.forEach(inferNodeUnitAndCache)\n\t})\n\n\treturn nodesTypes\n}\n","import { PublicodesExpression } from '..'\nimport { makeASTTransformer } from '../AST'\nimport { ASTNode, ConstantNode, EvaluatedNode } from '../AST/types'\nimport { PublicodesError } from '../error'\nimport parse from '../parse'\nimport { Context, createContext } from '../parsePublicodes'\n\nexport function createParseInlinedMecanism(\n\tname: string,\n\targs: Record<string, { 'par défaut'?: PublicodesExpression; type?: 'liste' }>,\n\tbody: PublicodesExpression\n) {\n\tlet parsedBody\n\tlet parsedDefaultArgs\n\tfunction parseInlineMecanism(providedArgs, context) {\n\t\tparsedBody ??= parse(body, createContext({ dottedName: 'INLINE_MECANISM' }))\n\t\tparsedDefaultArgs ??= {}\n\t\tfor (const name in args) {\n\t\t\tif ('par défaut' in args[name]) {\n\t\t\t\tparsedDefaultArgs[name] = parse(\n\t\t\t\t\targs[name]['par défaut'],\n\t\t\t\t\tcreateContext({})\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\n\t\t// Case of unary mecanism\n\t\tif (Object.keys(args).length === 1 && 'valeur' in args) {\n\t\t\tprovidedArgs = {\n\t\t\t\tvaleur: providedArgs,\n\t\t\t}\n\t\t}\n\n\t\tconst parsedProvidedArgs = {}\n\t\tfor (const name in providedArgs) {\n\t\t\tparsedProvidedArgs[name] = parse(providedArgs[name], context)\n\t\t}\n\n\t\tconst parsedInlineMecanism = makeASTTransformer((node) => {\n\t\t\tif (node.nodeKind !== 'reference' || !(node.name in args)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst argName = node.name\n\t\t\tif (argName in parsedProvidedArgs) {\n\t\t\t\treturn parsedProvidedArgs[argName]\n\t\t\t}\n\t\t\tif (argName in parsedDefaultArgs) {\n\t\t\t\treturn parsedDefaultArgs[argName]\n\t\t\t}\n\t\t\tthrow new PublicodesError(\n\t\t\t\t'SyntaxError',\n\t\t\t\t`Il manque la clé '${argName} dans le mécanisme ${name}`,\n\t\t\t\t{ dottedName: argName }\n\t\t\t)\n\t\t})(parsedBody)\n\n\t\tparsedInlineMecanism.sourceMap = {\n\t\t\tmecanismName: name,\n\t\t\targs: parsedProvidedArgs,\n\t\t}\n\n\t\treturn parsedInlineMecanism\n\t}\n\n\tparseInlineMecanism.nom = name\n\n\treturn Object.assign(parseInlineMecanism, 'name', {\n\t\tvalue: `parse${toCamelCase(name)}Inline`,\n\t})\n}\n\n/**\n Note : Les transformations de mécanisme opérant sur les listes sont plus couteuses que celles opérant sur des scalaires.\n\n Cela vient du fait qu'il n'y a pas la possibilité de définir ces transformations dans publicodes : il manque le type liste et les opérations de bases associées (reduce, map).\n\n On doit donc déplier l'opération statiquement, au parsing, ce qui prend plus de temps, au parsing et à l'évaluation. somme: [1,2,3] est transformé en (1 + 2) + 3).\n\n De manière général, les baisse en performances de cette PR sont attenduee : il s'agit d'une contrepartie logique de l'utilisation de mécanisme de base publicodes. Ce qu'on gagne en solidité de l'évaluation & en amélioration du typage, on le perd en performance. C'est logique puisque l'evaluation de ces mécanisme n'est plus du JS natif mais passe par une structure intermédiaire.\n\n Pour améliorer les perfs, il y a plusieurs pistes :\n\n\t- optimiser d'avantage les opérations de bases\n\t- ajouter les listes et les opérations sur les listes dans publicodes\n\t- ajouter une implémentation \"native\" de certains mécanismes utilisés (on gagne quand même à les décomposer en mécanismes de base pour la partie spécification et typage).\n */\nexport function createParseInlinedMecanismWithArray(\n\tname: string,\n\targs: Record<string, { type?: 'liste' }>,\n\tbody: (args: Record<string, ASTNode | Array<ASTNode>>) => PublicodesExpression\n) {\n\tfunction parseInlineMecanism(providedArgs, context: Context) {\n\t\t// Case of unary mecanism\n\t\tif (Object.keys(args).length === 1 && 'valeur' in args) {\n\t\t\tprovidedArgs = {\n\t\t\t\tvaleur: providedArgs,\n\t\t\t}\n\t\t}\n\n\t\tconst parsedProvidedArgs = {}\n\t\tfor (const name in providedArgs) {\n\t\t\tconst value = providedArgs[name]\n\t\t\tparsedProvidedArgs[name] = Array.isArray(value)\n\t\t\t\t? value.map((v) => parse(v, context))\n\t\t\t\t: parse(value, context)\n\t\t}\n\n\t\tconst parsedInlineMecanism = parse(body(parsedProvidedArgs), context)\n\t\tparsedInlineMecanism.sourceMap = {\n\t\t\tmecanismName: name,\n\t\t\targs: parsedProvidedArgs,\n\t\t}\n\t\treturn parsedInlineMecanism\n\t}\n\n\tparseInlineMecanism.nom = name\n\n\treturn Object.assign(parseInlineMecanism, 'name', {\n\t\tvalue: `parse${toCamelCase(name)}Inline`,\n\t})\n}\n\nfunction toCamelCase(str: string) {\n\treturn str\n\t\t.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (ltr) => ltr.toUpperCase())\n\t\t.replace(/\\s+/g, '')\n}\n\nexport const notApplicableNode = {\n\tnodeKind: 'constant',\n\tnodeValue: null,\n\tmissingVariables: {},\n\ttype: undefined,\n\tisNullable: true,\n} as ConstantNode & EvaluatedNode\n\nexport const undefinedNode = {\n\tnodeKind: 'constant',\n\tnodeValue: undefined,\n\tmissingVariables: {},\n\ttype: undefined,\n\tisNullable: false,\n} as ConstantNode & EvaluatedNode\n\nexport const undefinedNumberNode = {\n\t...undefinedNode,\n\ttype: 'number',\n} as ConstantNode & EvaluatedNode\n","import { createParseInlinedMecanism } from './inlineMecanism'\n\nexport default createParseInlinedMecanism(\n\t'abattement',\n\t{\n\t\tabattement: {},\n\t\tvaleur: {},\n\t},\n\t{\n\t\t'-': ['valeur', 'abattement'],\n\t\tplancher: 0,\n\t}\n)\n","import { createParseInlinedMecanism, notApplicableNode } from './inlineMecanism'\n\nexport default createParseInlinedMecanism(\n\t'applicable si',\n\t{\n\t\t'applicable si': {},\n\t\tvaleur: {},\n\t},\n\t{\n\t\tcondition: {\n\t\t\tsi: 'applicable si != non',\n\t\t\talors: 'valeur',\n\t\t\tsinon: notApplicableNode,\n\t\t},\n\t}\n)\n","import { PublicodesError } from '.'\nimport { ASTNode, ConstantNode, EvaluatedNode, Evaluation } from './AST/types'\nimport parse from './parse'\n\nexport const collectNodeMissing = (\n\tnode: EvaluatedNode | ASTNode\n): Record<string, number> =>\n\t'missingVariables' in node ? node.missingVariables : {}\n\nexport const bonus = (missings: Record<string, number> = {}) =>\n\tObject.fromEntries(\n\t\tObject.entries(missings).map(([key, value]) => [key, value + 1])\n\t)\nexport const mergeMissing = (\n\tleft: Record<string, number> | undefined = {},\n\tright: Record<string, number> | undefined = {}\n): Record<string, number> =>\n\tObject.fromEntries(\n\t\t[...Object.keys(left), ...Object.keys(right)].map((key) => [\n\t\t\tkey,\n\t\t\t(left[key] ?? 0) + (right[key] ?? 0),\n\t\t])\n\t)\n\nexport const mergeAllMissing = (missings: Array<EvaluatedNode | ASTNode>) =>\n\tmissings.map(collectNodeMissing).reduce(mergeMissing, {})\n\nexport const defaultNode = (nodeValue: Evaluation) =>\n\t({\n\t\tnodeValue,\n\t\ttype: typeof nodeValue,\n\t\tisDefault: true,\n\t\tnodeKind: 'constant',\n\t} as ConstantNode)\n\nexport const parseObject = (objectShape, value, context) => {\n\tconst ret = {} as Record<string, EvaluatedNode | ASTNode>\n\tfor (const key in objectShape) {\n\t\tconst defaultValue = objectShape[key]\n\t\tif (value[key] == undefined && !defaultValue) {\n\t\t\tthrow new PublicodesError(\n\t\t\t\t'EngineError',\n\t\t\t\t`Il manque une clé '${key}' dans ${JSON.stringify(value)} `,\n\t\t\t\t{}\n\t\t\t)\n\t\t}\n\n\t\tconst parsedValue =\n\t\t\tvalue[key] != undefined ? parse(value[key], context) : defaultValue\n\t\tret[key] = parsedValue\n\t}\n\n\treturn ret\n}\n","import { BaseUnit, Evaluation, Unit } from './AST/types'\nimport { PublicodesError } from './error'\n\nexport type getUnitKey = (writtenUnit: string) => string\nexport type formatUnit = (unit: string, count: number) => string\n\nexport const parseUnit = (\n\tstring: string,\n\tgetUnitKey: getUnitKey = (x) => x\n): Unit => {\n\tconst [a, ...b] = string.split('/').map((u) => u.trim())\n\t// denominator could be 'x/y' or 'x.y' or 'x.y/z'\n\tconst splitUnit = (string: string): string[] =>\n\t\tdecomposePower(\n\t\t\tstring\n\t\t\t\t.split('.')\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.map((unit) => getUnitKey(unit))\n\t\t)\n\tconst result = {\n\t\tnumerators: splitUnit(a),\n\t\tdenominators: b.flatMap((u) => splitUnit(u)),\n\t}\n\treturn result\n}\n\nconst lastNumberFromString = /(\\d+)(?!.*[A-Za-z])/g\n\n/**\n * Count the number of each unit, e.g. [m, m, kg, kg] -> {m: 2, kg: 2}\n */\nfunction getUnitCounts(baseUnits: Array<BaseUnit>): Record<string, number> {\n\tlet countUnits = {}\n\tbaseUnits.forEach((e) => {\n\t\tconst powerMatch = e.match(lastNumberFromString)\n\t\tif (powerMatch != null) {\n\t\t\tconst power = powerMatch[0]\n\t\t\tconst primaryUnit = e.split(power)[0]\n\t\t\tcountUnits[primaryUnit] = (countUnits[primaryUnit] ?? 0) + +power\n\t\t} else {\n\t\t\tcountUnits[e] = (countUnits[e] ?? 0) + 1\n\t\t}\n\t})\n\treturn countUnits\n}\n\n/**\n * Decompose power of units, e.g. [m2] -> [m, m] or [kg2, m3] -> [kg, kg, m, m, m]\n */\nfunction decomposePower(baseUnits: Array<BaseUnit>): Array<BaseUnit> {\n\tlet unitCounts = getUnitCounts(baseUnits)\n\treturn Object.entries(unitCounts).flatMap(([primaryUnit, power]) =>\n\t\tArray(power).fill(primaryUnit)\n\t)\n}\n\n/**\n * Combine power of units, e.g. [m2, m] -> [m3] or [m, m, kg, kg] -> [m2, kg2]\n */\nfunction combinePower(baseUnit: Array<BaseUnit>): Array<BaseUnit> {\n\tlet unitCounts = getUnitCounts(baseUnit)\n\treturn Object.entries(unitCounts).map(([primaryUnit, power]) =>\n\t\tpower > 1 ? `${primaryUnit}${power}` : primaryUnit\n\t)\n}\n\nconst printUnits = (\n\tunits: Array<BaseUnit>,\n\tcount: number,\n\tformatUnit: formatUnit = (x) => x\n): string => {\n\treturn combinePower(units.map((unit) => formatUnit(unit, count))).join('.')\n}\n\nconst plural = 2\nexport function serializeUnit(\n\trawUnit: Unit | undefined | string,\n\tcount: number = plural,\n\tformatUnit: formatUnit = (x) => x\n): string | undefined {\n\tif (rawUnit === null || typeof rawUnit !== 'object') {\n\t\treturn typeof rawUnit === 'string' ? formatUnit(rawUnit, count) : rawUnit\n\t}\n\tconst unit = simplify(rawUnit)\n\tconst { numerators = [], denominators = [] } = unit\n\n\tconst n = numerators.length > 0\n\tconst d = denominators.length > 0\n\tconst string =\n\t\t!n && !d\n\t\t\t? ''\n\t\t\t: n && !d\n\t\t\t? printUnits(numerators, count, formatUnit)\n\t\t\t: !n && d\n\t\t\t? `/${printUnits(denominators, 1, formatUnit)}`\n\t\t\t: `${printUnits(numerators, plural, formatUnit)} / ${printUnits(\n\t\t\t\t\tdenominators,\n\t\t\t\t\t1,\n\t\t\t\t\tformatUnit\n\t\t\t  )}`\n\n\treturn string\n}\n\ntype SupportedOperators = '*' | '/' | '+' | '-'\n\nconst noUnit = { numerators: [], denominators: [] }\nexport const inferUnit = (\n\toperator: SupportedOperators,\n\trawUnits: Array<Unit | undefined>\n): Unit | undefined => {\n\tif (operator === '/') {\n\t\tif (rawUnits.length !== 2) {\n\t\t\tthrow new PublicodesError(\n\t\t\t\t'InternalError',\n\t\t\t\t'Infer units of a division with units.length !== 2)',\n\t\t\t\t{}\n\t\t\t)\n\t\t}\n\n\t\treturn inferUnit('*', [\n\t\t\trawUnits[0] || noUnit,\n\t\t\t{\n\t\t\t\tnumerators: (rawUnits[1] || noUnit).denominators,\n\t\t\t\tdenominators: (rawUnits[1] || noUnit).numerators,\n\t\t\t},\n\t\t])\n\t}\n\tconst units = rawUnits.filter(Boolean)\n\tif (units.length <= 1) {\n\t\treturn units[0]\n\t}\n\tif (operator === '*')\n\t\treturn simplify({\n\t\t\tnumerators: units.flatMap((u) => u?.numerators ?? []),\n\t\t\tdenominators: units.flatMap((u) => u?.denominators ?? []),\n\t\t})\n\n\tif (operator === '-' || operator === '+') {\n\t\treturn rawUnits.find((u) => u)\n\t}\n\n\treturn undefined\n}\n\nconst equals = <T>(a: T, b: T) => {\n\tif (Array.isArray(a) && Array.isArray(b)) {\n\t\treturn a.length === b.length && a.every((_, i) => a[i] === b[i])\n\t} else {\n\t\treturn a === b\n\t}\n}\n\nexport const removeOnce =\n\t<T>(element: T, eqFn: (a: T, b: T) => boolean = equals) =>\n\t(list: Array<T>): Array<T> => {\n\t\tconst index = list.findIndex((e) => eqFn(e, element))\n\t\treturn list.filter((_, i) => i !== index)\n\t}\n\nconst simplify = (\n\tunit: Unit,\n\teqFn: (a: string, b: string) => boolean = equals\n): Unit => {\n\tconst simplifiedUnit = [...unit.numerators, ...unit.denominators].reduce(\n\t\t({ numerators, denominators }, next) =>\n\t\t\tnumerators.find((u) => eqFn(next, u)) &&\n\t\t\tdenominators.find((u) => eqFn(next, u))\n\t\t\t\t? {\n\t\t\t\t\t\tnumerators: removeOnce(next, eqFn)(numerators),\n\t\t\t\t\t\tdenominators: removeOnce(next, eqFn)(denominators),\n\t\t\t\t  }\n\t\t\t\t: { numerators, denominators },\n\t\tunit\n\t)\n\treturn simplifiedUnit\n}\n\nconst convertTable: ConvertTable = {\n\t'mois/an': 12,\n\t'jour/an': 365,\n\t'jour/mois': 365 / 12,\n\t'trimestre/an': 4,\n\t'mois/trimestre': 3,\n\t'jour/trimestre': (365 / 12) * 3,\n\t'€/k€': 10 ** 3,\n\t'g/kg': 10 ** 3,\n\t'mg/g': 10 ** 3,\n\t'mg/kg': 10 ** 6,\n\t'm/km': 10 ** 3,\n\t'cm/m': 10 ** 2,\n\t'mm/cm': 10 ** 1,\n\t'mm/m': 10 ** 3,\n\t'cm/km': 10 ** 5,\n\t'mm/km': 10 ** 6,\n}\n\nfunction singleUnitConversionFactor(\n\tfrom: string,\n\tto: string\n): number | undefined {\n\treturn (\n\t\tconvertTable[`${to}/${from}`] ||\n\t\t(convertTable[`${from}/${to}`] && 1 / convertTable[`${from}/${to}`])\n\t)\n}\nfunction unitsConversionFactor(from: string[], to: string[]): number {\n\tlet factor =\n\t\t100 **\n\t\t// Factor is mutliplied or divided 100 for each '%' in units\n\t\t(to.filter((unit) => unit === '%').length -\n\t\t\tfrom.filter((unit) => unit === '%').length)\n\t;[factor] = from.reduce(\n\t\t([value, toUnits], fromUnit) => {\n\t\t\tconst index = toUnits.findIndex(\n\t\t\t\t(toUnit) => !!singleUnitConversionFactor(fromUnit, toUnit)\n\t\t\t)\n\t\t\tconst factor = singleUnitConversionFactor(fromUnit, toUnits[index]) || 1\n\t\t\treturn [\n\t\t\t\tvalue * factor,\n\t\t\t\t[...toUnits.slice(0, index + 1), ...toUnits.slice(index + 1)],\n\t\t\t]\n\t\t},\n\t\t[factor, to]\n\t)\n\treturn factor\n}\n\n// TODO(@clemog):\n// - Deal with other equivalent units : l: 'dm3',\n// - Convert unit instead of ignore warning\nconst equivalentTable = {\n\t'kW.h': 'kWh',\n\t'mn / h': 'noeud',\n}\n\nfunction areEquivalentSerializedUnit(\n\tserializedFrom: string | undefined,\n\tserializedTo: string | undefined\n): Boolean {\n\tif (!serializedFrom || !serializedTo) return false\n\treturn (\n\t\tserializedFrom === serializedTo ||\n\t\tserializedFrom === equivalentTable[serializedTo] ||\n\t\tserializedTo === equivalentTable[serializedFrom]\n\t)\n}\n\nexport function convertUnit<ValType extends Evaluation<number>>(\n\tfrom: Unit | undefined,\n\tto: Unit | undefined,\n\tvalue: ValType\n): ValType {\n\tconst serializedFrom = serializeUnit(from)\n\tconst serializedTo = serializeUnit(to)\n\tif (\n\t\t!areEquivalentSerializedUnit(serializedFrom, serializedTo) &&\n\t\t!areUnitConvertible(from, to)\n\t) {\n\t\tthrow new PublicodesError(\n\t\t\t'EngineError',\n\t\t\t`Impossible de convertir l'unité '${serializedFrom}' en '${serializedTo}'`,\n\t\t\t{}\n\t\t)\n\t}\n\tif (!value) {\n\t\treturn value\n\t}\n\tif (from === undefined) {\n\t\treturn value\n\t}\n\tconst [fromSimplified, factorTo] = simplifyUnitWithValue(from || noUnit)\n\tconst [toSimplified, factorFrom] = simplifyUnitWithValue(to || noUnit)\n\treturn round(\n\t\t(((value as number) * factorTo) / factorFrom) *\n\t\t\tunitsConversionFactor(\n\t\t\t\tfromSimplified.numerators,\n\t\t\t\ttoSimplified.numerators\n\t\t\t) *\n\t\t\tunitsConversionFactor(\n\t\t\t\ttoSimplified.denominators,\n\t\t\t\tfromSimplified.denominators\n\t\t\t)\n\t) as any\n}\n\nconst convertibleUnitClasses = unitClasses(convertTable)\ntype unitClasses = Array<Set<string>>\ntype ConvertTable = { readonly [index: string]: number }\n\n// Reduce the convertTable provided by the user into a list of compatibles\n// classes.\nfunction unitClasses(convertTable: ConvertTable) {\n\treturn Object.keys(convertTable).reduce(\n\t\t(classes: unitClasses, ratio: string) => {\n\t\t\tconst [a, b] = ratio.split('/')\n\t\t\tconst ia = classes.findIndex((units) => units.has(a))\n\t\t\tconst ib = classes.findIndex((units) => units.has(b))\n\t\t\tif (ia > -1 && ib > -1 && ia !== ib) {\n\t\t\t\tthrow new PublicodesError('EngineError', `Invalid ratio ${ratio}`, {})\n\t\t\t} else if (ia === -1 && ib === -1) {\n\t\t\t\tclasses.push(new Set([a, b]))\n\t\t\t} else if (ia > -1) {\n\t\t\t\tclasses[ia].add(b)\n\t\t\t} else if (ib > -1) {\n\t\t\t\tclasses[ib].add(a)\n\t\t\t}\n\t\t\treturn classes\n\t\t},\n\t\t[]\n\t)\n}\n\nfunction areSameClass(a: string, b: string) {\n\treturn (\n\t\ta === b ||\n\t\tconvertibleUnitClasses.some(\n\t\t\t(unitsClass) => unitsClass.has(a) && unitsClass.has(b)\n\t\t)\n\t)\n}\n\nfunction round(value: number) {\n\treturn +value.toFixed(16)\n}\n\nexport function simplifyUnit(unit: Unit): Unit {\n\tconst { numerators, denominators } = simplify(unit, areSameClass)\n\tif (numerators.length && numerators.every((symb) => symb === '%')) {\n\t\treturn { numerators: ['%'], denominators }\n\t}\n\treturn removePercentages({ numerators, denominators })\n}\n\nfunction simplifyUnitWithValue(unit: Unit, value = 1): [Unit, number] {\n\tconst factor = unitsConversionFactor(unit.numerators, unit.denominators)\n\treturn [\n\t\tsimplify(removePercentages(unit), areSameClass),\n\t\tvalue ? round(value * factor) : value,\n\t]\n}\n\nconst removePercentages = (unit: Unit): Unit => ({\n\tnumerators: unit.numerators.filter((e) => e !== '%'),\n\tdenominators: unit.denominators.filter((e) => e !== '%'),\n})\n\nexport function areUnitConvertible(a: Unit | undefined, b: Unit | undefined) {\n\tif (a == null || b == null) {\n\t\treturn true\n\t}\n\tconst countByUnitClass = (units: Array<BaseUnit>) =>\n\t\tunits.reduce((counters, unit) => {\n\t\t\tconst classIndex = convertibleUnitClasses.findIndex((unitClass) =>\n\t\t\t\tunitClass.has(unit)\n\t\t\t)\n\t\t\tconst key = classIndex === -1 ? unit : '' + classIndex\n\t\t\treturn { ...counters, [key]: 1 + (counters[key] ?? 0) }\n\t\t}, {})\n\n\tconst [numA, denomA, numB, denomB] = [\n\t\ta.numerators,\n\t\ta.denominators,\n\t\tb.numerators,\n\t\tb.denominators,\n\t].map(countByUnitClass)\n\tconst uniq = <T>(arr: Array<T>): Array<T> => [...new Set(arr)]\n\tconst unitClasses = [numA, denomA, numB, denomB].map(Object.keys).flat()\n\treturn uniq(unitClasses).every(\n\t\t(unitClass) =>\n\t\t\t(numA[unitClass] || 0) - (denomA[unitClass] || 0) ===\n\t\t\t\t(numB[unitClass] || 0) - (denomB[unitClass] || 0) || unitClass === '%'\n\t)\n}\n","import { EvaluationFunction, simplifyNodeUnit } from '..'\nimport { ASTNode, EvaluatedNode } from '../AST/types'\nimport { PublicodesError } from '../error'\nimport { registerEvaluationFunction } from '../evaluationFunctions'\nimport { mergeAllMissing } from '../evaluationUtils'\nimport parse from '../parse'\nimport { serializeUnit } from '../units'\n\nexport type ArrondiNode = {\n\texplanation: {\n\t\tarrondi: ASTNode\n\t\tvaleur: ASTNode\n\t}\n\tnodeKind: 'arrondi'\n}\n\nfunction roundWithPrecision(n: number, fractionDigits: number) {\n\treturn +n.toFixed(fractionDigits)\n}\n\nconst evaluate: EvaluationFunction<'arrondi'> = function (node) {\n\t// We need to simplify the node unit to correctly round values containing\n\t// percentages units, see #1358\n\tconst valeur = simplifyNodeUnit(this.evaluateNode(node.explanation.valeur))\n\tconst nodeValue = valeur.nodeValue\n\tlet arrondi = node.explanation.arrondi\n\tif (nodeValue !== false) {\n\t\tarrondi = this.evaluateNode(arrondi)\n\n\t\tif (\n\t\t\ttypeof (arrondi as EvaluatedNode).nodeValue === 'number' &&\n\t\t\t!serializeUnit((arrondi as EvaluatedNode).unit)?.match(/décimales?/)\n\t\t) {\n\t\t\tthrow new PublicodesError(\n\t\t\t\t'EvaluationError',\n\t\t\t\t`L'unité ${serializeUnit(\n\t\t\t\t\t(arrondi as EvaluatedNode).unit\n\t\t\t\t)} de l'arrondi est inconnu. Vous devez utiliser l'unité “décimales”`,\n\t\t\t\t{ dottedName: this.cache._meta.evaluationRuleStack[0] }\n\t\t\t)\n\t\t}\n\t}\n\n\treturn {\n\t\t...node,\n\t\tnodeValue:\n\t\t\ttypeof valeur.nodeValue !== 'number' || !('nodeValue' in arrondi)\n\t\t\t\t? valeur.nodeValue\n\t\t\t\t: typeof arrondi.nodeValue === 'number'\n\t\t\t\t? roundWithPrecision(valeur.nodeValue, arrondi.nodeValue)\n\t\t\t\t: arrondi.nodeValue === true\n\t\t\t\t? roundWithPrecision(valeur.nodeValue, 0)\n\t\t\t\t: arrondi.nodeValue === undefined\n\t\t\t\t? undefined\n\t\t\t\t: valeur.nodeValue,\n\t\texplanation: { valeur, arrondi },\n\t\tmissingVariables: mergeAllMissing([valeur, arrondi]),\n\t\tunit: valeur.unit,\n\t}\n}\n\nexport default function parseArrondi(v, context) {\n\tconst explanation = {\n\t\tvaleur: parse(v.valeur, context),\n\t\tarrondi: parse(v.arrondi, context),\n\t}\n\treturn {\n\t\texplanation,\n\t\tnodeKind: parseArrondi.nom,\n\t}\n}\n\nparseArrondi.nom = 'arrondi' as const\n\nregisterEvaluationFunction(parseArrondi.nom, evaluate)\n","import { PublicodesExpression } from '..'\nimport parse from '../parse'\nimport { Context } from '../parsePublicodes'\n\nexport default function parseAvec(v, context: Context) {\n\tObject.entries(v.avec as Record<string, PublicodesExpression>).forEach(\n\t\t([dottedName, rule]) => {\n\t\t\tparse(\n\t\t\t\t{\n\t\t\t\t\tnom: dottedName,\n\t\t\t\t\t...(rule == undefined\n\t\t\t\t\t\t? {}\n\t\t\t\t\t\t: typeof rule !== 'object' || 'nodeKind' in rule\n\t\t\t\t\t\t? { valeur: rule }\n\t\t\t\t\t\t: rule),\n\t\t\t\t},\n\t\t\t\tcontext\n\t\t\t)\n\t\t}\n\t)\n\tconst valeur = parse(v.valeur, context)\n\treturn valeur\n}\n\nparseAvec.nom = 'avec' as const\n","import Engine from '..'\nimport { ASTNode, Evaluation } from '../AST/types'\nimport { PublicodesError, warning } from '../error'\nimport { mergeAllMissing } from '../evaluationUtils'\nimport parse from '../parse'\nimport { convertUnit, inferUnit } from '../units'\n\ntype TrancheNode = { taux: ASTNode } | { montant: ASTNode }\nexport type TrancheNodes = Array<TrancheNode & { plafond?: ASTNode }>\n\nexport const parseTranches = (tranches, context): TrancheNodes => {\n\treturn tranches.map((node, i) => {\n\t\tif (!node.plafond && i > tranches.length) {\n\t\t\tthrow new PublicodesError(\n\t\t\t\t'SyntaxError',\n\t\t\t\t`La tranche n°${i} du barème n'a pas de plafond précisé. Seule la dernière tranche peut ne pas être plafonnée`,\n\t\t\t\t{ dottedName: '' }\n\t\t\t)\n\t\t}\n\t\treturn {\n\t\t\t...node,\n\t\t\t...(node.taux !== undefined ? { taux: parse(node.taux, context) } : {}),\n\t\t\t...(node.montant !== undefined\n\t\t\t\t? { montant: parse(node.montant, context) }\n\t\t\t\t: {}),\n\t\t\tplafond:\n\t\t\t\t'plafond' in node\n\t\t\t\t\t? parse(node.plafond, context)\n\t\t\t\t\t: {\n\t\t\t\t\t\t\tnodeValue: Infinity,\n\t\t\t\t\t\t\tnodeKind: 'constant',\n\t\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\t\tisNullable: false,\n\t\t\t\t\t  },\n\t\t}\n\t})\n}\n\nexport function evaluatePlafondUntilActiveTranche(\n\tthis: Engine,\n\t{ multiplicateur, assiette, parsedTranches }\n) {\n\treturn parsedTranches.reduce(\n\t\t([tranches, activeTrancheFound], parsedTranche, i: number) => {\n\t\t\tif (activeTrancheFound) {\n\t\t\t\treturn [\n\t\t\t\t\t[...tranches, { ...parsedTranche, isAfterActive: true }],\n\t\t\t\t\tactiveTrancheFound,\n\t\t\t\t]\n\t\t\t}\n\n\t\t\tconst plafond = this.evaluateNode(parsedTranche.plafond)\n\t\t\tconst plancher = tranches[i - 1]\n\t\t\t\t? tranches[i - 1].plafond\n\t\t\t\t: { nodeValue: 0 }\n\n\t\t\tlet plafondValue: Evaluation<number> =\n\t\t\t\tplafond.nodeValue === undefined ||\n\t\t\t\tmultiplicateur.nodeValue === undefined\n\t\t\t\t\t? undefined\n\t\t\t\t\t: plafond.nodeValue * multiplicateur.nodeValue\n\n\t\t\ttry {\n\t\t\t\tplafondValue =\n\t\t\t\t\tplafondValue === Infinity || plafondValue === 0\n\t\t\t\t\t\t? plafondValue\n\t\t\t\t\t\t: convertUnit(\n\t\t\t\t\t\t\t\tinferUnit('*', [plafond.unit, multiplicateur.unit]),\n\t\t\t\t\t\t\t\tassiette.unit,\n\t\t\t\t\t\t\t\tplafondValue\n\t\t\t\t\t\t  )\n\t\t\t} catch (e) {\n\t\t\t\twarning(\n\t\t\t\t\tthis.context.logger,\n\t\t\t\t\t`L'unité du plafond de la tranche n°${\n\t\t\t\t\t\ti + 1\n\t\t\t\t\t}  n'est pas compatible avec celle l'assiette`,\n\t\t\t\t\t{ dottedName: this.cache._meta.evaluationRuleStack[0] },\n\t\t\t\t\te\n\t\t\t\t)\n\t\t\t}\n\t\t\tconst plancherValue = tranches[i - 1] ? tranches[i - 1].plafondValue : 0\n\t\t\tconst isAfterActive =\n\t\t\t\tplancherValue === undefined || assiette.nodeValue === undefined\n\t\t\t\t\t? undefined\n\t\t\t\t\t: plancherValue > assiette.nodeValue\n\n\t\t\tconst calculationValues = [plafond, assiette, multiplicateur, plancher]\n\t\t\tif (calculationValues.some((node) => node.nodeValue === undefined)) {\n\t\t\t\treturn [\n\t\t\t\t\t[\n\t\t\t\t\t\t...tranches,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...parsedTranche,\n\t\t\t\t\t\t\tplafond,\n\t\t\t\t\t\t\tplafondValue,\n\t\t\t\t\t\t\tplancherValue,\n\t\t\t\t\t\t\tnodeValue: undefined,\n\t\t\t\t\t\t\tisActive: undefined,\n\t\t\t\t\t\t\tisAfterActive,\n\t\t\t\t\t\t\tmissingVariables: mergeAllMissing(calculationValues),\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tfalse,\n\t\t\t\t]\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t!!tranches[i - 1] &&\n\t\t\t\t!!plancherValue &&\n\t\t\t\t(plafondValue as number) <= plancherValue\n\t\t\t) {\n\t\t\t\tthrow new PublicodesError(\n\t\t\t\t\t'EvaluationError',\n\t\t\t\t\t`Le plafond de la tranche n°${\n\t\t\t\t\t\ti + 1\n\t\t\t\t\t} a une valeur inférieure à celui de la tranche précédente`,\n\t\t\t\t\t{ dottedName: this.cache._meta.evaluationRuleStack[0] }\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tconst tranche = {\n\t\t\t\t...parsedTranche,\n\t\t\t\tplafond,\n\t\t\t\tplancherValue,\n\t\t\t\tplafondValue,\n\t\t\t\tisAfterActive,\n\t\t\t\tisActive:\n\t\t\t\t\tassiette.nodeValue >= plancherValue &&\n\t\t\t\t\tassiette.nodeValue < (plafondValue as number),\n\t\t\t}\n\n\t\t\treturn [[...tranches, tranche], tranche.isActive]\n\t\t},\n\t\t[[], false]\n\t)[0]\n}\n","import { EvaluationFunction, PublicodesError } from '..'\nimport { ASTNode } from '../AST/types'\nimport { registerEvaluationFunction } from '../evaluationFunctions'\nimport { defaultNode, mergeAllMissing } from '../evaluationUtils'\nimport parse from '../parse'\nimport { convertUnit, parseUnit } from '../units'\nimport {\n\tevaluatePlafondUntilActiveTranche,\n\tparseTranches,\n\tTrancheNodes,\n} from './trancheUtils'\n\n// Barème en taux marginaux.\nexport type BarèmeNode = {\n\texplanation: {\n\t\ttranches: TrancheNodes\n\t\tmultiplicateur: ASTNode\n\t\tassiette: ASTNode\n\t}\n\tnodeKind: 'barème'\n}\nexport default function parseBarème(v, context): BarèmeNode {\n\tconst explanation = {\n\t\tassiette: parse(v.assiette, context),\n\t\tmultiplicateur: v.multiplicateur\n\t\t\t? parse(v.multiplicateur, context)\n\t\t\t: defaultNode(1),\n\t\ttranches: parseTranches(v.tranches, context),\n\t}\n\treturn {\n\t\texplanation,\n\t\tnodeKind: 'barème',\n\t}\n}\n\nfunction evaluateBarème(tranches, assiette, evaluate) {\n\treturn tranches.map((tranche) => {\n\t\tif (tranche.isAfterActive) {\n\t\t\treturn { ...tranche, nodeValue: 0 }\n\t\t}\n\t\tconst taux = evaluate(tranche.taux)\n\t\tconst missingVariables = mergeAllMissing([taux, tranche])\n\n\t\tif (\n\t\t\t[\n\t\t\t\tassiette.nodeValue,\n\t\t\t\ttaux.nodeValue,\n\t\t\t\ttranche.plafondValue,\n\t\t\t\ttranche.plancherValue,\n\t\t\t].some((value) => value === undefined)\n\t\t) {\n\t\t\treturn {\n\t\t\t\t...tranche,\n\t\t\t\ttaux,\n\t\t\t\tnodeValue: undefined,\n\t\t\t\tmissingVariables,\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\t...tranche,\n\t\t\ttaux,\n\t\t\t...('unit' in assiette && { unit: assiette.unit }),\n\t\t\tnodeValue:\n\t\t\t\t(Math.min(assiette.nodeValue, tranche.plafondValue) -\n\t\t\t\t\ttranche.plancherValue) *\n\t\t\t\tconvertUnit(taux.unit, parseUnit(''), taux.nodeValue as number),\n\t\t\tmissingVariables,\n\t\t}\n\t})\n}\nconst evaluate: EvaluationFunction<'barème'> = function (node) {\n\tconst evaluate = this.evaluateNode.bind(this)\n\tconst assiette = this.evaluateNode(node.explanation.assiette)\n\tconst multiplicateur = this.evaluateNode(node.explanation.multiplicateur)\n\n\tif (multiplicateur.nodeValue === 0) {\n\t\tthrow new PublicodesError(\n\t\t\t'EvaluationError',\n\t\t\t`Le multiplicateur ne peut pas être nul`,\n\t\t\t{ dottedName: this.cache._meta.evaluationRuleStack[0] }\n\t\t)\n\t}\n\n\tconst tranches = evaluateBarème(\n\t\tevaluatePlafondUntilActiveTranche.call(this, {\n\t\t\tparsedTranches: node.explanation.tranches,\n\t\t\tassiette,\n\t\t\tmultiplicateur,\n\t\t}),\n\t\tassiette,\n\t\tevaluate\n\t)\n\tconst nodeValue = tranches.reduce(\n\t\t(value, { nodeValue }) =>\n\t\t\tnodeValue == undefined ? undefined : value + nodeValue,\n\t\t0\n\t)\n\n\treturn {\n\t\t...node,\n\t\tnodeValue,\n\t\tmissingVariables: mergeAllMissing([assiette, multiplicateur, ...tranches]),\n\t\texplanation: {\n\t\t\tassiette,\n\t\t\tmultiplicateur,\n\t\t\ttranches,\n\t\t},\n\t\tunit: assiette.unit,\n\t} as any\n}\n\nregisterEvaluationFunction('barème', evaluate)\n","import { ASTNode } from '../AST/types'\nimport parse from '../parse'\n\nexport const decompose = (k, v, context): ASTNode => {\n\tconst { composantes, ...factoredKeys } = v\n\tconst explanation = parse(\n\t\t{\n\t\t\tsomme: composantes.map((composante) => {\n\t\t\t\tconst { attributs, ...otherKeys } = composante\n\t\t\t\treturn {\n\t\t\t\t\t...attributs,\n\t\t\t\t\tvaleur: {\n\t\t\t\t\t\t[k]: {\n\t\t\t\t\t\t\t...factoredKeys,\n\t\t\t\t\t\t\t...otherKeys,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t}),\n\t\t},\n\t\tcontext\n\t)\n\treturn {\n\t\t...explanation,\n\t\tsourceMap: {\n\t\t\targs: {},\n\t\t\t...explanation.sourceMap,\n\t\t\tmecanismName: 'composantes',\n\t\t},\n\t}\n}\n","import { EvaluationFunction } from '..'\nimport { ASTNode } from '../AST/types'\nimport { PublicodesError } from '../error'\nimport { registerEvaluationFunction } from '../evaluationFunctions'\nimport { bonus, mergeAllMissing, mergeMissing } from '../evaluationUtils'\nimport parse from '../parse'\n\nexport type ConditionNode = {\n\texplanation: {\n\t\tsi: ASTNode\n\t\talors: ASTNode\n\t\tsinon: ASTNode\n\t}\n\tnodeKind: 'condition'\n}\n\nconst evaluate: EvaluationFunction<'condition'> = function (node) {\n\tlet evaluation\n\tconst condition = this.evaluateNode(node.explanation.si)\n\tlet alors = node.explanation.alors\n\tlet sinon = node.explanation.sinon\n\tif ('unit' in condition) {\n\t\tthrow new PublicodesError(\n\t\t\t'EvaluationError',\n\t\t\t'La condition doit être de type booléen',\n\t\t\t{ dottedName: this.cache._meta.evaluationRuleStack[0] }\n\t\t)\n\t}\n\tif (condition.nodeValue === true) {\n\t\talors = this.evaluateNode(node.explanation.alors)\n\t\t;(alors as any).isActive = true\n\t\tevaluation = alors\n\t} else if (condition.nodeValue === false) {\n\t\tsinon = this.evaluateNode(node.explanation.sinon)\n\t\tevaluation = sinon\n\t} else if (condition.nodeValue === null) {\n\t\tevaluation = condition\n\t} else if (condition.nodeValue === undefined) {\n\t\tsinon = this.evaluateNode(node.explanation.sinon)\n\t\talors = this.evaluateNode(node.explanation.alors)\n\t\tevaluation = {\n\t\t\t...condition,\n\t\t\tmissingVariables: mergeAllMissing([sinon, alors]),\n\t\t}\n\t} else {\n\t\tthrow new PublicodesError(\n\t\t\t'EvaluationError',\n\t\t\t'La condition doit être de type booléen',\n\t\t\t{ dottedName: this.cache._meta.evaluationRuleStack[0] }\n\t\t)\n\t}\n\tconst unit = evaluation.unit ?? (alors as any).unit\n\treturn {\n\t\t...evaluation,\n\t\tmissingVariables: mergeMissing(\n\t\t\tbonus(condition.missingVariables),\n\t\t\tevaluation.missingVariables\n\t\t),\n\t\t...(unit != undefined ? { unit } : {}),\n\t\t...node,\n\t\texplanation: { si: condition, alors, sinon },\n\t}\n}\nexport default function parseCondition(v, context) {\n\tconst explanation = {\n\t\tsi: parse(v.si, context),\n\t\talors: parse(v.alors, context),\n\t\tsinon: parse(v.sinon, context),\n\t}\n\treturn {\n\t\texplanation,\n\t\tnodeKind: 'condition',\n\t} as ConditionNode\n}\n\nparseCondition.nom = 'condition'\n\nregisterEvaluationFunction('condition', evaluate)\n","import { PublicodesError } from './error'\n\nexport function normalizeDateString(dateString: string): string {\n\tlet [day, month, year] = dateString.split('/')\n\tif (!year) {\n\t\t;[day, month, year] = ['01', day, month]\n\t}\n\treturn normalizeDate(+year, +month, +day)\n}\n\nconst pad = (n: number): string => (+n < 10 ? `0${n}` : '' + n)\nexport function normalizeDate(\n\tyear: number,\n\tmonth: number,\n\tday: number\n): string {\n\tconst date = new Date(+year, +month - 1, +day)\n\tif (!+date || date.getDate() !== +day) {\n\t\tthrow new PublicodesError(\n\t\t\t'SyntaxError',\n\t\t\t`La date ${day}/${month}/${year} n'est pas valide`,\n\t\t\t{ dottedName: '' }\n\t\t)\n\t}\n\treturn `${pad(day)}/${pad(month)}/${pad(year)}`\n}\n\nexport function convertToDate(value: string): Date {\n\tconst [day, month, year] = normalizeDateString(value).split('/')\n\tconst result = new Date(+year, +month - 1, +day)\n\t// Reset date to utc midnight for exact calculation of day difference (no\n\t// daylight saving effect)\n\tresult.setMinutes(result.getMinutes() - result.getTimezoneOffset())\n\treturn result\n}\n\nexport function convertToString(date: Date): string {\n\treturn normalizeDate(date.getFullYear(), date.getMonth() + 1, date.getDate())\n}\n\nexport function getRelativeDate(date: string, dayDifferential: number): string {\n\tconst relativeDate = new Date(convertToDate(date))\n\trelativeDate.setDate(relativeDate.getDate() + dayDifferential)\n\treturn convertToString(relativeDate)\n}\n\nexport function getYear(date: string): number {\n\treturn +date.slice(-4)\n}\n\nexport function getDifferenceInDays(from: string, to: string): number {\n\tconst millisecondsPerDay = 1000 * 60 * 60 * 24\n\treturn (\n\t\t1 +\n\t\t(convertToDate(from).getTime() - convertToDate(to).getTime()) /\n\t\t\tmillisecondsPerDay\n\t)\n}\n\nexport function getDifferenceInMonths(from: string, to: string): number {\n\t// We want to compute the difference in actual month between the two dates\n\t// For date that start during a month, a pro-rata will be done depending on\n\t// the duration of the month in days\n\tconst [dayFrom, monthFrom, yearFrom] = from.split('/').map((x) => +x)\n\tconst [dayTo, monthTo, yearTo] = to.split('/').map((x) => +x)\n\tconst numberOfFullMonth = monthTo - monthFrom + 12 * (yearTo - yearFrom)\n\tconst numDayMonthFrom = new Date(yearFrom, monthFrom, 0).getDate()\n\tconst numDayMonthTo = new Date(yearTo, monthTo, 0).getDate()\n\tconst prorataMonthFrom = (dayFrom - 1) / numDayMonthFrom\n\tconst prorataMonthTo = dayTo / numDayMonthTo\n\treturn numberOfFullMonth - prorataMonthFrom + prorataMonthTo\n}\n\nexport function getDifferenceInYears(from: string, to: string): number {\n\t// Todo : take leap year into account\n\treturn getDifferenceInDays(from, to) / 365.25\n}\n","import { EvaluationFunction } from '..'\nimport { ASTNode, Unit } from '../AST/types'\nimport { convertToDate, convertToString } from '../date'\nimport { registerEvaluationFunction } from '../evaluationFunctions'\nimport { defaultNode, mergeAllMissing, parseObject } from '../evaluationUtils'\nimport { parseUnit } from '../units'\n\nexport type DuréeNode = {\n\texplanation: {\n\t\tdepuis: ASTNode\n\t\t\"jusqu'à\": ASTNode\n\t}\n\tunit: Unit\n\tnodeKind: 'durée'\n}\n\nconst todayString = convertToString(new Date())\nconst objectShape = {\n\tdepuis: defaultNode(todayString),\n\t\"jusqu'à\": defaultNode(todayString),\n}\nconst evaluate: EvaluationFunction<'durée'> = function (node) {\n\tconst from = this.evaluateNode(node.explanation.depuis)\n\tconst to = this.evaluateNode(node.explanation[\"jusqu'à\"])\n\tlet nodeValue\n\tif ([from, to].some(({ nodeValue }) => nodeValue === undefined)) {\n\t\tnodeValue = undefined\n\t} else {\n\t\tconst [fromDate, toDate] = ([from.nodeValue, to.nodeValue] as string[]).map(\n\t\t\tconvertToDate\n\t\t)\n\t\tnodeValue = Math.max(\n\t\t\t0,\n\t\t\tMath.round(\n\t\t\t\t(toDate.getTime() - fromDate.getTime()) / (1000 * 60 * 60 * 24)\n\t\t\t)\n\t\t)\n\t}\n\treturn {\n\t\t...node,\n\t\tmissingVariables: mergeAllMissing([from, to]),\n\t\tnodeValue,\n\t\texplanation: {\n\t\t\tdepuis: from,\n\t\t\t\"jusqu'à\": to,\n\t\t},\n\t}\n}\n\nexport default (v, context) => {\n\tconst explanation = parseObject(objectShape, v, context)\n\treturn {\n\t\texplanation,\n\t\tunit: parseUnit('jour'),\n\t\tnodeKind: 'durée',\n\t} as DuréeNode\n}\n\nregisterEvaluationFunction('durée', evaluate)\n","import { EvaluationFunction } from '..'\nimport { ASTNode } from '../AST/types'\nimport { registerEvaluationFunction } from '../evaluationFunctions'\nimport parse from '../parse'\nimport { createParseInlinedMecanism } from './inlineMecanism'\n\nexport type EstNonDéfiniNode = {\n\texplanation: ASTNode\n\tnodeKind: 'est non défini'\n}\n\nexport function parseEstNonDéfini(v, context) {\n\tconst explanation = parse(v, context)\n\treturn {\n\t\texplanation,\n\t\tnodeKind: 'est non défini',\n\t} as EstNonDéfiniNode\n}\nparseEstNonDéfini.nom = 'est non défini'\n\nconst parseEstDéfini = createParseInlinedMecanism(\n\t'est défini',\n\t{\n\t\tvaleur: {},\n\t},\n\t{\n\t\t'=': [{ 'est non défini': 'valeur' }, 'non'],\n\t}\n)\n\nconst parseEstApplicable = createParseInlinedMecanism(\n\t'est applicable',\n\t{\n\t\tvaleur: {},\n\t},\n\t{\n\t\t'=': [{ 'est non applicable': 'valeur' }, 'non'],\n\t}\n)\n\nexport { parseEstDéfini, parseEstApplicable }\n\nconst evaluate: EvaluationFunction<'est non défini'> = function (node) {\n\tconst valeur = this.evaluateNode(node.explanation)\n\tlet nodeValue: boolean | undefined | null = false\n\tif (valeur.nodeValue === undefined) {\n\t\tnodeValue = true\n\t}\n\n\treturn {\n\t\t...node,\n\t\tnodeValue,\n\t\tmissingVariables: valeur.missingVariables,\n\t\texplanation: valeur,\n\t}\n}\nregisterEvaluationFunction('est non défini', evaluate)\n","import { EvaluatedNode, Unit } from './AST/types'\nimport { convertUnit, simplifyUnit } from './units'\n\nexport function simplifyNodeUnit(node) {\n\tif (!node.unit) {\n\t\treturn node\n\t}\n\tconst unit = simplifyUnit(node.unit)\n\n\treturn convertNodeToUnit(unit, node)\n}\n\nexport function convertNodeToUnit<Node extends EvaluatedNode = EvaluatedNode>(\n\tto: Unit | undefined,\n\tnode: Node\n): Node {\n\treturn {\n\t\t...node,\n\t\tnodeValue:\n\t\t\tnode.unit && typeof node.nodeValue === 'number'\n\t\t\t\t? convertUnit(node.unit, to, node.nodeValue)\n\t\t\t\t: node.nodeValue,\n\t\tunit: to,\n\t}\n}\n","import { Evaluation, Unit } from './AST/types'\nimport { simplifyNodeUnit } from './nodeUnits'\nimport { formatUnit, serializeUnit } from './units'\n\nexport const numberFormatter =\n\t({\n\t\tstyle,\n\t\tmaximumFractionDigits = 2,\n\t\tminimumFractionDigits = 0,\n\t\tlanguage,\n\t}: {\n\t\tstyle?: string\n\t\tmaximumFractionDigits?: number\n\t\tminimumFractionDigits?: number\n\t\tlanguage?: string\n\t}) =>\n\t(value: number) => {\n\t\t// When we format currency we don't want to display a single decimal digit\n\t\t// ie 8,1€ but we want to display 8,10€\n\t\tconst adaptedMinimumFractionDigits =\n\t\t\tstyle === 'currency' &&\n\t\t\tmaximumFractionDigits >= 2 &&\n\t\t\tminimumFractionDigits === 0 &&\n\t\t\t!Number.isInteger(value)\n\t\t\t\t? 2\n\t\t\t\t: minimumFractionDigits\n\t\treturn Intl.NumberFormat(language, {\n\t\t\tstyle,\n\t\t\tcurrency: 'EUR',\n\t\t\tmaximumFractionDigits,\n\t\t\tminimumFractionDigits: adaptedMinimumFractionDigits,\n\t\t}).format(value)\n\t}\n\nexport const formatCurrency = (\n\tnodeValue: number | undefined,\n\tlanguage: string\n) => {\n\treturn nodeValue == undefined\n\t\t? ''\n\t\t: (formatNumber({ unit: '€', language, nodeValue }) ?? '').replace(\n\t\t\t\t/^(-)?€/,\n\t\t\t\t'$1€\\u00A0'\n\t\t  )\n}\n\nexport const formatPercentage = (nodeValue: number | undefined) =>\n\tnodeValue == undefined\n\t\t? ''\n\t\t: formatNumber({ unit: '%', nodeValue, maximumFractionDigits: 2 })\n\ntype formatValueOptions = {\n\tmaximumFractionDigits?: number\n\tminimumFractionDigits?: number\n\tlanguage?: string\n\tunit?: Unit | string\n\tformatUnit?: formatUnit\n\tnodeValue: number\n}\n\nfunction formatNumber({\n\tmaximumFractionDigits,\n\tminimumFractionDigits,\n\tlanguage,\n\tformatUnit,\n\tunit,\n\tnodeValue,\n}: formatValueOptions) {\n\tif (typeof nodeValue !== 'number') {\n\t\treturn nodeValue\n\t}\n\tconst serializedUnit = unit\n\t\t? serializeUnit(unit, nodeValue, formatUnit)\n\t\t: undefined\n\tswitch (serializedUnit) {\n\t\tcase '€':\n\t\t\treturn numberFormatter({\n\t\t\t\tstyle: 'currency',\n\t\t\t\tmaximumFractionDigits,\n\t\t\t\tminimumFractionDigits,\n\t\t\t\tlanguage,\n\t\t\t})(nodeValue)\n\t\tcase '%':\n\t\t\treturn numberFormatter({\n\t\t\t\tstyle: 'percent',\n\t\t\t\tmaximumFractionDigits,\n\t\t\t\tlanguage,\n\t\t\t})(nodeValue / 100)\n\t\tdefault:\n\t\t\treturn (\n\t\t\t\tnumberFormatter({\n\t\t\t\t\tstyle: 'decimal',\n\t\t\t\t\tminimumFractionDigits,\n\t\t\t\t\tmaximumFractionDigits,\n\t\t\t\t\tlanguage,\n\t\t\t\t})(nodeValue) +\n\t\t\t\t(typeof serializedUnit === 'string' ? `\\u00A0${serializedUnit}` : '')\n\t\t\t)\n\t}\n}\n\nexport function capitalise0(name: undefined): undefined\nexport function capitalise0(name: string): string\nexport function capitalise0(name?: string) {\n\treturn name && name[0].toUpperCase() + name.slice(1)\n}\n\nconst booleanTranslations = {\n\tfr: { true: 'oui', false: 'non' },\n\ten: { true: 'yes', false: 'no' },\n}\n\ntype Options = {\n\tlanguage?: string\n\tdisplayedUnit?: string\n\tprecision?: number\n\tformatUnit?: formatUnit\n}\n\nexport function formatValue(\n\tvalue: number | { nodeValue: Evaluation; unit?: Unit } | undefined,\n\n\t{ language = 'fr', displayedUnit, formatUnit, precision = 2 }: Options = {}\n) {\n\tlet nodeValue =\n\t\ttypeof value === 'number' || typeof value === 'undefined' || value === null\n\t\t\t? value\n\t\t\t: value.nodeValue\n\n\tif (typeof nodeValue === 'number' && Number.isNaN(nodeValue)) {\n\t\treturn 'Erreur dans le calcul du nombre'\n\t}\n\tif (nodeValue === undefined) {\n\t\treturn 'Pas encore défini'\n\t}\n\tif (nodeValue === null) {\n\t\treturn 'Non applicable'\n\t}\n\tif (typeof nodeValue === 'string') {\n\t\treturn nodeValue.replace('\\\\n', '\\n')\n\t}\n\tif (typeof nodeValue === 'object') return (nodeValue as any).nom\n\tif (typeof nodeValue === 'boolean')\n\t\treturn booleanTranslations[language][nodeValue]\n\tif (typeof nodeValue === 'number') {\n\t\tlet unit =\n\t\t\ttypeof value === 'number' ||\n\t\t\ttypeof value === 'undefined' ||\n\t\t\t!('unit' in value)\n\t\t\t\t? undefined\n\t\t\t\t: value.unit\n\t\tif (unit) {\n\t\t\tconst simplifiedNode = simplifyNodeUnit({\n\t\t\t\tunit,\n\t\t\t\tnodeValue,\n\t\t\t})\n\t\t\tunit = simplifiedNode.unit\n\t\t\tnodeValue = simplifiedNode.nodeValue as number\n\t\t}\n\t\treturn formatNumber({\n\t\t\tminimumFractionDigits: 0,\n\t\t\tmaximumFractionDigits: precision,\n\t\t\tlanguage,\n\t\t\tformatUnit,\n\t\t\tnodeValue,\n\t\t\tunit: displayedUnit ?? unit,\n\t\t}).trim()\n\t}\n\treturn undefined\n}\n\nexport function serializeValue(\n\t{ nodeValue, unit }: { nodeValue: Evaluation; unit?: Unit },\n\t{ format }: { format: formatUnit }\n) {\n\tconst serializedUnit = (\n\t\tunit && typeof nodeValue === 'number'\n\t\t\t? serializeUnit(unit, nodeValue, format)\n\t\t\t: ''\n\t)?.replace(/\\s*\\/\\s*/g, '/')\n\treturn `${nodeValue} ${serializedUnit}`.trim()\n}\n","import { ParsedRules } from '.'\nimport { ASTNode } from './AST/types'\nimport { PublicodesError } from './error'\nimport { ReferencesMaps } from './parsePublicodes'\nimport { ReferenceNode } from './reference'\nimport { RuleNode } from './rule'\nimport { addToMapSet } from './utils'\n\nexport { cyclicDependencies } from './AST/graph'\n\nconst splitName = (str: string) => str.split(' . ')\nconst joinName = (strs: Array<string>) => strs.join(' . ')\n\n/**\n * Returns the last part of a dottedName (the leaf).\n */\nexport const nameLeaf = (dottedName: string) =>\n\tsplitName(dottedName).slice(-1)?.[0]\n\n/**\n * Encodes a dottedName for the URL to be secure.\n * @see {@link decodeRuleName}\n */\nexport const encodeRuleName = (dottedName: string): string =>\n\tdottedName\n\t\t?.replace(/\\s\\.\\s/g, '/')\n\t\t.replace(/-/g, '\\u2011') // replace with a insecable tiret to differenciate from space\n\t\t.replace(/\\s/g, '-')\n\n/**\n * Decodes an encoded dottedName.\n * @see {@link encodeRuleName}\n */\nexport const decodeRuleName = (dottedName: string): string =>\n\tdottedName\n\t\t.replace(/\\//g, ' . ')\n\t\t.replace(/-/g, ' ')\n\t\t.replace(/\\u2011/g, '-')\n\n/**\n * Return dottedName from contextName\n */\nexport const contextNameToDottedName = (contextName: string) =>\n\tcontextName.endsWith('$SITUATION') ? ruleParent(contextName) : contextName\n\n/**\n * Returns the parent dottedName\n */\nexport const ruleParent = (dottedName: string): string =>\n\tjoinName(splitName(dottedName).slice(0, -1))\n\n/**\n * Returns an array of dottedName from near parent to far parent.\n */\nexport function ruleParents(dottedName: string): Array<string> {\n\treturn splitName(dottedName)\n\t\t.slice(0, -1)\n\t\t.map((_, i, arr) => joinName(arr.slice(0, i + 1)))\n\t\t.reverse()\n}\n\n/**\n * Returns an array of all child rules of a dottedName\n */\nexport const getChildrenRules = (\n\tparsedRules: ParsedRules<string>,\n\tdottedName: string\n) => {\n\tconst childrenRules = Object.keys(parsedRules).filter(\n\t\t(ruleDottedName) =>\n\t\t\truleDottedName.startsWith(dottedName) &&\n\t\t\tsplitName(ruleDottedName).length === splitName(dottedName).length + 1\n\t)\n\n\treturn childrenRules\n}\n\n/**\n * Finds the common ancestor of two dottedName\n */\nexport function findCommonAncestor(dottedName1: string, dottedName2: string) {\n\tconst splitDottedName1 = splitName(dottedName1)\n\tconst splitDottedName2 = splitName(dottedName2)\n\tconst index = splitDottedName1.findIndex(\n\t\t(value, i) => splitDottedName2[i] !== value\n\t)\n\n\treturn index === -1 ? dottedName1 : joinName(splitDottedName1.slice(0, index))\n}\n\n/**\n * Check wether a rule is accessible from a namespace.\n *\n * Takes into account that some namespace can be `private`, i.e. that they can only be\n * accessed by immediate parent, children or siblings.\n *\n * @param rules The parsed rules\n * @param contextName The context of the call\n * @param name The namespace checked for accessibility\n */\nexport function isAccessible(\n\trules: Record<string, RuleNode>,\n\tcontextName: string,\n\tname: string\n) {\n\tif (!(name in rules)) {\n\t\tthrow new PublicodesError(\n\t\t\t'InternalError',\n\t\t\t`La règle \"${name}\" n'existe pas`,\n\t\t\t{ dottedName: name }\n\t\t)\n\t}\n\n\tconst commonAncestor = findCommonAncestor(contextName, name)\n\tconst parents = [name, ...ruleParents(name), '']\n\tconst rulesToCheckForPrivacy = parents.slice(\n\t\t0,\n\t\tMath.max(parents.indexOf(commonAncestor) - 1, 0)\n\t)\n\n\treturn rulesToCheckForPrivacy.every(\n\t\t(dottedName) =>\n\t\t\t!(dottedName in rules) || rules[dottedName].private === false\n\t)\n}\n\n/**\n * Check wether a rule is tagged as experimental.\n *\n * Takes into account the a children of an experimental rule is also experimental\n *\n * @param rules The parsed rules\n * @param name The namespace checked for experimental\n */\nexport function isExperimental(rules: Record<string, RuleNode>, name: string) {\n\tif (!(name in rules)) {\n\t\tthrow new PublicodesError(\n\t\t\t'InternalError',\n\t\t\t`La règle \"${name}\" n'existe pas`,\n\t\t\t{ dottedName: name }\n\t\t)\n\t}\n\tconst parents = [name, ...ruleParents(name)]\n\treturn parents.some(\n\t\t(dottedName) =>\n\t\t\tdottedName in rules && rules[dottedName].rawNode?.experimental === 'oui'\n\t)\n}\n\nexport function disambiguateReference<R extends Record<string, RuleNode>>(\n\trules: R,\n\tcontextName = '',\n\tpartialName: string\n): keyof R {\n\tconst possibleDottedName = [contextName, ...ruleParents(contextName), '']\n\t\t.map((x) => (x ? x + ' . ' + partialName : partialName))\n\t\t// Rules can reference themselves, but it should be the last thing to check\n\t\t.sort((a, b) => (a === contextName ? 1 : b === contextName ? -1 : 0))\n\n\tconst existingDottedName = possibleDottedName.filter((name) => name in rules)\n\tconst accessibleDottedName = existingDottedName.find((name) =>\n\t\tisAccessible(rules, contextName, name)\n\t)\n\n\tif (!existingDottedName.length) {\n\t\tthrow new PublicodesError(\n\t\t\t'SyntaxError',\n\t\t\t`La référence \"${partialName}\" est introuvable.\nVérifiez que l'orthographe et l'espace de nom sont corrects`,\n\t\t\t{ dottedName: contextNameToDottedName(contextName) }\n\t\t)\n\t}\n\tif (!accessibleDottedName) {\n\t\tthrow new PublicodesError(\n\t\t\t'SyntaxError',\n\t\t\t`La règle \"${existingDottedName[0]}\" n'est pas accessible depuis \"${contextName}\".\nCela vient du fait qu'elle est privée ou qu'un de ses parent est privé`,\n\t\t\t{ dottedName: contextNameToDottedName(contextName) }\n\t\t)\n\t}\n\n\treturn accessibleDottedName\n}\n\nexport function ruleWithDedicatedDocumentationPage(rule) {\n\treturn (\n\t\trule.virtualRule !== true &&\n\t\trule.type !== 'groupe' &&\n\t\trule.type !== 'texte' &&\n\t\trule.type !== 'paragraphe' &&\n\t\trule.type !== 'notification'\n\t)\n}\n\nexport function updateReferencesMapsFromReferenceNode(\n\tnode: ASTNode,\n\treferencesMaps: ReferencesMaps<string>,\n\truleDottedName?: string\n) {\n\tif (node.nodeKind === 'reference') {\n\t\taddToMapSet(\n\t\t\treferencesMaps.referencesIn,\n\t\t\truleDottedName ?? node.contextDottedName,\n\t\t\tnode.dottedName\n\t\t)\n\t\taddToMapSet(\n\t\t\treferencesMaps.rulesThatUse,\n\t\t\tnode.dottedName,\n\t\t\truleDottedName ?? node.contextDottedName\n\t\t)\n\t}\n}\nexport function disambiguateReferenceNode(\n\tnode: ASTNode,\n\tparsedRules: ParsedRules<string>\n): ReferenceNode | undefined {\n\tif (node.nodeKind !== 'reference') {\n\t\treturn\n\t}\n\tif (node.dottedName) {\n\t\treturn node\n\t}\n\n\tnode.dottedName = disambiguateReference(\n\t\tparsedRules,\n\t\tnode.contextDottedName,\n\t\tnode.name\n\t)\n\tnode.title = parsedRules[node.dottedName].title\n\tnode.acronym = parsedRules[node.dottedName].rawNode.acronyme\n\treturn node\n}\n","/* eslint-disable prefer-rest-params */\n/* eslint-disable @typescript-eslint/no-this-alias */\n// Adapted from https://github.com/dagrejs/graphlib (MIT license)\n// and https://github.com/lodash/lodash (MIT license)\n\n// TODO: type this\n\nfunction has(obj, key) {\n\treturn obj != null && Object.prototype.hasOwnProperty.call(obj, key)\n}\nfunction constant(value) {\n\treturn function (...args) {\n\t\treturn value\n\t}\n}\n\nconst DEFAULT_EDGE_NAME = '\\x00'\nconst EDGE_KEY_DELIM = '\\x01'\n\nconst incrementOrInitEntry = (map, k) => {\n\tif (map[k]) {\n\t\tmap[k]++\n\t} else {\n\t\tmap[k] = 1\n\t}\n}\n\nconst decrementOrRemoveEntry = (map, k) => {\n\tif (!--map[k]) {\n\t\tdelete map[k]\n\t}\n}\n\nconst edgeArgsToId = (isDirected, v_, w_, name) => {\n\tlet v = '' + v_\n\tlet w = '' + w_\n\tif (!isDirected && v > w) {\n\t\tconst tmp = v\n\t\tv = w\n\t\tw = tmp\n\t}\n\treturn (\n\t\tv +\n\t\tEDGE_KEY_DELIM +\n\t\tw +\n\t\tEDGE_KEY_DELIM +\n\t\t(name === undefined ? DEFAULT_EDGE_NAME : name)\n\t)\n}\n\nconst edgeArgsToObj = (isDirected, v_, w_, name) => {\n\tlet v = '' + v_\n\tlet w = '' + w_\n\tif (!isDirected && v > w) {\n\t\tconst tmp = v\n\t\tv = w\n\t\tw = tmp\n\t}\n\tconst edgeObj: any = { v: v, w: w }\n\tif (name) {\n\t\tedgeObj.name = name\n\t}\n\treturn edgeObj\n}\n\nconst edgeObjToId = (isDirected, edgeObj) => {\n\treturn edgeArgsToId(isDirected, edgeObj.v, edgeObj.w, edgeObj.name)\n}\nexport class Graph {\n\tprivate _nodeCount = 0\n\tprivate _edgeCount = 0\n\n\tprivate _isDirected: any\n\n\tprivate _label: undefined\n\tprivate _defaultNodeLabelFn: (...args: any[]) => any\n\tprivate _defaultEdgeLabelFn: (...args: any[]) => any\n\tprivate _nodes: Record<string, any>\n\tprivate _in: Record<string, any>\n\tprivate _preds: Record<string, Record<string, number>>\n\tprivate _out: Record<string, Record<string, string>>\n\tprivate _sucs: Record<string, Record<string, number>>\n\tprivate _edgeObjs: Record<any, any>\n\tprivate _edgeLabels: Record<any, string>\n\n\tconstructor(opts: Record<string, boolean> = {}) {\n\t\tthis._isDirected = has(opts, 'directed') ? opts.directed : true\n\n\t\t// Label for the graph itself\n\t\tthis._label = undefined\n\n\t\t// Defaults to be set when creating a new node\n\t\tthis._defaultNodeLabelFn = constant(undefined)\n\n\t\t// Defaults to be set when creating a new edge\n\t\tthis._defaultEdgeLabelFn = constant(undefined)\n\n\t\t// v -> label\n\t\tthis._nodes = {}\n\n\t\t// v -> edgeObj\n\t\tthis._in = {}\n\n\t\t// u -> v -> Number\n\t\tthis._preds = {}\n\n\t\t// v -> edgeObj\n\t\tthis._out = {} as Record<string, Record<string, string>>\n\n\t\t// v -> w -> Number\n\t\tthis._sucs = {}\n\n\t\t// e -> edgeObj\n\t\tthis._edgeObjs = {}\n\n\t\t// e -> label\n\t\tthis._edgeLabels = {}\n\t}\n\n\t/* === Graph functions ========= */\n\n\tisDirected() {\n\t\treturn this._isDirected\n\t}\n\tsetGraph(label) {\n\t\tthis._label = label\n\t\treturn this\n\t}\n\tgraph() {\n\t\treturn this._label\n\t}\n\n\t/* === Node functions ========== */\n\n\tnodeCount() {\n\t\treturn this._nodeCount\n\t}\n\tnodes() {\n\t\treturn Object.keys(this._nodes)\n\t}\n\tsetNode(v, value: any = undefined) {\n\t\tif (has(this._nodes, v)) {\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tthis._nodes[v] = value\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tthis._nodes[v] = arguments.length > 1 ? value : this._defaultNodeLabelFn(v)\n\t\tthis._in[v] = {}\n\t\tthis._preds[v] = {}\n\t\tthis._out[v] = {}\n\t\tthis._sucs[v] = {}\n\t\t++this._nodeCount\n\t\treturn this\n\t}\n\tsetNodes(vs, value) {\n\t\tvs.forEach((v) => {\n\t\t\tif (value !== undefined) {\n\t\t\t\tthis.setNode(v, value)\n\t\t\t} else {\n\t\t\t\tthis.setNode(v)\n\t\t\t}\n\t\t})\n\t\treturn this\n\t}\n\tnode(v) {\n\t\treturn this._nodes[v]\n\t}\n\thasNode(v) {\n\t\treturn has(this._nodes, v)\n\t}\n\tsuccessors(v) {\n\t\tconst sucsV = this._sucs[v]\n\t\tif (sucsV) {\n\t\t\treturn Object.keys(sucsV)\n\t\t}\n\t}\n\n\t/* === Edge functions ========== */\n\n\tedgeCount() {\n\t\treturn this._edgeCount\n\t}\n\tedges() {\n\t\treturn Object.values(this._edgeObjs)\n\t}\n\tsetEdge(\n\t\tv: string,\n\t\tw: string,\n\t\tvalue: any = undefined,\n\t\tname: string | undefined = undefined\n\t) {\n\t\tv = '' + v\n\t\tw = '' + w\n\n\t\tconst e = edgeArgsToId(this._isDirected, v, w, name)\n\t\tif (has(this._edgeLabels, e)) {\n\t\t\tif (value !== undefined) {\n\t\t\t\tthis._edgeLabels[e] = value\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\t// It didn't exist, so we need to create it.\n\t\t// First ensure the nodes exist.\n\t\tthis.setNode(v)\n\t\tthis.setNode(w)\n\n\t\tthis._edgeLabels[e] =\n\t\t\tvalue !== undefined ? value : this._defaultEdgeLabelFn(v, w, name)\n\n\t\tconst edgeObj = edgeArgsToObj(this._isDirected, v, w, name)\n\t\t// Ensure we add undirected edges in a consistent way.\n\t\tv = edgeObj.v\n\t\tw = edgeObj.w\n\n\t\tObject.freeze(edgeObj)\n\t\tthis._edgeObjs[e] = edgeObj\n\t\tincrementOrInitEntry(this._preds[w], v)\n\t\tincrementOrInitEntry(this._sucs[v], w)\n\t\tthis._in[w][e] = edgeObj\n\t\tthis._out[v][e] = edgeObj\n\t\tthis._edgeCount++\n\t\treturn this\n\t}\n\n\tedge(v, w, name) {\n\t\tconst e =\n\t\t\targuments.length === 1\n\t\t\t\t? edgeObjToId(this._isDirected, arguments[0])\n\t\t\t\t: edgeArgsToId(this._isDirected, v, w, name)\n\t\treturn this._edgeLabels[e]\n\t}\n\n\thasEdge(v, w, name) {\n\t\tconst e =\n\t\t\targuments.length === 1\n\t\t\t\t? edgeObjToId(this._isDirected, arguments[0])\n\t\t\t\t: edgeArgsToId(this._isDirected, v, w, name)\n\t\treturn has(this._edgeLabels, e)\n\t}\n\n\tremoveEdge(v, w, name) {\n\t\tconst e =\n\t\t\targuments.length === 1\n\t\t\t\t? edgeObjToId(this._isDirected, arguments[0])\n\t\t\t\t: edgeArgsToId(this._isDirected, v, w, name)\n\t\tconst edge = this._edgeObjs[e]\n\t\tif (edge) {\n\t\t\tv = edge.v\n\t\t\tw = edge.w\n\t\t\tdelete this._edgeLabels[e]\n\t\t\tdelete this._edgeObjs[e]\n\t\t\tdecrementOrRemoveEntry(this._preds[w], v)\n\t\t\tdecrementOrRemoveEntry(this._sucs[v], w)\n\t\t\tdelete this._in[w][e]\n\t\t\tdelete this._out[v][e]\n\t\t\tthis._edgeCount--\n\t\t}\n\t\treturn this\n\t}\n\n\toutEdges(v: string, w: string | undefined = undefined) {\n\t\tconst outV = this._out[v]\n\t\tif (outV) {\n\t\t\tconst edges: any = Object.values(outV)\n\t\t\tif (w === undefined) {\n\t\t\t\treturn edges\n\t\t\t}\n\t\t\treturn edges.filter(function (edge) {\n\t\t\t\treturn edge.w === w\n\t\t\t})\n\t\t}\n\t}\n}\n\n/** Cycles stuff **/\n\nfunction tarjan(graph) {\n\tlet index = 0\n\tconst stack: any[] = []\n\tconst visited = {} // node id -> { onStack, lowlink, index }\n\tconst results: any[] = []\n\n\tfunction dfs(v) {\n\t\tconst entry = (visited[v] = {\n\t\t\tonStack: true,\n\t\t\tlowlink: index,\n\t\t\tindex: index++,\n\t\t})\n\t\tstack.push(v)\n\n\t\tgraph.successors(v).forEach(function (w) {\n\t\t\tif (!Object.prototype.hasOwnProperty.call(visited, w)) {\n\t\t\t\tdfs(w)\n\t\t\t\tentry.lowlink = Math.min(entry.lowlink, visited[w].lowlink)\n\t\t\t} else if (visited[w].onStack) {\n\t\t\t\tentry.lowlink = Math.min(entry.lowlink, visited[w].index)\n\t\t\t}\n\t\t})\n\n\t\tif (entry.lowlink === entry.index) {\n\t\t\tconst cmpt: any[] = []\n\t\t\tlet w\n\t\t\tdo {\n\t\t\t\tw = stack.pop()\n\t\t\t\tvisited[w].onStack = false\n\t\t\t\tcmpt.push(w)\n\t\t\t} while (v !== w)\n\t\t\tresults.push(cmpt)\n\t\t}\n\t}\n\n\tgraph.nodes().forEach(function (v) {\n\t\tif (!Object.prototype.hasOwnProperty.call(visited, v)) {\n\t\t\tdfs(v)\n\t\t}\n\t})\n\n\treturn results\n}\n\nexport function findCycles(graph): string[][] {\n\treturn tarjan(graph).filter(function (cmpt) {\n\t\treturn (\n\t\t\tcmpt.length > 1 || (cmpt.length === 1 && graph.hasEdge(cmpt[0], cmpt[0]))\n\t\t)\n\t})\n}\n","import parsePublicodes from '../parsePublicodes'\nimport { findCycles, Graph } from './findCycles'\n\ntype GraphCycles = string[][]\n\nfunction buildDependenciesGraph(rulesDeps: Map<string, Set<string>>) {\n\tconst g = new Graph()\n\t;[...rulesDeps.entries()].forEach(([ruleDottedName, dependencies]) => {\n\t\tdependencies.forEach((depDottedName) => {\n\t\t\tg.setEdge(ruleDottedName, depDottedName)\n\t\t})\n\t})\n\treturn g\n}\n\ntype RawRules = Parameters<typeof parsePublicodes>[0]\n\nexport function cyclesInDependenciesGraph(rawRules: RawRules): GraphCycles {\n\tconst { referencesMaps } = parsePublicodes(rawRules)\n\tconst dependenciesGraph = buildDependenciesGraph(referencesMaps.referencesIn)\n\tconst cycles = findCycles(dependenciesGraph)\n\n\treturn cycles.map((c) => c.reverse())\n}\n\n/**\n * Make the cycle as small as possible.\n */\nexport function squashCycle(\n\trulesDependenciesObject: Map<string, Set<string>>,\n\tcycle: string[]\n): string[] {\n\tfunction* loopFrom(i: number) {\n\t\tlet j = i\n\t\twhile (true) {\n\t\t\tyield cycle[j++ % cycle.length]\n\t\t}\n\t}\n\tconst smallCycleStartingAt: string[][] = []\n\tfor (let i = 0; i < cycle.length; i++) {\n\t\tconst smallCycle: string[] = []\n\t\tlet previousVertex: string | undefined = undefined\n\t\tfor (const vertex of loopFrom(i)) {\n\t\t\tif (previousVertex === undefined) {\n\t\t\t\tsmallCycle.push(vertex)\n\t\t\t\tpreviousVertex = vertex\n\t\t\t} else if (rulesDependenciesObject.get(previousVertex)?.has(vertex)) {\n\t\t\t\tif (smallCycle.includes(vertex)) {\n\t\t\t\t\tsmallCycle.splice(0, smallCycle.lastIndexOf(vertex))\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tsmallCycle.push(vertex)\n\t\t\t\tpreviousVertex = vertex\n\t\t\t}\n\t\t}\n\t\tsmallCycleStartingAt.push(smallCycle)\n\t}\n\n\tconst smallest = smallCycleStartingAt.reduce((minCycle, someCycle) =>\n\t\tsomeCycle.length > minCycle.length ? minCycle : someCycle\n\t)\n\treturn smallest\n}\n\n/**\n * This function is useful so as to print the dependencies at each node of the\n * cycle.\n * ⚠️  Indeed, the findCycles function returns the cycle found using the\n * Tarjan method, which is **not necessarily the smallest cycle**. However, the\n * smallest cycle is more readable.\n */\nexport function cyclicDependencies(\n\trawRules: RawRules\n): [GraphCycles, string[]] {\n\tconst { referencesMaps } = parsePublicodes(rawRules)\n\tconst dependenciesGraph = buildDependenciesGraph(referencesMaps.referencesIn)\n\tconst cycles = findCycles(dependenciesGraph)\n\n\tconst reversedCycles = cycles.map((c) => c.reverse())\n\n\tconst smallCycles = reversedCycles.map((cycle) =>\n\t\tsquashCycle(referencesMaps.referencesIn, cycle)\n\t)\n\n\tconst printableStronglyConnectedComponents = reversedCycles.map((c, i) =>\n\t\tprintInDotFormat(dependenciesGraph, c, smallCycles[i])\n\t)\n\n\treturn [smallCycles, printableStronglyConnectedComponents]\n}\n\n/**\n * Is edge in the cycle, in the same order?\n */\nconst edgeIsInCycle = (cycle: string[], v: string, w: string): boolean => {\n\tfor (let i = 0; i < cycle.length + 1; i++) {\n\t\tif (v === cycle[i] && w === cycle[(i + 1) % cycle.length]) return true\n\t}\n\treturn false\n}\n\nexport function printInDotFormat(\n\tdependenciesGraph: Graph,\n\tcycle: string[],\n\tsubCycleToHighlight: string[]\n) {\n\tconst edgesSet = new Set()\n\tcycle.forEach((vertex) => {\n\t\tdependenciesGraph\n\t\t\t.outEdges(vertex)\n\t\t\t.filter(({ w }) => cycle.includes(w))\n\t\t\t.forEach(({ v, w }) => {\n\t\t\t\tedgesSet.add(\n\t\t\t\t\t`\"${v}\" -> \"${w}\"` +\n\t\t\t\t\t\t(edgeIsInCycle(subCycleToHighlight, v, w) ? ' [color=red]' : '')\n\t\t\t\t)\n\t\t\t})\n\t})\n\treturn `digraph Cycle {\\n\\t${[...edgesSet].join(';\\n\\t')};\\n}`\n}\n","import { Logger, ParsedRules } from '.'\nimport { makeASTTransformer, makeASTVisitor } from './AST'\nimport { ASTNode } from './AST/types'\nimport { PublicodesInternalError, warning } from './error'\nimport { defaultNode } from './evaluationUtils'\nimport { notApplicableNode } from './mecanisms/inlineMecanism'\nimport parse from './parse'\nimport { Context, ReferencesMaps, RulesReplacements } from './parsePublicodes'\nimport { Rule, RuleNode } from './rule'\nimport { updateReferencesMapsFromReferenceNode } from './ruleUtils'\nimport { mergeWithArray } from './utils'\n\nexport type ReplacementRule = {\n\tnodeKind: 'replacementRule'\n\tdefinitionRule: ASTNode & { nodeKind: 'reference' }\n\treplacedReference: ASTNode & { nodeKind: 'reference' }\n\treplacementNode: ASTNode\n\twhiteListedNames: Array<ASTNode & { nodeKind: 'reference' }>\n\trawNode: any\n\tblackListedNames: Array<ASTNode & { nodeKind: 'reference' }>\n\tremplacementRuleId: number\n}\n\n// Replacements depend on the context and their evaluation implies using\n// \"variations\" node everywhere there is a reference to the original rule.\n// However for performance reason we want to mutualize identical \"variations\"\n// nodes instead of duplicating them, to avoid wasteful computations.\n//\n// The implementation works by first attributing an identifier for each\n// replacementRule. We then use this identifier to create a cache key that\n// represents the combinaison of applicables replacements for a given reference.\n// For example if replacements 12, 13 et 643 are applicable we use the key\n// `12-13-643` as the cache identifier in the `inlineReplacements` function.\nlet remplacementRuleId = 0\nconst cache = {}\n\nexport function parseReplacements(\n\treplacements: Rule['remplace'],\n\tcontext: Context\n): Array<ReplacementRule> {\n\tif (!replacements) {\n\t\treturn []\n\t}\n\n\treturn (Array.isArray(replacements) ? replacements : [replacements]).map(\n\t\t(replacement) => {\n\t\t\tif (typeof replacement === 'string') {\n\t\t\t\treplacement = { règle: replacement }\n\t\t\t}\n\n\t\t\tconst replacedReference = parse(replacement.règle, context)\n\t\t\tconst replacementNode = parse(\n\t\t\t\treplacement.par ?? context.dottedName,\n\t\t\t\tcontext\n\t\t\t)\n\n\t\t\tconst [whiteListedNames, blackListedNames] = [\n\t\t\t\treplacement.dans ?? [],\n\t\t\t\treplacement['sauf dans'] ?? [],\n\t\t\t]\n\t\t\t\t.map((dottedName) =>\n\t\t\t\t\tArray.isArray(dottedName) ? dottedName : [dottedName]\n\t\t\t\t)\n\t\t\t\t.map((refs) => refs.map((ref) => parse(ref, context)))\n\n\t\t\treturn {\n\t\t\t\tnodeKind: 'replacementRule',\n\t\t\t\trawNode: replacement,\n\t\t\t\tdefinitionRule: parse(context.dottedName, context),\n\t\t\t\treplacedReference,\n\t\t\t\treplacementNode,\n\t\t\t\twhiteListedNames,\n\t\t\t\tblackListedNames,\n\t\t\t\tremplacementRuleId: remplacementRuleId++,\n\t\t\t} as ReplacementRule\n\t\t}\n\t)\n}\n\nexport function parseRendNonApplicable(\n\trules: Rule['rend non applicable'],\n\tcontext: Context\n): Array<ReplacementRule> {\n\treturn parseReplacements(rules, context).map(\n\t\t(replacement) =>\n\t\t\t({\n\t\t\t\t...replacement,\n\t\t\t\treplacementNode: notApplicableNode,\n\t\t\t} as ReplacementRule)\n\t)\n}\n\nexport function getReplacements(\n\tparsedRules: Record<string, RuleNode>\n): RulesReplacements<string> {\n\tconst ret = {}\n\tfor (const dottedName in parsedRules) {\n\t\tconst rule = parsedRules[dottedName]\n\t\tfor (const replacement of rule.replacements) {\n\t\t\tif (!replacement.replacedReference.dottedName) {\n\t\t\t\tthrow new PublicodesInternalError(replacement)\n\t\t\t}\n\t\t\tconst key = replacement.replacedReference.dottedName\n\t\t\tret[key] = [...(ret[key] ?? []), replacement]\n\t\t}\n\t}\n\n\treturn ret\n}\n\nexport function inlineReplacements<\n\tNewNames extends string,\n\tPreviousNames extends string\n>({\n\tnewRules,\n\tpreviousReplacements,\n\tparsedRules,\n\treferencesMaps,\n\tlogger,\n}: {\n\tnewRules: ParsedRules<NewNames>\n\tpreviousReplacements: RulesReplacements<PreviousNames>\n\tparsedRules: ParsedRules<PreviousNames | NewNames>\n\treferencesMaps: ReferencesMaps<NewNames | PreviousNames>\n\tlogger: Logger\n}): [\n\tParsedRules<NewNames | PreviousNames>,\n\tRulesReplacements<NewNames | PreviousNames>\n] {\n\ttype Names = NewNames | PreviousNames\n\tconst newReplacements = getReplacements(newRules) as RulesReplacements<Names>\n\n\tconst ruleNamesWithNewReplacements = new Set([]) as Set<Names>\n\tfor (const replacedReference in newReplacements) {\n\t\tconst rulesThatUse =\n\t\t\treferencesMaps.rulesThatUse.get(replacedReference as NewNames | Names) ??\n\t\t\t[]\n\n\t\tfor (const value of rulesThatUse) {\n\t\t\truleNamesWithNewReplacements.add(value)\n\t\t}\n\t}\n\n\tconst newRuleNamesWithPreviousReplacements: Set<NewNames> = new Set(\n\t\t(Object.keys(newRules) as Array<NewNames>).filter((ruleName) =>\n\t\t\t[...(referencesMaps.referencesIn.get(ruleName) ?? new Set())].some(\n\t\t\t\t(reference) =>\n\t\t\t\t\t(previousReplacements[reference as PreviousNames] ?? []).length\n\t\t\t)\n\t\t)\n\t)\n\n\tconst replacements = mergeWithArray(previousReplacements, newReplacements)\n\tif (\n\t\t!newRuleNamesWithPreviousReplacements.size &&\n\t\t!ruleNamesWithNewReplacements.size\n\t) {\n\t\treturn [parsedRules, replacements]\n\t}\n\n\tconst inlinePreviousReplacement = makeReplacementInliner(\n\t\tpreviousReplacements,\n\t\treferencesMaps,\n\t\tlogger\n\t)\n\tconst inlineNewReplacement = makeReplacementInliner(\n\t\tnewReplacements,\n\t\treferencesMaps,\n\t\tlogger\n\t)\n\n\tnewRuleNamesWithPreviousReplacements.forEach((name) => {\n\t\tparsedRules[name] = inlinePreviousReplacement(\n\t\t\tparsedRules[name]\n\t\t) as RuleNode<Names>\n\t})\n\truleNamesWithNewReplacements.forEach((name) => {\n\t\tparsedRules[name] = inlineNewReplacement(\n\t\t\tparsedRules[name]\n\t\t) as RuleNode<Names>\n\t})\n\n\treturn [parsedRules, replacements]\n}\n\nexport function makeReplacementInliner(\n\treplacements: RulesReplacements<string>,\n\treferencesMaps: ReferencesMaps<string>,\n\tlogger: Logger\n): (n: ASTNode) => ASTNode {\n\treturn makeASTTransformer((node, transform) => {\n\t\tif (\n\t\t\tnode.nodeKind === 'replacementRule' ||\n\t\t\tnode.nodeKind === 'inversion' ||\n\t\t\tnode.nodeKind === 'une possibilité'\n\t\t) {\n\t\t\treturn false\n\t\t}\n\t\tif (node.nodeKind === 'recalcul') {\n\t\t\t// We don't replace references in recalcul keys\n\t\t\treturn {\n\t\t\t\t...node,\n\t\t\t\texplanation: {\n\t\t\t\t\t...node.explanation,\n\t\t\t\t\trecalculNode: transform(node.explanation.recalculNode),\n\t\t\t\t\tamendedSituation: node.explanation.amendedSituation.map(\n\t\t\t\t\t\t([name, value]) => [name, transform(value)]\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t}\n\t\t}\n\t\tif (node.nodeKind === 'reference') {\n\t\t\tif (!node.dottedName) {\n\t\t\t\tthrow new PublicodesInternalError(node)\n\t\t\t}\n\t\t\tconst replacedReferenceNode = replace(\n\t\t\t\tnode,\n\t\t\t\treplacements[node.dottedName] ?? [],\n\t\t\t\tlogger\n\t\t\t)\n\t\t\t// Collect inlined replacement\n\t\t\tmakeASTVisitor((n) => {\n\t\t\t\tupdateReferencesMapsFromReferenceNode(\n\t\t\t\t\tn,\n\t\t\t\t\treferencesMaps,\n\t\t\t\t\tnode.contextDottedName\n\t\t\t\t)\n\t\t\t\treturn 'continue'\n\t\t\t})(replacedReferenceNode)\n\t\t\treturn replacedReferenceNode\n\t\t}\n\t})\n}\n\nfunction replace(\n\tnode: ASTNode & { nodeKind: 'reference' }, //& { dottedName: string },\n\treplacements: Array<ReplacementRule>,\n\tlogger: Logger\n): ASTNode {\n\t// TODO : handle transitivité\n\n\tconst applicableReplacements = replacements\n\t\t.filter(\n\t\t\t({ definitionRule }) =>\n\t\t\t\tdefinitionRule.dottedName !== node.contextDottedName\n\t\t)\n\t\t.filter(\n\t\t\t({ whiteListedNames }) =>\n\t\t\t\t!whiteListedNames.length ||\n\t\t\t\twhiteListedNames.some((name) =>\n\t\t\t\t\tnode.contextDottedName.startsWith(name.dottedName as string)\n\t\t\t\t)\n\t\t)\n\t\t.filter(\n\t\t\t({ blackListedNames }) =>\n\t\t\t\t!blackListedNames.length ||\n\t\t\t\tblackListedNames.every(\n\t\t\t\t\t(name) =>\n\t\t\t\t\t\t!node.contextDottedName.startsWith(name.dottedName as string)\n\t\t\t\t)\n\t\t)\n\t\t.sort((r1, r2) => {\n\t\t\t// Replacement with whitelist conditions have precedence over the others\n\t\t\tconst criterion1 =\n\t\t\t\t+!!r2.whiteListedNames.length - +!!r1.whiteListedNames.length\n\t\t\t// Replacement with blacklist condition have precedence over the others\n\t\t\tconst criterion2 =\n\t\t\t\t+!!r2.blackListedNames.length - +!!r1.blackListedNames.length\n\t\t\treturn criterion1 || criterion2\n\t\t})\n\tif (!applicableReplacements.length) {\n\t\treturn node\n\t}\n\tif (applicableReplacements.length > 1) {\n\t\tconst displayVerboseWarning = false\n\t\tif (displayVerboseWarning) {\n\t\t\twarning(\n\t\t\t\tlogger,\n\t\t\t\t`\n\t\t\t\tIl existe plusieurs remplacements pour la référence '${node.dottedName}'.\n\t\t\t\tLors de l'execution, ils seront résolus dans l'odre suivant :\n\t\t\t\t${applicableReplacements.map(\n\t\t\t\t\t(replacement) =>\n\t\t\t\t\t\t`\\n\\t- Celui définit dans la règle '${replacement.definitionRule.dottedName}'`\n\t\t\t\t)}\n\t\t\t\t\t`,\n\t\t\t\t{ dottedName: node.contextDottedName }\n\t\t\t)\n\t\t}\n\t}\n\n\tconst applicableReplacementsCacheKey = applicableReplacements\n\t\t.map((n) => n.remplacementRuleId)\n\t\t.join('-')\n\n\tcache[applicableReplacementsCacheKey] ??= {\n\t\tnodeKind: 'variations',\n\t\tsourceMap: {\n\t\t\tmecanismName: 'replacement',\n\t\t},\n\t\trawNode: node.rawNode,\n\t\texplanation: [\n\t\t\t...applicableReplacements.map((replacement) => ({\n\t\t\t\tcondition: replacement.definitionRule,\n\t\t\t\tconsequence: replacement.replacementNode,\n\t\t\t})),\n\t\t\t{\n\t\t\t\tcondition: defaultNode(true),\n\t\t\t\tconsequence: node,\n\t\t\t},\n\t\t],\n\t}\n\treturn cache[applicableReplacementsCacheKey]\n}\n","import Engine from '.'\nimport { ASTNode, EvaluatedNode, MissingVariables } from './AST/types'\nimport { PublicodesError } from './error'\nimport { registerEvaluationFunction } from './evaluationFunctions'\nimport { defaultNode, mergeMissing } from './evaluationUtils'\nimport { capitalise0 } from './format'\nimport { undefinedNode } from './mecanisms/inlineMecanism'\nimport parse, { mecanismKeys } from './parse'\nimport { Context } from './parsePublicodes'\nimport { ReferenceNode } from './reference'\nimport {\n\tparseRendNonApplicable,\n\tparseReplacements,\n\tReplacementRule,\n} from './replacement'\nimport { isAccessible, nameLeaf, ruleParents } from './ruleUtils'\n\nexport type Rule = {\n\tformule?: Record<string, unknown> | string\n\tvaleur?: Record<string, unknown> | string\n\tquestion?: string\n\tdescription?: string\n\tunité?: string\n\tacronyme?: string\n\texemples?: any\n\tnom: string\n\trésumé?: string\n\ticônes?: string\n\ttitre?: string\n\tsévérité?: string\n\ttype?: string\n\texperimental?: 'oui'\n\t'possiblement non applicable'?: 'oui'\n\tprivé?: 'oui'\n\tnote?: string\n\tremplace?: RendNonApplicable | Array<RendNonApplicable>\n\t'rend non applicable'?: Remplace | Array<string>\n\tsuggestions?: Record<string, string | number | Record<string, unknown>>\n\tréférences?: { [source: string]: string }\n\tAPI?: string\n\t'identifiant court'?: string\n}\n\ntype Remplace =\n\t| {\n\t\t\trègle: string\n\t\t\tpar?: Record<string, unknown> | string | number\n\t\t\tdans?: Array<string> | string\n\t\t\t'sauf dans'?: Array<string> | string\n\t  }\n\t| string\ntype RendNonApplicable = Exclude<Remplace, { par: any }>\n\nexport type RuleNode<Name extends string = string> = {\n\tdottedName: Name\n\ttitle: string\n\tnodeKind: 'rule'\n\tvirtualRule: boolean\n\tprivate: boolean\n\trawNode: Rule\n\treplacements: Array<ReplacementRule>\n\texplanation: {\n\t\tvaleur: ASTNode\n\t\tparents: Array<ASTNode>\n\t\tnullableParent?: ASTNode\n\t\truleDisabledByItsParent: boolean\n\t}\n\tsuggestions: Record<string, ASTNode>\n\t'identifiant court'?: string\n}\n\nexport default function parseRule(\n\trawRule: Rule,\n\tcontext: Context\n): ReferenceNode | RuleNode {\n\tconst privateRule = !!(\n\t\trawRule.privé === 'oui' || rawRule.nom.startsWith('[privé] ')\n\t)\n\tconst nom = rawRule.nom.replace(/^\\[privé\\] /, '')\n\tconst dottedName = [context.dottedName, nom].filter(Boolean).join(' . ')\n\n\tconst name = nameLeaf(dottedName)\n\tconst title = capitalise0(rawRule['titre'] ?? name)\n\n\tif (context.parsedRules[dottedName]) {\n\t\tthrow new PublicodesError(\n\t\t\t'EvaluationError',\n\t\t\t`La référence '${dottedName}' a déjà été définie`,\n\t\t\t{ dottedName }\n\t\t)\n\t}\n\n\tconst ruleValue: Record<string, unknown> = {}\n\tfor (const key in rawRule) {\n\t\tif (mecanismKeys.includes(key)) {\n\t\t\truleValue[key] = rawRule[key]\n\t\t}\n\t}\n\tif ('formule' in rawRule) {\n\t\truleValue.valeur = rawRule.formule\n\t}\n\n\tif (!privateRule && !dottedName.endsWith('$SITUATION')) {\n\t\t// We create a $SITUATION child rule\n\t\truleValue['dans la situation'] = `${dottedName} . $SITUATION`\n\t\truleValue['avec'] = {\n\t\t\t...((ruleValue.avec as object) ?? {}),\n\t\t\t'[privé] $SITUATION': {\n\t\t\t\t...undefinedNode,\n\t\t\t\tisNullable: rawRule['possiblement non applicable'] === 'oui',\n\t\t\t},\n\t\t}\n\n\t\t// If the `par défaut` value is used, then the rule should be listed as a missingVariables\n\t\tif (ruleValue['par défaut'] != null) {\n\t\t\truleValue['par défaut'] = {\n\t\t\t\tvaleur: ruleValue['par défaut'],\n\t\t\t\t'variable manquante': dottedName,\n\t\t\t}\n\t\t}\n\t}\n\tconst ruleContext = { ...context, dottedName }\n\n\t// The following ensures that nested rules appears after the root rule when\n\t// iterating over parsedRule\n\tcontext.parsedRules[dottedName] = undefined as any\n\n\tconst explanation = {\n\t\tvaleur: parse(ruleValue, ruleContext),\n\t\t// We include a list of references to the parents to implement the branch\n\t\t// desactivation feature. When evaluating a rule we only need to know the\n\t\t// first nullable parent, but this is something that we can't determine at\n\t\t// this stage :\n\t\t// - we need to run remplacements (which works on references in the ASTs\n\t\t//   which is why we insert these “virtual” references)\n\t\t// - we need to infer unit of the rules\n\t\t//\n\t\t// An alternative implementation would be possible that would colocate the\n\t\t// code related to branch desactivation (ie find the first nullable parent\n\t\t// statically after rules parsing)\n\t\tparents: ruleParents(dottedName)\n\t\t\t.map((parent) => parse(parent, ruleContext))\n\t\t\t.map(\n\t\t\t\t// This step ensure we skip the disambiguation step.\n\t\t\t\t// This prevents to inadequatly disambiguate a parent as a children of rule (for instance if we have `a . b` and `a . b . a` rules).\n\t\t\t\t// It's necessary while https://github.com/betagouv/publicodes/issues/253 is not implemented\n\t\t\t\t(n: ASTNode & { dottedName?: string }) => {\n\t\t\t\t\tn.dottedName = (n as ReferenceNode).name\n\t\t\t\t\treturn n\n\t\t\t\t}\n\t\t\t),\n\t}\n\n\tconst suggestions = {} as Record<string, ASTNode>\n\tif (rawRule.suggestions) {\n\t\tfor (const name in rawRule.suggestions) {\n\t\t\tsuggestions[name] = parse(rawRule.suggestions[name], ruleContext)\n\t\t}\n\t}\n\n\tcontext.parsedRules[dottedName] = {\n\t\tdottedName,\n\t\treplacements: [\n\t\t\t...parseRendNonApplicable(rawRule['rend non applicable'], ruleContext),\n\t\t\t...parseReplacements(rawRule.remplace, ruleContext),\n\t\t],\n\t\ttitle: title,\n\t\tprivate: privateRule,\n\t\tsuggestions,\n\t\tnodeKind: 'rule',\n\t\texplanation,\n\t\trawNode: rawRule,\n\t\tvirtualRule: !!context.dottedName,\n\t} as RuleNode\n\n\t// We return the parsedReference\n\treturn !!context.dottedName\n\t\t? (parse(nom, context) as ReferenceNode)\n\t\t: context.parsedRules[dottedName]\n}\n\nregisterEvaluationFunction('rule', function evaluate(node) {\n\tconst { ruleDisabledByItsParent, nullableParent, parentMissingVariables } =\n\t\tevaluateDisablingParent(this, node)\n\n\tlet valeurEvaluation: EvaluatedNode = {\n\t\t...node.explanation.valeur,\n\t\tnodeValue: null,\n\t\tmissingVariables: {},\n\t}\n\tif (!ruleDisabledByItsParent) {\n\t\tif (\n\t\t\tthis.cache._meta.evaluationRuleStack.filter(\n\t\t\t\t(dottedName) => dottedName === node.dottedName\n\t\t\t).length > 1\n\t\t) {\n\t\t\t//  TODO : remettre ce warning. Je ne sais pas pourquoi, mais la base de règle de mon-entreprise lève un warning sur quasiment toutes les cotisations\n\t\t\t// \t\t\twarning(\n\t\t\t// \t\t\t\tthis.context.logger,\n\t\t\t// \t\t\t\t`Un cycle a été détecté lors de l'évaluation de cette règle.\n\n\t\t\t// Par défaut cette règle sera évaluée à 'null'.\n\t\t\t// Pour indiquer au moteur de résoudre la référence circulaire en trouvant le point fixe\n\t\t\t// de la fonction, il vous suffit d'ajouter l'attribut suivant niveau de la règle :\n\n\t\t\t// \t${node.dottedName}:\n\t\t\t// \t\trésoudre la référence circulaire: oui\"\n\t\t\t// \t\t...\n\t\t\t// `,\n\t\t\t// \t\t\t\t{ dottedName: node.dottedName }\n\t\t\t// \t\t\t)\n\n\t\t\tvaleurEvaluation = {\n\t\t\t\tnodeValue: undefined,\n\t\t\t} as EvaluatedNode\n\t\t} else {\n\t\t\tthis.cache._meta.evaluationRuleStack.unshift(node.dottedName)\n\t\t\tvaleurEvaluation = this.evaluateNode(node.explanation.valeur)\n\t\t\tthis.cache._meta.evaluationRuleStack.shift()\n\t\t}\n\t}\n\tvaleurEvaluation.missingVariables ??= {}\n\tupdateRuleMissingVariables(this, node, valeurEvaluation)\n\tconst evaluation = {\n\t\t...valeurEvaluation,\n\t\tmissingVariables: mergeMissing(\n\t\t\tvaleurEvaluation.missingVariables,\n\t\t\tparentMissingVariables\n\t\t),\n\t\t...node,\n\t\texplanation: {\n\t\t\tparents: node.explanation.parents,\n\t\t\tvaleur: valeurEvaluation,\n\t\t\tnullableParent,\n\t\t\truleDisabledByItsParent,\n\t\t},\n\t}\n\n\treturn evaluation\n})\n\n/* \n\tWe implement the terminal case for missing variables manually here as\n\ta rule is missing if it is undefined and has no other missing dependencies\n*/\nfunction updateRuleMissingVariables(\n\tengine: Engine,\n\tnode: RuleNode,\n\tvaleurEvaluation: EvaluatedNode\n): void {\n\tif (\n\t\tnode.private === true ||\n\t\t!isAccessible(engine.context.parsedRules, '', node.dottedName)\n\t) {\n\t\treturn\n\t}\n\n\tif (\n\t\tvaleurEvaluation.nodeValue === undefined &&\n\t\t!Object.keys(valeurEvaluation.missingVariables).length\n\t) {\n\t\tvaleurEvaluation.missingVariables[node.dottedName] = 1\n\t}\n\n\treturn\n}\n\nexport function evaluateDisablingParent(\n\tengine: Engine,\n\tnode: RuleNode\n): {\n\truleDisabledByItsParent: boolean\n\tparentMissingVariables: MissingVariables\n\tnullableParent?: ASTNode\n} {\n\tif (node.private) {\n\t\t// We do not need to check if a private rule is disabled by its parent :\n\t\t// they are accessible only from its sibling or parent\n\t\t// (which would already be disabled)\n\t\treturn { ruleDisabledByItsParent: false, parentMissingVariables: {} }\n\t}\n\n\tconst nodesTypes = engine.context.nodesTypes\n\tconst nullableParent = node.explanation.parents.find(\n\t\t(ref) =>\n\t\t\tnodesTypes.get(ref)?.isNullable || nodesTypes.get(ref)?.type === 'boolean'\n\t)\n\n\tif (!nullableParent) {\n\t\treturn { ruleDisabledByItsParent: false, parentMissingVariables: {} }\n\t}\n\n\tif (\n\t\t// TODO: remove this condition and the associated \"parentRuleStack\", cycles\n\t\t// should be detected and avoided at parse time.\n\t\t!engine.cache._meta.parentRuleStack.includes(node.dottedName)\n\t) {\n\t\tengine.cache._meta.parentRuleStack.unshift(node.dottedName)\n\t\tlet parentIsNotApplicable = defaultNode(false) as EvaluatedNode\n\t\tif (nodesTypes.get(nullableParent)?.isNullable) {\n\t\t\tparentIsNotApplicable = engine.evaluateNode({\n\t\t\t\tnodeKind: 'est non applicable',\n\t\t\t\texplanation: nullableParent,\n\t\t\t})\n\t\t}\n\t\tif (\n\t\t\tparentIsNotApplicable.nodeValue !== true &&\n\t\t\tnodesTypes.get(nullableParent)?.type === 'boolean'\n\t\t) {\n\t\t\tparentIsNotApplicable = engine.evaluateNode({\n\t\t\t\tnodeKind: 'operation',\n\t\t\t\toperator: '=',\n\t\t\t\toperationKind: '=',\n\t\t\t\texplanation: [nullableParent, defaultNode(false)],\n\t\t\t})\n\t\t}\n\n\t\tengine.cache._meta.parentRuleStack.shift()\n\t\tif (parentIsNotApplicable.nodeValue === true) {\n\t\t\treturn {\n\t\t\t\truleDisabledByItsParent: true,\n\t\t\t\tparentMissingVariables: parentIsNotApplicable.missingVariables ?? {},\n\t\t\t\tnullableParent,\n\t\t\t}\n\t\t}\n\t}\n\n\tlet parentMissingVariables: MissingVariables = {}\n\n\tif (nodesTypes.get(nullableParent)?.type === 'boolean') {\n\t\tconst parentEvaluation = engine.evaluateNode(nullableParent)\n\t\tparentMissingVariables = parentEvaluation.missingVariables ?? {}\n\t\treturn {\n\t\t\truleDisabledByItsParent: parentEvaluation.nodeValue === false,\n\t\t\tparentMissingVariables,\n\t\t\tnullableParent,\n\t\t}\n\t}\n\n\treturn {\n\t\truleDisabledByItsParent: false,\n\t\tparentMissingVariables,\n\t\tnullableParent,\n\t}\n}\n","import { EvaluationFunction, PublicodesError } from '..'\nimport { ASTNode } from '../AST/types'\nimport { registerEvaluationFunction } from '../evaluationFunctions'\nimport { mergeMissing } from '../evaluationUtils'\nimport parse from '../parse'\nimport { evaluateDisablingParent } from '../rule'\n\nexport type EstNonApplicableNode = {\n\texplanation: ASTNode\n\tnodeKind: 'est non applicable'\n}\nexport function parseEstNonApplicable(v, context) {\n\tconst explanation = parse(v, context)\n\treturn {\n\t\texplanation,\n\t\tnodeKind: 'est non applicable' as const,\n\t} as EstNonApplicableNode\n}\nparseEstNonApplicable.nom = 'est non applicable'\n\nconst isNotApplicable = (node: ASTNode) => {\n\treturn {\n\t\tnodeKind: 'est non applicable' as const,\n\t\texplanation: node,\n\t}\n}\n\nconst evaluateIsNotApplicable: EvaluationFunction<'est non applicable'> =\n\tfunction (node) {\n\t\tconst valeur = node.explanation\n\t\tif (\n\t\t\tthis.context.nodesTypes.get(valeur)?.isNullable === false &&\n\t\t\tvaleur.nodeKind !== 'rule'\n\t\t) {\n\t\t\treturn { ...node, nodeValue: false, missingVariables: {} }\n\t\t}\n\n\t\tif (\n\t\t\tthis.cache.nodes.has(valeur) &&\n\t\t\tthis.cache.nodes.get(valeur) !== undefined\n\t\t) {\n\t\t\treturn {\n\t\t\t\t...node,\n\t\t\t\tnodeValue: this.cache.nodes.get(valeur)?.nodeValue === null,\n\t\t\t\tmissingVariables: this.cache.nodes.get(valeur)?.missingVariables ?? {},\n\t\t\t}\n\t\t}\n\n\t\tswitch (valeur.nodeKind) {\n\t\t\tcase 'rule':\n\t\t\t\tconst { ruleDisabledByItsParent, parentMissingVariables } =\n\t\t\t\t\tevaluateDisablingParent(this, valeur)\n\t\t\t\tif (ruleDisabledByItsParent) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...node,\n\t\t\t\t\t\tnodeValue: true,\n\t\t\t\t\t\tmissingVariables: parentMissingVariables,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst isNotApplicableEvaluation = this.evaluateNode(\n\t\t\t\t\tisNotApplicable(valeur.explanation.valeur)\n\t\t\t\t)\n\t\t\t\tconst missingVariables = mergeMissing(\n\t\t\t\t\tparentMissingVariables,\n\t\t\t\t\tisNotApplicableEvaluation.missingVariables\n\t\t\t\t)\n\n\t\t\t\t// If the rule can be disabled thought the situation, it should be listed inside the missing variables\n\t\t\t\tif (\n\t\t\t\t\tisNotApplicableEvaluation.nodeValue === false &&\n\t\t\t\t\tthis.context.nodesTypes.get(\n\t\t\t\t\t\tthis.context.parsedRules[`${valeur.dottedName} . $SITUATION`]\n\t\t\t\t\t)?.isNullable &&\n\t\t\t\t\t!Object.keys(isNotApplicableEvaluation.missingVariables).length\n\t\t\t\t) {\n\t\t\t\t\tmissingVariables[valeur.dottedName] = 1\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t...node,\n\t\t\t\t\tnodeValue: isNotApplicableEvaluation.nodeValue,\n\t\t\t\t\tmissingVariables,\n\t\t\t\t}\n\n\t\t\tcase 'reference':\n\t\t\t\tif (!valeur.dottedName) {\n\t\t\t\t\tthrow new PublicodesError('InternalError', 'Missing dottedName', {})\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t...this.evaluateNode(\n\t\t\t\t\t\tisNotApplicable(this.context.parsedRules[valeur.dottedName])\n\t\t\t\t\t),\n\t\t\t\t\t...node,\n\t\t\t\t}\n\n\t\t\tcase 'condition':\n\t\t\t\treturn {\n\t\t\t\t\t...this.evaluateNode({\n\t\t\t\t\t\t...valeur,\n\t\t\t\t\t\texplanation: {\n\t\t\t\t\t\t\tsi: valeur.explanation.si,\n\t\t\t\t\t\t\talors: isNotApplicable(valeur.explanation.alors),\n\t\t\t\t\t\t\tsinon: isNotApplicable(valeur.explanation.sinon),\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t\t...node,\n\t\t\t\t}\n\t\t}\n\t\tconst evaluatedValeur = this.evaluateNode(valeur)\n\n\t\treturn {\n\t\t\t...node,\n\t\t\tnodeValue:\n\t\t\t\tevaluatedValeur.nodeValue === undefined\n\t\t\t\t\t? undefined\n\t\t\t\t\t: evaluatedValeur.nodeValue === null,\n\t\t\tmissingVariables: evaluatedValeur.missingVariables,\n\t\t}\n\t}\n\nregisterEvaluationFunction('est non applicable', evaluateIsNotApplicable)\n","// We use a JavaScript implementation of the Brent method to find the root (the\n// \"zero\") of a monotone function. There are other methods like the\n// Newton-Raphson method, but they take the derivative of the function as an\n// input, wich in our case is costly to calculate. The Brent method doesn't\n// need to calculate the derivative.\n// An interesting description of the algorithm can be found here:\n// https://blogs.mathworks.com/cleve/2015/10/26/zeroin-part-2-brents-version/\n\n/**\n * Copied from https://gist.github.com/borgar/3317728\n *\n * Searches the interval from <tt>lowerLimit</tt> to <tt>upperLimit</tt>\n * for a root (i.e., zero) of the function <tt>func</tt> with respect to\n * its first argument using Brent's method root-finding algorithm.\n *\n * Translated from zeroin.c in http://www.netlib.org/c/brent.shar.\n *\n * Copyright (c) 2012 Borgar Thorsteinsson <borgar@borgar.net>\n * MIT License, http://www.opensource.org/licenses/mit-license.php\n *\n * @param func function for which the root is sought.\n * @param lowerLimit the lower point of the interval to be searched.\n * @param upperLimit the upper point of the interval to be searched.\n * @param errorTol the desired accuracy (convergence tolerance).\n * @param maxIter the maximum number of iterations.\n * @param acceptableErrorTol return a result even if errorTol isn't reached after maxIter.\n * @returns an estimate for the root within accuracy.\n *\n */\nexport default function uniroot(\n\tfunc: (x: number) => number,\n\tlowerLimit: number,\n\tupperLimit: number,\n\terrorTol = 0,\n\tmaxIter = 100,\n\tacceptableErrorTol = 0\n) {\n\tlet a = lowerLimit,\n\t\tb = upperLimit,\n\t\tc = a,\n\t\tfa = func(a),\n\t\tfb = func(b),\n\t\tfc = fa,\n\t\tactualTolerance: number,\n\t\tnewStep: number, // Step at this iteration\n\t\tprevStep: number, // Distance from the last but one to the last approximation\n\t\tp: number, // Interpolation step is calculated in the form p/q; division is delayed until the last moment\n\t\tq: number,\n\t\tfallback: number | undefined = undefined\n\n\twhile (maxIter-- > 0) {\n\t\tprevStep = b - a\n\n\t\tif (Math.abs(fc) < Math.abs(fb)) {\n\t\t\t// Swap data for b to be the best approximation\n\t\t\t;(a = b), (b = c), (c = a)\n\t\t\t;(fa = fb), (fb = fc), (fc = fa)\n\t\t}\n\n\t\tactualTolerance = 1e-15 * Math.abs(b) + errorTol / 2\n\t\tnewStep = (c - b) / 2\n\n\t\tif (Math.abs(newStep) <= actualTolerance || fb === 0) {\n\t\t\treturn b // Acceptable approx. is found\n\t\t}\n\n\t\t// Decide if the interpolation can be tried\n\t\tif (Math.abs(prevStep) >= actualTolerance && Math.abs(fa) > Math.abs(fb)) {\n\t\t\t// If prevStep was large enough and was in true direction, Interpolatiom may be tried\n\t\t\tlet t1: number, t2: number\n\t\t\tconst cb = c - b\n\t\t\tif (a === c) {\n\t\t\t\t// If we have only two distinct points linear interpolation can only be applied\n\t\t\t\tt1 = fb / fa\n\t\t\t\tp = cb * t1\n\t\t\t\tq = 1.0 - t1\n\t\t\t} else {\n\t\t\t\t// Quadric inverse interpolation\n\t\t\t\t;(q = fa / fc), (t1 = fb / fc), (t2 = fb / fa)\n\t\t\t\tp = t2 * (cb * q * (q - t1) - (b - a) * (t1 - 1))\n\t\t\t\tq = (q - 1) * (t1 - 1) * (t2 - 1)\n\t\t\t}\n\n\t\t\tif (p > 0) {\n\t\t\t\tq = -q // p was calculated with the opposite sign; make p positive\n\t\t\t} else {\n\t\t\t\tp = -p // and assign possible minus to q\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tp < 0.75 * cb * q - Math.abs(actualTolerance * q) / 2 &&\n\t\t\t\tp < Math.abs((prevStep * q) / 2)\n\t\t\t) {\n\t\t\t\t// If (b + p / q) falls in [b,c] and isn't too large it is accepted\n\t\t\t\tnewStep = p / q\n\t\t\t}\n\n\t\t\t// If p/q is too large then the bissection procedure can reduce [b,c] range to more extent\n\t\t}\n\n\t\tif (Math.abs(newStep) < actualTolerance) {\n\t\t\t// Adjust the step to be not less than tolerance\n\t\t\tnewStep = newStep > 0 ? actualTolerance : -actualTolerance\n\t\t}\n\n\t\t;(a = b), (fa = fb) // Save the previous approx.\n\t\t;(b += newStep), (fb = func(b)) // Do step to a new approxim.\n\n\t\tif ((fb > 0 && fc > 0) || (fb < 0 && fc < 0)) {\n\t\t\t;(c = a), (fc = fa) // Adjust c for it to have a sign opposite to that of b\n\t\t}\n\t\tif (Math.abs(fb) < errorTol) {\n\t\t\treturn b\n\t\t}\n\t\tif (Math.abs(fb) < acceptableErrorTol) {\n\t\t\tfallback = b\n\t\t}\n\t}\n\treturn fallback\n}\n","import { EvaluationFunction, PublicodesError } from '..'\nimport { ASTNode } from '../AST/types'\nimport { registerEvaluationFunction } from '../evaluationFunctions'\nimport { defaultNode, mergeAllMissing } from '../evaluationUtils'\nimport parse from '../parse'\nimport {\n\tevaluatePlafondUntilActiveTranche,\n\tparseTranches,\n\tTrancheNodes,\n} from './trancheUtils'\n\nexport type GrilleNode = {\n\texplanation: {\n\t\tassiette: ASTNode\n\t\tmultiplicateur: ASTNode\n\t\ttranches: TrancheNodes\n\t}\n\tnodeKind: 'grille'\n}\n\nexport default function parseGrille(v, context): GrilleNode {\n\tconst explanation = {\n\t\tassiette: parse(v.assiette, context),\n\t\tmultiplicateur: v.multiplicateur\n\t\t\t? parse(v.multiplicateur, context)\n\t\t\t: defaultNode(1),\n\t\ttranches: parseTranches(v.tranches, context),\n\t}\n\treturn {\n\t\texplanation,\n\t\tnodeKind: 'grille',\n\t}\n}\n\nconst evaluate: EvaluationFunction<'grille'> = function (node) {\n\tconst evaluate = this.evaluateNode.bind(this)\n\tconst assiette = this.evaluateNode(node.explanation.assiette)\n\tconst multiplicateur = this.evaluateNode(node.explanation.multiplicateur)\n\n\tif (multiplicateur.nodeValue === 0) {\n\t\tthrow new PublicodesError(\n\t\t\t'EvaluationError',\n\t\t\t`Le multiplicateur ne peut pas être nul`,\n\t\t\t{\n\t\t\t\tdottedName: this.cache._meta.evaluationRuleStack[0],\n\t\t\t}\n\t\t)\n\t}\n\n\tconst tranches = evaluatePlafondUntilActiveTranche\n\t\t.call(this, {\n\t\t\tparsedTranches: node.explanation.tranches,\n\t\t\tassiette,\n\t\t\tmultiplicateur,\n\t\t})\n\t\t.map((tranche) => {\n\t\t\tif (tranche.isActive === false) {\n\t\t\t\treturn tranche\n\t\t\t}\n\t\t\tconst montant = evaluate(tranche.montant)\n\t\t\treturn {\n\t\t\t\t...tranche,\n\t\t\t\tmontant,\n\t\t\t\tnodeValue: montant.nodeValue,\n\t\t\t\tunit: montant.unit,\n\t\t\t\tmissingVariables: mergeAllMissing([montant, tranche]),\n\t\t\t}\n\t\t})\n\n\tlet activeTranches\n\tconst activeTranche = tranches.find((tranche) => tranche.isActive)\n\tif (activeTranche) {\n\t\tactiveTranches = [activeTranche]\n\t} else if (tranches[tranches.length - 1].isAfterActive === false) {\n\t\tactiveTranches = [{ nodeValue: false }]\n\t} else {\n\t\tactiveTranches = tranches.filter(\n\t\t\t(tranche) => tranche.isActive === undefined\n\t\t)\n\t}\n\n\tconst nodeValue = !activeTranches[0]\n\t\t? false\n\t\t: activeTranches[0].isActive === undefined\n\t\t? undefined\n\t\t: activeTranches[0].nodeValue\n\n\treturn {\n\t\t...node,\n\t\tnodeValue,\n\t\tmissingVariables: mergeAllMissing([\n\t\t\tassiette,\n\t\t\tmultiplicateur,\n\t\t\t...activeTranches,\n\t\t]),\n\t\texplanation: {\n\t\t\t...node.explanation,\n\t\t\tassiette,\n\t\t\tmultiplicateur,\n\t\t\ttranches,\n\t\t},\n\t\tunit: activeTranches[0]?.unit ?? undefined,\n\t} as any\n}\n\nregisterEvaluationFunction('grille', evaluate)\n","import { EvaluationFunction, PublicodesError } from '..'\nimport { EvaluatedNode, Unit } from '../AST/types'\nimport { registerEvaluationFunction } from '../evaluationFunctions'\nimport parse from '../parse'\nimport { Context } from '../parsePublicodes'\nimport { ReferenceNode } from '../reference'\nimport uniroot from '../uniroot'\nimport { undefinedNumberNode } from './inlineMecanism'\n\nexport type InversionNode = {\n\texplanation: {\n\t\truleToInverse: string\n\t\tinversionCandidates: Array<ReferenceNode>\n\t\tunit?: Unit\n\t}\n\tnodeKind: 'inversion'\n}\n\n// The user of the inversion mechanism has to define a list of \"inversion\n// candidates\". At runtime, the evaluation function of the mechanism will look\n// at the situation value of these candidates, and use the first one that is\n// defined as its \"goal\" for the inversion\n//\n// The game is then to find an input such as the computed value of the \"goal\" is\n// equal to its situation value, mathematically we search for the zero of the\n// function x → f(x) - goal. The iteration logic between each test is\n// implemented in the `uniroot` file.\nexport const evaluateInversion: EvaluationFunction<'inversion'> = function (\n\tnode\n) {\n\tconst inversionEngine = this.shallowCopy()\n\tif (\n\t\tthis.cache._meta.evaluationRuleStack\n\t\t\t.slice(1)\n\t\t\t.includes(node.explanation.ruleToInverse)\n\t) {\n\t\treturn {\n\t\t\t...undefinedNumberNode,\n\t\t\t...node,\n\t\t}\n\t}\n\tinversionEngine.cache._meta.parentRuleStack = [\n\t\t...this.cache._meta.parentRuleStack,\n\t]\n\tinversionEngine.cache._meta.evaluationRuleStack = [\n\t\t...this.cache._meta.evaluationRuleStack,\n\t]\n\tconst inversionGoal = node.explanation.inversionCandidates.find(\n\t\t(candidate) => {\n\t\t\tif (\n\t\t\t\tthis.cache._meta.evaluationRuleStack.includes(candidate.dottedName!)\n\t\t\t) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\tconst evaluation = inversionEngine.evaluateNode(\n\t\t\t\tinversionEngine.context.parsedRules[\n\t\t\t\t\t`${candidate.dottedName} . $SITUATION`\n\t\t\t\t]\n\t\t\t)\n\t\t\treturn (\n\t\t\t\ttypeof evaluation.nodeValue === 'number' &&\n\t\t\t\t!(candidate.dottedName! in evaluation.missingVariables)\n\t\t\t)\n\t\t}\n\t)\n\n\tif (inversionGoal === undefined) {\n\t\treturn {\n\t\t\t...node,\n\t\t\tnodeValue: undefined,\n\t\t\tmissingVariables: {\n\t\t\t\t...Object.fromEntries(\n\t\t\t\t\tnode.explanation.inversionCandidates.map((candidate) => [\n\t\t\t\t\t\tcandidate.dottedName,\n\t\t\t\t\t\t1,\n\t\t\t\t\t])\n\t\t\t\t),\n\t\t\t\t[node.explanation.ruleToInverse]: 1,\n\t\t\t},\n\t\t}\n\t}\n\tconst evaluatedInversionGoal = inversionEngine.evaluateNode(inversionGoal)\n\tlet numberOfIteration = 0\n\n\tinversionEngine.setSituation(\n\t\t{\n\t\t\t[inversionGoal.dottedName!]: undefinedNumberNode,\n\t\t},\n\t\t{ keepPreviousSituation: true }\n\t)\n\n\tlet lastEvaluation: EvaluatedNode\n\tconst evaluateWithValue = (n: number) => {\n\t\tnumberOfIteration++\n\t\tinversionEngine.setSituation(\n\t\t\t{\n\t\t\t\t[node.explanation.ruleToInverse]: {\n\t\t\t\t\tnodeValue: n,\n\t\t\t\t\tnodeKind: 'constant',\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\tunit: evaluatedInversionGoal.unit,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ keepPreviousSituation: true }\n\t\t)\n\n\t\tlastEvaluation = inversionEngine.evaluateNode(inversionGoal)\n\t\treturn lastEvaluation\n\t}\n\n\tconst goal = evaluatedInversionGoal.nodeValue as number\n\tlet nodeValue: number | undefined | undefined = undefined\n\n\t// We do some blind attempts here to avoid using the default minimum and\n\t// maximum of +/- 10^8 that are required by the `uniroot` function. For the\n\t// first attempt we use the goal value as a very rough first approximation.\n\t// For the second attempt we do a proportionality coefficient with the result\n\t// from the first try and the goal value. The two attempts are then used in\n\t// the following way:\n\t// - if both results are `undefined` we assume that the inversion is impossible\n\t//   because of missing variables\n\t// - otherwise, we calculate the missing variables of the node as the union of\n\t//   the missings variables of our two attempts\n\t// - we cache the result of our two attempts so that `uniroot` doesn't\n\t//   recompute them\n\tconst x1 = goal\n\tconst y1Node = evaluateWithValue(x1)\n\tconst y1 = y1Node.nodeValue as number\n\tconst coeff = y1 > goal ? 0.9 : 1.2\n\tconst x2 = y1 !== undefined ? (x1 * goal * coeff) / y1 : 2000\n\tconst y2Node = evaluateWithValue(x2)\n\tconst y2 = y2Node.nodeValue as number\n\n\tconst maxIterations = this.context.inversionMaxIterations ?? 10\n\n\tif (y1 !== undefined || y2 !== undefined) {\n\t\t// The `uniroot` function parameter. It will be called with its `min` and\n\t\t// `max` arguments, so we can use our cached nodes if the function is called\n\t\t// with the already computed x1 or x2.\n\t\tconst test = (x: number): number => {\n\t\t\tconst y = x === x1 ? y1 : x === x2 ? y2 : evaluateWithValue(x).nodeValue\n\t\t\treturn (y as number) - goal\n\t\t}\n\n\t\tconst defaultMin = -1000000\n\t\tconst defaultMax = 100000000\n\t\tconst nearestBelowGoal =\n\t\t\ty2 !== undefined && y2 < goal && (y2 > y1 || y1 > goal)\n\t\t\t\t? x2\n\t\t\t\t: y1 !== undefined && y1 < goal && (y1 > y2 || y2 > goal)\n\t\t\t\t? x1\n\t\t\t\t: defaultMin\n\t\tconst nearestAboveGoal =\n\t\t\ty2 !== undefined && y2 > goal && (y2 < y1 || y1 < goal)\n\t\t\t\t? x2\n\t\t\t\t: y1 !== undefined && y1 > goal && (y1 < y2 || y2 < goal)\n\t\t\t\t? x1\n\t\t\t\t: defaultMax\n\n\t\tnodeValue = uniroot(\n\t\t\ttest,\n\t\t\tnearestBelowGoal,\n\t\t\tnearestAboveGoal,\n\t\t\t0.1,\n\t\t\tmaxIterations,\n\t\t\t1\n\t\t)\n\t}\n\n\tif (nodeValue == undefined) {\n\t\tthis.cache.inversionFail = true\n\t}\n\n\t// Uncomment to display the two attempts and their result\n\t// console.table([\n\t// \t{ x: x1, y: y1 },\n\t// \t{ x: x2, y: y2 },\n\t// ])\n\t// console.log('iteration inversion:', numberOfIteration)\n\n\t;(lastEvaluation!.traversedVariables ?? []).forEach((v) =>\n\t\tthis.cache._meta.traversedVariablesStack[0].add(v)\n\t)\n\treturn {\n\t\t...node,\n\t\tnodeValue,\n\t\tunit: evaluatedInversionGoal.unit,\n\t\texplanation: {\n\t\t\t...node.explanation,\n\t\t\tinversionGoal,\n\t\t\tnumberOfIteration,\n\t\t},\n\t\tmissingVariables: lastEvaluation!.missingVariables,\n\t}\n}\n\nexport const mecanismInversion = (v, context: Context) => {\n\tif (!v.avec) {\n\t\tthrow new PublicodesError(\n\t\t\t'SyntaxError',\n\t\t\t\"Une formule d'inversion doit préciser _avec_ quoi on peut inverser la variable\",\n\t\t\t{ dottedName: context.dottedName }\n\t\t)\n\t}\n\treturn {\n\t\texplanation: {\n\t\t\truleToInverse: context.dottedName,\n\t\t\tinversionCandidates: v.avec.map((node) => ({\n\t\t\t\t...parse(node, context),\n\t\t\t})),\n\t\t},\n\t\tnodeKind: 'inversion',\n\t} as InversionNode\n}\n\nregisterEvaluationFunction('inversion', evaluateInversion)\n","import { PublicodesExpression } from '..'\nimport {\n\tcreateParseInlinedMecanismWithArray,\n\tnotApplicableNode,\n} from './inlineMecanism'\n\nexport const parseMaximumDe = createParseInlinedMecanismWithArray(\n\t'le maximum de',\n\t{\n\t\tvaleur: { type: 'liste' },\n\t},\n\t({ valeur }) =>\n\t\t(valeur as Array<PublicodesExpression>).reduce(\n\t\t\t(acc, value) => ({\n\t\t\t\tcondition: {\n\t\t\t\t\tsi: {\n\t\t\t\t\t\t'est non applicable': '$INTERNAL valeur',\n\t\t\t\t\t},\n\t\t\t\t\talors: '$INTERNAL acc',\n\t\t\t\t\tsinon: {\n\t\t\t\t\t\tcondition: {\n\t\t\t\t\t\t\tsi: {\n\t\t\t\t\t\t\t\tou: [\n\t\t\t\t\t\t\t\t\t{ 'est non applicable': '$INTERNAL acc' },\n\t\t\t\t\t\t\t\t\t{ '>': ['$INTERNAL valeur', '$INTERNAL acc'] },\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\talors: '$INTERNAL valeur',\n\t\t\t\t\t\t\tsinon: '$INTERNAL acc',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tavec: {\n\t\t\t\t\t'[privé] $INTERNAL valeur': value,\n\t\t\t\t\t'[privé] $INTERNAL acc': acc,\n\t\t\t\t},\n\t\t\t}),\n\t\t\tnotApplicableNode\n\t\t)\n)\n\nexport const parseMinimumDe = createParseInlinedMecanismWithArray(\n\t'le minimum de',\n\t{\n\t\tvaleur: { type: 'liste' },\n\t},\n\t({ valeur }) =>\n\t\t(valeur as Array<PublicodesExpression>).reduce(\n\t\t\t(acc, value) => ({\n\t\t\t\tcondition: {\n\t\t\t\t\tsi: {\n\t\t\t\t\t\t'est non applicable': '$INTERNAL valeur',\n\t\t\t\t\t},\n\t\t\t\t\talors: '$INTERNAL acc',\n\t\t\t\t\tsinon: {\n\t\t\t\t\t\tcondition: {\n\t\t\t\t\t\t\tsi: {\n\t\t\t\t\t\t\t\tou: [\n\t\t\t\t\t\t\t\t\t{ 'est non applicable': '$INTERNAL acc' },\n\t\t\t\t\t\t\t\t\t{ '<': ['$INTERNAL valeur', '$INTERNAL acc'] },\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\talors: '$INTERNAL valeur',\n\t\t\t\t\t\t\tsinon: '$INTERNAL acc',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tavec: {\n\t\t\t\t\t'[privé] $INTERNAL valeur': value,\n\t\t\t\t\t'[privé] $INTERNAL acc': acc,\n\t\t\t\t},\n\t\t\t}),\n\t\t\tnotApplicableNode\n\t\t)\n)\n","import { PublicodesExpression } from '..'\nimport {\n\tcreateParseInlinedMecanismWithArray,\n\tnotApplicableNode,\n} from './inlineMecanism'\n\nexport function reduceToSumNodes(\n\tvaleurs: Array<PublicodesExpression>\n): PublicodesExpression {\n\treturn valeurs\n\t\t.reverse()\n\t\t.reduce((acc, value) => ({ '+': [value, acc] }), notApplicableNode)\n}\n\nexport default createParseInlinedMecanismWithArray(\n\t'somme',\n\t{\n\t\tvaleur: { type: 'liste' },\n\t},\n\t({ valeur }) => reduceToSumNodes([...(valeur as Array<PublicodesExpression>)])\n)\n","import { PublicodesExpression } from '..'\nimport { createParseInlinedMecanismWithArray } from './inlineMecanism'\nimport { reduceToSumNodes } from './somme'\n\nexport default createParseInlinedMecanismWithArray(\n\t'moyenne',\n\t{\n\t\tvaleur: { type: 'liste' },\n\t},\n\t({ valeur }) => {\n\t\tconst valeurs = [...(valeur as Array<PublicodesExpression>)]\n\n\t\treturn {\n\t\t\t'/': [\n\t\t\t\treduceToSumNodes(valeurs),\n\t\t\t\treduceToSumNodes(valeurs.map(oneIfApplicable)),\n\t\t\t],\n\t\t}\n\t}\n)\n\nfunction oneIfApplicable(exp: PublicodesExpression): PublicodesExpression {\n\treturn {\n\t\t'applicable si': { 'est applicable': exp },\n\t\tvaleur: 1,\n\t}\n}\n","import { createParseInlinedMecanism, notApplicableNode } from './inlineMecanism'\n\nexport default createParseInlinedMecanism(\n\t'non applicable si',\n\t{\n\t\t'non applicable si': {},\n\t\tvaleur: {},\n\t},\n\t{\n\t\tcondition: {\n\t\t\tsi: 'non applicable si = non',\n\t\t\talors: 'valeur',\n\t\t\tsinon: notApplicableNode,\n\t\t},\n\t}\n)\n","import { ASTNode } from '../AST/types'\nimport { registerEvaluationFunction } from '../evaluationFunctions'\nimport parse from '../parse'\nimport { Context } from '../parsePublicodes'\n\nexport type PossibilityNode = {\n\texplanation: Array<ASTNode>\n\t'choix obligatoire'?: 'oui' | 'non'\n\tcontext: string\n\tnodeKind: 'une possibilité'\n}\n// TODO : This isn't a real mecanism, cf. #963\nexport const mecanismOnePossibility = (v, context: Context) => {\n\tif (Array.isArray(v)) {\n\t\tv = {\n\t\t\tpossibilités: v,\n\t\t}\n\t}\n\treturn {\n\t\t...v,\n\t\texplanation: v.possibilités.map((p) => parse(p, context)),\n\t\tcontext: context.dottedName,\n\t\tnodeKind: 'une possibilité',\n\t} as PossibilityNode\n}\nregisterEvaluationFunction<'une possibilité'>('une possibilité', (node) => ({\n\t...node,\n\tmissingVariables: { [node.context]: 1 },\n\tnodeValue: undefined,\n}))\n","import { EvaluationFunction, PublicodesError } from '..'\nimport { ASTNode, EvaluatedNode } from '../AST/types'\nimport { convertToDate } from '../date'\nimport { warning } from '../error'\nimport { registerEvaluationFunction } from '../evaluationFunctions'\nimport { mergeAllMissing } from '../evaluationUtils'\nimport { convertNodeToUnit } from '../nodeUnits'\nimport parse from '../parse'\nimport { inferUnit, serializeUnit } from '../units'\n\nconst knownOperations = {\n\t'*': [(a, b) => a * b, '×'],\n\t'/': [(a, b) => a / b, '∕'],\n\t'+': [(a, b) => a + b],\n\t'-': [(a, b) => a - b, '−'],\n\t'<': [(a, b) => a < b],\n\t'<=': [(a, b) => a <= b, '≤'],\n\t'>': [(a, b) => a > b],\n\t'>=': [(a, b) => a >= b, '≥'],\n\t'=': [(a, b) => (a ?? false) === (b ?? false)],\n\t'!=': [(a, b) => (a ?? false) !== (b ?? false), '≠'],\n\tet: [(a, b) => (a ?? false) && (b ?? false)],\n\tou: [(a, b) => (a ?? false) || (b ?? false)],\n} as const\n\nexport type OperationNode = {\n\tnodeKind: 'operation'\n\texplanation: [ASTNode, ASTNode]\n\toperationKind: keyof typeof knownOperations\n\toperator: string\n}\n\nconst parseOperation = (k, symbol) => (v, context) => {\n\tconst explanation = v.map((node) => parse(node, context))\n\n\treturn {\n\t\t...v,\n\t\tnodeKind: 'operation',\n\t\toperationKind: k,\n\t\toperator: symbol || k,\n\t\texplanation,\n\t} as OperationNode\n}\n\nconst evaluate: EvaluationFunction<'operation'> = function (node) {\n\tlet node1 = this.evaluateNode(node.explanation[0])\n\n\tlet evaluatedNode: EvaluatedNode & OperationNode = {\n\t\t...node,\n\t\tmissingVariables: {},\n\t} as EvaluatedNode & OperationNode\n\n\t// LAZY EVALUATION\n\tif (\n\t\t(node1.nodeValue === null &&\n\t\t\t['<', '>', '<=', '>=', '/', '*', '-', 'et'].includes(\n\t\t\t\tnode.operationKind\n\t\t\t)) ||\n\t\t(node1.nodeValue === 0 && ['/', '*'].includes(node.operationKind)) ||\n\t\t(node1.nodeValue === false && node.operationKind === 'et') ||\n\t\t(node1.nodeValue === true && node.operationKind === 'ou')\n\t) {\n\t\treturn {\n\t\t\t...evaluatedNode,\n\t\t\tnodeValue: node.operationKind === 'et' ? false : node1.nodeValue,\n\t\t\tmissingVariables: node1.missingVariables,\n\t\t}\n\t}\n\n\tlet node2 = this.evaluateNode(node.explanation[1])\n\tevaluatedNode.explanation = [node1, node2]\n\n\tif (node.operationKind === '/' && node2.nodeValue === 0) {\n\t\tthrow new PublicodesError('EvaluationError', `Division by zero`, {\n\t\t\tdottedName: this.cache._meta.evaluationRuleStack[0],\n\t\t})\n\t}\n\n\t// LAZY EVALUATION 2\n\tif (\n\t\t(node2.nodeValue === null &&\n\t\t\t['<', '>', '<=', '>=', '/', '*', 'et'].includes(node.operationKind)) ||\n\t\t(node2.nodeValue === 0 && ['*'].includes(node.operationKind)) ||\n\t\t(node2.nodeValue === false && node.operationKind === 'et') ||\n\t\t(node2.nodeValue === true && node.operationKind === 'ou')\n\t) {\n\t\treturn {\n\t\t\t...evaluatedNode,\n\t\t\tnodeValue: node.operationKind === 'et' ? false : node2.nodeValue,\n\t\t\tmissingVariables: node2.missingVariables,\n\t\t}\n\t}\n\n\tevaluatedNode.missingVariables = mergeAllMissing([node1, node2])\n\n\tif (node1.nodeValue === undefined || node2.nodeValue === undefined) {\n\t\tevaluatedNode = {\n\t\t\t...evaluatedNode,\n\t\t\tnodeValue: undefined,\n\t\t}\n\t}\n\n\tconst isAdditionOrSubstractionWithPercentage =\n\t\t['+', '-'].includes(node.operationKind) &&\n\t\tserializeUnit(node2.unit) === '%' &&\n\t\tserializeUnit(node1.unit) !== '%'\n\n\tif (\n\t\t!('nodeValue' in evaluatedNode) &&\n\t\t!['/', '*'].includes(node.operationKind) &&\n\t\t!isAdditionOrSubstractionWithPercentage\n\t) {\n\t\ttry {\n\t\t\tif (node1.unit && 'unit' in node2) {\n\t\t\t\tnode2 = convertNodeToUnit(node1.unit, node2)\n\t\t\t} else if (node2.unit) {\n\t\t\t\tnode1 = convertNodeToUnit(node2.unit, node1)\n\t\t\t}\n\t\t} catch (e) {\n\t\t\twarning(\n\t\t\t\tthis.context.logger,\n\t\t\t\t`Dans l'expression '${\n\t\t\t\t\tnode.operationKind\n\t\t\t\t}', la partie gauche (unité: ${serializeUnit(\n\t\t\t\t\tnode1.unit\n\t\t\t\t)}) n'est pas compatible avec la partie droite (unité: ${serializeUnit(\n\t\t\t\t\tnode2.unit\n\t\t\t\t)})`,\n\t\t\t\t{ dottedName: this.cache._meta.evaluationRuleStack[0] },\n\t\t\t\te\n\t\t\t)\n\t\t}\n\t}\n\n\tconst operatorFunction = knownOperations[node.operationKind][0]\n\n\tconst a = node1.nodeValue as string | boolean | null\n\tconst b = node2.nodeValue as string | boolean | null\n\n\tevaluatedNode.nodeValue =\n\t\t'nodeValue' in evaluatedNode\n\t\t\t? evaluatedNode.nodeValue\n\t\t\t: ['<', '>', '<=', '>=', '*', '/'].includes(node.operationKind) &&\n\t\t\t  node2.nodeValue === null\n\t\t\t? null\n\t\t\t: [a, b].every(\n\t\t\t\t\t(value) =>\n\t\t\t\t\t\ttypeof value === 'string' &&\n\t\t\t\t\t\tvalue.match?.(/^[\\d]{2}\\/[\\d]{2}\\/[\\d]{4}$/)\n\t\t\t  )\n\t\t\t? operatorFunction(convertToDate(a as string), convertToDate(b as string))\n\t\t\t: operatorFunction(a, b)\n\n\tif (\n\t\tnode.operationKind === '*' &&\n\t\tinferUnit('*', [node1.unit, node2.unit])?.numerators.includes('%')\n\t) {\n\t\tlet unit = inferUnit('*', [node1.unit, node2.unit])\n\t\tconst nodeValue = evaluatedNode.nodeValue\n\t\treturn {\n\t\t\t...evaluatedNode,\n\t\t\tnodeValue: typeof nodeValue === 'number' ? nodeValue / 100 : nodeValue,\n\t\t\tunit: inferUnit('*', [unit, { numerators: [], denominators: ['%'] }]),\n\t\t}\n\t}\n\n\t// Addition or substraction of scalar with a percentage is a multiplication\n\t// TODO : this logic should be handle statically by changing sum with percentage into product.\n\t// It can be done when we'll have a sound type/unit inference\n\tif (isAdditionOrSubstractionWithPercentage) {\n\t\tlet unit = inferUnit('*', [node1.unit, node2.unit])\n\t\treturn {\n\t\t\t...evaluatedNode,\n\t\t\tnodeValue:\n\t\t\t\ttypeof node1.nodeValue === 'number' &&\n\t\t\t\ttypeof node2.nodeValue === 'number'\n\t\t\t\t\t? node1.nodeValue *\n\t\t\t\t\t  (1 +\n\t\t\t\t\t\t\t(node2.nodeValue / 100) * (node.operationKind === '-' ? -1 : 1))\n\t\t\t\t\t: evaluatedNode.nodeValue,\n\t\t\tunit: inferUnit('*', [unit, { numerators: [], denominators: ['%'] }]),\n\t\t}\n\t}\n\n\tif (\n\t\tnode.operationKind === '*' ||\n\t\tnode.operationKind === '/' ||\n\t\tnode.operationKind === '-' ||\n\t\tnode.operationKind === '+'\n\t) {\n\t\treturn {\n\t\t\t...evaluatedNode,\n\t\t\tunit: inferUnit(node.operationKind, [node1.unit, node2.unit]),\n\t\t}\n\t}\n\n\treturn evaluatedNode\n}\n\nregisterEvaluationFunction('operation', evaluate)\n\nconst operationDispatch = Object.fromEntries(\n\tObject.entries(knownOperations).map(([k, [f, symbol]]) => [\n\t\tk,\n\t\tparseOperation(k, symbol),\n\t])\n)\n\nexport default operationDispatch\n","import { createParseInlinedMecanism } from './inlineMecanism'\n\nexport default createParseInlinedMecanism(\n\t'par défaut',\n\t{\n\t\t'par défaut': {},\n\t\tvaleur: {},\n\t},\n\t{\n\t\tcondition: {\n\t\t\tsi: { 'est non défini': 'valeur' },\n\t\t\talors: 'par défaut',\n\t\t\tsinon: 'valeur',\n\t\t},\n\t}\n)\n","import { createParseInlinedMecanism } from './inlineMecanism'\n\nexport default createParseInlinedMecanism(\n\t'plafond',\n\t{\n\t\tplafond: {},\n\t\tvaleur: {},\n\t},\n\t{\n\t\tcondition: {\n\t\t\tsi: { et: ['plafond != non', 'valeur > plafond'] },\n\t\t\talors: 'plafond',\n\t\t\tsinon: 'valeur',\n\t\t},\n\t}\n)\n","import { createParseInlinedMecanism } from './inlineMecanism'\n\nexport default createParseInlinedMecanism(\n\t'plancher',\n\t{\n\t\tplancher: {},\n\t\tvaleur: {},\n\t},\n\t{\n\t\tcondition: {\n\t\t\tsi: { et: ['plancher != non', 'valeur < plancher'] },\n\t\t\talors: 'plancher',\n\t\t\tsinon: 'valeur',\n\t\t},\n\t}\n)\n","import { createParseInlinedMecanism, notApplicableNode } from './inlineMecanism'\n\nexport default createParseInlinedMecanism(\n\t'produit',\n\t{\n\t\tassiette: {},\n\t\ttaux: { 'par défaut': '100%' },\n\t\tfacteur: { 'par défaut': 1 },\n\t\tplafond: {\n\t\t\t'par défaut': notApplicableNode,\n\t\t},\n\t},\n\t{\n\t\t'*': [\n\t\t\t{ '*': ['taux', 'facteur'] },\n\t\t\t{ valeur: 'assiette', plafond: 'plafond' },\n\t\t],\n\t\t\"simplifier l'unité\": 'oui',\n\t}\n)\n","import { EvaluationFunction } from '..'\nimport { ASTNode } from '../AST/types'\nimport { registerEvaluationFunction } from '../evaluationFunctions'\nimport parse from '../parse'\nimport { ReferenceNode } from '../reference'\nimport { serializeUnit } from '../units'\nimport { notApplicableNode } from './inlineMecanism'\n\nexport type RecalculNode = {\n\texplanation: {\n\t\trecalculNode: ASTNode\n\t\tamendedSituation: Array<[ReferenceNode, ASTNode]>\n\t\tsubEngineId: number\n\t}\n\tnodeKind: 'recalcul'\n}\n\nconst evaluateRecalcul: EvaluationFunction<'recalcul'> = function (node) {\n\tif (this.cache._meta.currentRecalcul === node.explanation.recalculNode) {\n\t\treturn { ...notApplicableNode, ...node }\n\t}\n\tconst amendedSituation = Object.fromEntries(\n\t\tnode.explanation.amendedSituation\n\t\t\t.filter(([originRule, replacement]) => {\n\t\t\t\tconst originRuleEvaluation = this.evaluateNode(originRule)\n\t\t\t\tconst replacementEvaluation = this.evaluateNode(replacement)\n\n\t\t\t\treturn (\n\t\t\t\t\toriginRuleEvaluation.nodeValue !== replacementEvaluation.nodeValue ||\n\t\t\t\t\tserializeUnit(originRuleEvaluation.unit) !==\n\t\t\t\t\t\tserializeUnit(replacementEvaluation.unit)\n\t\t\t\t)\n\t\t\t})\n\t\t\t.map(\n\t\t\t\t([originRule, replacement]) =>\n\t\t\t\t\t[originRule.dottedName, replacement] as [string, ASTNode]\n\t\t\t)\n\t)\n\n\tlet engine = this\n\tif (Object.keys(amendedSituation).length) {\n\t\tengine = this.shallowCopy().setSituation(amendedSituation, {\n\t\t\tkeepPreviousSituation: true,\n\t\t})\n\t\tengine.subEngineId = this.subEngines.length\n\n\t\t// The value of the replaced ruled are computed **without the replacement active**\n\t\tObject.values(amendedSituation).forEach((value) =>\n\t\t\tengine.cache.nodes.set(value, this.evaluate(value))\n\t\t)\n\n\t\tthis.subEngines.push(engine)\n\t}\n\tengine.cache._meta.currentRecalcul = node.explanation.recalculNode\n\tconst evaluatedNode = engine.evaluateNode(node.explanation.recalculNode)\n\n\tdelete engine.cache._meta.currentRecalcul\n\n\treturn {\n\t\t...node,\n\t\tnodeValue: evaluatedNode.nodeValue,\n\t\texplanation: {\n\t\t\t...node.explanation,\n\t\t\trecalcul: evaluatedNode,\n\t\t\tsubEngineId: engine.subEngineId as number,\n\t\t},\n\t\tmissingVariables: evaluatedNode.missingVariables,\n\t\t...('unit' in evaluatedNode && { unit: evaluatedNode.unit }),\n\t}\n}\n\nexport const mecanismRecalcul = (v, context) => {\n\tconst amendedSituation = Object.keys(v.avec).map((dottedName) => [\n\t\tparse(dottedName, context),\n\t\tparse(v.avec[dottedName], context),\n\t])\n\n\tconst recalculNode = parse(v.règle ?? context.dottedName, context)\n\n\treturn {\n\t\texplanation: {\n\t\t\trecalculNode,\n\t\t\tamendedSituation,\n\t\t},\n\t\tnodeKind: 'recalcul',\n\t} as RecalculNode\n}\n\nregisterEvaluationFunction('recalcul', evaluateRecalcul)\n","import { EvaluationFunction } from '..'\nimport { ASTNode } from '../AST/types'\nimport { registerEvaluationFunction } from '../evaluationFunctions'\nimport parse from '../parse'\nimport { Context } from '../parsePublicodes'\nimport uniroot from '../uniroot'\nimport { undefinedNumberNode } from './inlineMecanism'\n\nexport type RésoudreRéférenceCirculaireNode = {\n\texplanation: {\n\t\truleToSolve: string\n\t\tvaleur: ASTNode\n\t}\n\tnodeKind: 'résoudre référence circulaire'\n}\n\nexport const evaluateRésoudreRéférenceCirculaire: EvaluationFunction<'résoudre référence circulaire'> =\n\tfunction (node) {\n\t\tif (\n\t\t\tthis.cache._meta.evaluationRuleStack\n\t\t\t\t.slice(1)\n\t\t\t\t.includes(node.explanation.ruleToSolve)\n\t\t) {\n\t\t\treturn {\n\t\t\t\t...undefinedNumberNode,\n\t\t\t\t...node,\n\t\t\t}\n\t\t}\n\n\t\tlet numberOfIterations = 0\n\t\tconst calculationEngine = this.shallowCopy()\n\t\tcalculationEngine.cache._meta.parentRuleStack = [\n\t\t\t...this.cache._meta.parentRuleStack,\n\t\t]\n\t\tcalculationEngine.cache._meta.evaluationRuleStack = [\n\t\t\t...this.cache._meta.evaluationRuleStack,\n\t\t]\n\t\tconst maxIterations = this.context.inversionMaxIterations ?? 25\n\n\t\tconst evaluateWithValue = (n: number) => {\n\t\t\tnumberOfIterations++\n\t\t\tcalculationEngine.setSituation(\n\t\t\t\t{\n\t\t\t\t\t[node.explanation.ruleToSolve]: {\n\t\t\t\t\t\t...undefinedNumberNode,\n\t\t\t\t\t\tnodeValue: n,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{ keepPreviousSituation: true }\n\t\t\t)\n\n\t\t\treturn calculationEngine.evaluateNode(node.explanation.valeur)\n\t\t}\n\n\t\tconst inversionFailed = Symbol('inversion failed')\n\n\t\tlet nodeValue: number | undefined | typeof inversionFailed = inversionFailed\n\n\t\tconst x0 = 1\n\t\tlet valeur = evaluateWithValue(x0)\n\t\tconst y0 = valeur.nodeValue as number\n\t\tconst unit = valeur.unit\n\t\tlet i = 0\n\t\tif (y0 !== undefined) {\n\t\t\t// The `uniroot` function parameter. It will be called with its `min` and\n\t\t\t// `max` arguments, so we can use our cached nodes if the function is called\n\t\t\t// with the already computed x1 or x2.\n\t\t\tconst test = (x: number): number => {\n\t\t\t\tif (x === x0) {\n\t\t\t\t\treturn y0 - x0\n\t\t\t\t}\n\t\t\t\tvaleur = evaluateWithValue(x)\n\t\t\t\tconst y = valeur.nodeValue\n\t\t\t\ti++\n\t\t\t\treturn (y as number) - x\n\t\t\t}\n\n\t\t\tconst defaultMin = -1_000_000\n\t\t\tconst defaultMax = 100_000_000\n\n\t\t\tnodeValue = uniroot(test, defaultMin, defaultMax, 0.5, maxIterations, 2)\n\t\t}\n\n\t\tif (nodeValue === inversionFailed) {\n\t\t\tnodeValue = undefined\n\t\t\tthis.cache.inversionFail = true\n\t\t}\n\t\tif (nodeValue !== undefined) {\n\t\t\tvaleur = evaluateWithValue(nodeValue)\n\t\t}\n\t\treturn {\n\t\t\t...node,\n\t\t\tunit,\n\t\t\tnodeValue,\n\t\t\texplanation: {\n\t\t\t\t...node.explanation,\n\t\t\t\tvaleur,\n\t\t\t\tnumberOfIterations,\n\t\t\t},\n\t\t\tmissingVariables: valeur.missingVariables,\n\t\t}\n\t}\n\nexport default function parseRésoudreRéférenceCirculaire(v, context: Context) {\n\treturn {\n\t\texplanation: {\n\t\t\truleToSolve: context.dottedName,\n\t\t\tvaleur: parse(v.valeur, context),\n\t\t},\n\t\tnodeKind: 'résoudre référence circulaire',\n\t} as RésoudreRéférenceCirculaireNode\n}\n\nparseRésoudreRéférenceCirculaire.nom = 'résoudre la référence circulaire'\n\nregisterEvaluationFunction(\n\t'résoudre référence circulaire',\n\tevaluateRésoudreRéférenceCirculaire\n)\n","import { ASTNode } from '../AST/types'\nimport { registerEvaluationFunction } from '../evaluationFunctions'\nimport parse from '../parse'\nimport { convertUnit, simplifyUnit } from '../units'\n\nexport type SimplifierUnitéNode = {\n\texplanation: ASTNode\n\tnodeKind: 'simplifier unité'\n}\n\nexport default function parseSimplifierUnité(v, context): SimplifierUnitéNode {\n\tconst explanation = parse(v.valeur, context)\n\treturn {\n\t\texplanation,\n\t\tnodeKind: 'simplifier unité',\n\t}\n}\n\nparseSimplifierUnité.nom = \"simplifier l'unité\" as const\n\nregisterEvaluationFunction('simplifier unité', function evaluate(node) {\n\tconst valeur = this.evaluateNode(node.explanation)\n\tconst nodeValue = valeur.nodeValue\n\tconst defaultReturn = {\n\t\t...valeur,\n\t\t...node,\n\t\texplanation: valeur,\n\t}\n\tif (nodeValue == null) {\n\t\treturn defaultReturn\n\t}\n\n\tif (!valeur.unit) {\n\t\treturn {\n\t\t\t...defaultReturn,\n\t\t\tunit: valeur.unit,\n\t\t}\n\t}\n\tconst unit = simplifyUnit(valeur.unit)\n\n\treturn {\n\t\t...defaultReturn,\n\t\tnodeValue:\n\t\t\ttypeof nodeValue === 'number'\n\t\t\t\t? convertUnit(valeur.unit, unit, nodeValue)\n\t\t\t\t: nodeValue,\n\t\tunit,\n\t}\n})\n","import { createParseInlinedMecanism } from './inlineMecanism'\n\nexport default createParseInlinedMecanism(\n\t'dans la situation',\n\t{\n\t\tvaleur: {},\n\t\t'dans la situation': {},\n\t},\n\t{\n\t\tcondition: {\n\t\t\tsi: { 'est non défini': 'dans la situation' },\n\t\t\talors: 'valeur',\n\t\t\tsinon: 'dans la situation',\n\t\t},\n\t}\n)\n","import { EvaluationFunction, PublicodesError } from '..'\nimport { ASTNode } from '../AST/types'\nimport { registerEvaluationFunction } from '../evaluationFunctions'\nimport { defaultNode, mergeAllMissing } from '../evaluationUtils'\nimport { convertNodeToUnit } from '../nodeUnits'\nimport parse from '../parse'\nimport { parseUnit } from '../units'\nimport {\n\tevaluatePlafondUntilActiveTranche,\n\tparseTranches,\n\tTrancheNodes,\n} from './trancheUtils'\n\nexport type TauxProgressifNode = {\n\texplanation: {\n\t\ttranches: TrancheNodes\n\t\tmultiplicateur: ASTNode\n\t\tassiette: ASTNode\n\t}\n\tnodeKind: 'taux progressif'\n}\nexport default function parseTauxProgressif(v, context): TauxProgressifNode {\n\tconst explanation = {\n\t\tassiette: parse(v.assiette, context),\n\t\tmultiplicateur: v.multiplicateur\n\t\t\t? parse(v.multiplicateur, context)\n\t\t\t: defaultNode(1),\n\t\ttranches: parseTranches(v.tranches, context),\n\t} as TauxProgressifNode['explanation']\n\treturn {\n\t\texplanation,\n\t\tnodeKind: 'taux progressif',\n\t}\n}\n\nconst evaluate: EvaluationFunction<'taux progressif'> = function (node) {\n\tconst evaluate = this.evaluateNode.bind(this)\n\tconst assiette = this.evaluateNode(node.explanation.assiette)\n\tconst multiplicateur = this.evaluateNode(node.explanation.multiplicateur)\n\tif (multiplicateur.nodeValue === 0) {\n\t\tthrow new PublicodesError('EvaluationError', `Division by zero`, {\n\t\t\tdottedName: '',\n\t\t})\n\t}\n\tconst tranches = evaluatePlafondUntilActiveTranche.call(this, {\n\t\tparsedTranches: node.explanation.tranches,\n\t\tassiette,\n\t\tmultiplicateur,\n\t})\n\n\tconst evaluatedNode = {\n\t\t...node,\n\t\texplanation: {\n\t\t\ttranches,\n\t\t\tassiette,\n\t\t\tmultiplicateur,\n\t\t},\n\t\tunit: parseUnit('%'),\n\t}\n\n\tconst lastTranche = tranches[tranches.length - 1]\n\tif (\n\t\ttranches.every(({ isActive }) => isActive === false) ||\n\t\t(lastTranche.isActive && lastTranche.plafond.nodeValue === Infinity)\n\t) {\n\t\tconst taux = convertNodeToUnit(parseUnit('%'), evaluate(lastTranche.taux))\n\t\tconst { nodeValue, missingVariables } = taux\n\t\tlastTranche.taux = taux\n\t\tlastTranche.nodeValue = nodeValue\n\t\tlastTranche.missingVariables = missingVariables\n\t\treturn {\n\t\t\t...evaluatedNode,\n\t\t\tnodeValue,\n\t\t\tmissingVariables,\n\t\t}\n\t}\n\n\tif (\n\t\ttranches.every(({ isActive }) => isActive !== true) ||\n\t\ttypeof assiette.nodeValue !== 'number'\n\t) {\n\t\treturn {\n\t\t\t...evaluatedNode,\n\t\t\tnodeValue: undefined,\n\t\t\tmissingVariables: mergeAllMissing(tranches),\n\t\t}\n\t}\n\n\tconst activeTrancheIndex = tranches.findIndex(\n\t\t({ isActive }) => isActive === true\n\t)\n\tconst activeTranche = tranches[activeTrancheIndex]\n\tactiveTranche.taux = convertNodeToUnit(\n\t\tparseUnit('%'),\n\t\tevaluate(activeTranche.taux)\n\t)\n\n\tconst previousTranche = tranches[activeTrancheIndex - 1]\n\tif (previousTranche) {\n\t\tpreviousTranche.taux = convertNodeToUnit(\n\t\t\tparseUnit('%'),\n\t\t\tevaluate(previousTranche.taux)\n\t\t)\n\t\tpreviousTranche.isActive = true\n\t}\n\tconst previousTaux = previousTranche\n\t\t? previousTranche.taux\n\t\t: activeTranche.taux\n\tconst calculationValues = [previousTaux, activeTranche.taux]\n\tif (calculationValues.some((n) => n.nodeValue === undefined)) {\n\t\tactiveTranche.nodeValue = undefined\n\t\treturn {\n\t\t\t...evaluatedNode,\n\t\t\tnodeValue: undefined,\n\t\t\tmissingVariables: mergeAllMissing(calculationValues),\n\t\t}\n\t}\n\n\tconst lowerTaux = previousTaux.nodeValue\n\tconst upperTaux = activeTranche.taux.nodeValue\n\tconst plancher = activeTranche.plancherValue\n\tconst plafond = activeTranche.plafondValue\n\tconst coeff = (upperTaux - lowerTaux) / (plafond - plancher)\n\tconst nodeValue = lowerTaux + (assiette.nodeValue - plancher) * coeff\n\tactiveTranche.nodeValue = nodeValue\n\treturn {\n\t\t...evaluatedNode,\n\t\tnodeValue,\n\t\tmissingVariables: {},\n\t}\n}\n\nregisterEvaluationFunction('taux progressif', evaluate)\n","import { ASTNode, formatValue } from '..'\nimport { registerEvaluationFunction } from '../evaluationFunctions'\nimport { mergeAllMissing } from '../evaluationUtils'\nimport parse from '../parse'\n\nconst NAME = 'texte' as const\n\nexport type TexteNode = {\n\texplanation: Array<ASTNode | string>\n\tnodeKind: typeof NAME\n}\n\nexport default function parseTexte(texte: string, context): TexteNode {\n\tconst explanation = [] as TexteNode['explanation']\n\tlet lastIndex = 0\n\tfor (const { 0: expression, index } of texte.matchAll(/{{(.|\\n)*?}}/g)) {\n\t\tconst publicodeExpression = expression.slice(2, -2).trim()\n\t\tconst parsedNode = parse(publicodeExpression, context)\n\t\texplanation.push(texte.substring(lastIndex, index), parsedNode)\n\t\tlastIndex = (index ?? 0) + expression.length\n\t}\n\texplanation.push(texte.slice(lastIndex))\n\treturn {\n\t\tnodeKind: NAME,\n\t\texplanation,\n\t}\n}\nparseTexte.nom = NAME\n\nregisterEvaluationFunction(NAME, function evaluate(node) {\n\tconst explanation = node.explanation.map((element) =>\n\t\ttypeof element === 'string' ? element : this.evaluateNode(element)\n\t)\n\n\treturn {\n\t\t...node,\n\t\texplanation,\n\t\tmissingVariables: mergeAllMissing(\n\t\t\tnode.explanation.filter(\n\t\t\t\t(element) => typeof element !== 'string'\n\t\t\t) as Array<ASTNode>\n\t\t),\n\t\tnodeValue: explanation\n\t\t\t.map((element) =>\n\t\t\t\ttypeof element === 'string' ? element : formatValue(element)\n\t\t\t)\n\t\t\t.join(''),\n\t}\n})\n","import { PublicodesExpression } from '..'\nimport { createParseInlinedMecanismWithArray } from './inlineMecanism'\n\nexport default createParseInlinedMecanismWithArray(\n\t'toutes ces conditions',\n\t{\n\t\tvaleur: { type: 'liste' },\n\t},\n\t({ valeur }) =>\n\t\t(valeur as Array<PublicodesExpression>).reduce(\n\t\t\t(acc, value) => ({ et: [acc, value] }),\n\t\t\t'oui'\n\t\t)\n)\n","import { PublicodesExpression } from '..'\nimport { createParseInlinedMecanismWithArray } from './inlineMecanism'\n\nexport default createParseInlinedMecanismWithArray(\n\t'une de ces conditions',\n\t{\n\t\tvaleur: { type: 'liste' },\n\t},\n\t({ valeur }) =>\n\t\t(valeur as Array<PublicodesExpression>).reduce(\n\t\t\t(acc, value) => ({ ou: [acc, value] }),\n\t\t\t'non'\n\t\t)\n)\n","import { ASTNode, Unit } from '../AST/types'\nimport { warning } from '../error'\nimport { registerEvaluationFunction } from '../evaluationFunctions'\nimport parse from '../parse'\nimport { convertUnit, parseUnit } from '../units'\n\nexport type UnitéNode = {\n\tunit: Unit\n\texplanation: ASTNode\n\tnodeKind: 'unité'\n}\n\nexport default function parseUnité(v, context): UnitéNode {\n\tconst explanation = parse(v.valeur, context)\n\tconst unit = parseUnit(v.unité, context.getUnitKey)\n\n\treturn {\n\t\texplanation,\n\t\tunit,\n\t\tnodeKind: parseUnité.nom,\n\t}\n}\n\nparseUnité.nom = 'unité' as const\n\nregisterEvaluationFunction(parseUnité.nom, function evaluate(node) {\n\tconst valeur = this.evaluateNode(node.explanation)\n\n\tlet nodeValue = valeur.nodeValue\n\tif (nodeValue !== null && 'unit' in node) {\n\t\ttry {\n\t\t\tnodeValue = convertUnit(\n\t\t\t\tvaleur.unit,\n\t\t\t\tnode.unit,\n\t\t\t\tvaleur.nodeValue as number\n\t\t\t)\n\t\t} catch (e) {\n\t\t\twarning(\n\t\t\t\tthis.context.logger,\n\t\t\t\t\"Erreur lors de la conversion d'unité explicite\",\n\t\t\t\t{ dottedName: this.cache._meta.evaluationRuleStack[0] },\n\t\t\t\te\n\t\t\t)\n\t\t}\n\t}\n\n\treturn {\n\t\t...node,\n\t\tnodeValue,\n\t\texplanation: valeur,\n\t\tmissingVariables: valeur.missingVariables,\n\t}\n})\n","import { ASTNode } from '../AST/types'\nimport { registerEvaluationFunction } from '../evaluationFunctions'\nimport { mergeMissing } from '../evaluationUtils'\nimport parse from '../parse'\n\nexport type VariableManquanteNode = {\n\tmissingVariable: string\n\texplanation: ASTNode\n\tnodeKind: 'variable manquante'\n}\n\nexport default function parseVariableManquante(\n\tv,\n\tcontext\n): VariableManquanteNode {\n\treturn {\n\t\tmissingVariable: v['variable manquante'],\n\t\tnodeKind: parseVariableManquante.nom,\n\t\texplanation: parse(v.valeur, context),\n\t}\n}\n\nparseVariableManquante.nom = 'variable manquante' as const\n\nregisterEvaluationFunction(parseVariableManquante.nom, function evaluate(node) {\n\tconst valeur = this.evaluateNode(node.explanation)\n\n\tconst maxMissingScore = Object.values(valeur.missingVariables).reduce<number>(\n\t\t(a, b) => (a > b ? a : b),\n\t\t0\n\t)\n\n\treturn {\n\t\t...node,\n\t\tnodeValue: valeur.nodeValue,\n\t\tunit: valeur.unit,\n\t\texplanation: valeur,\n\t\tmissingVariables: mergeMissing(valeur.missingVariables, {\n\t\t\t[node.missingVariable]: maxMissingScore + 1,\n\t\t}),\n\t}\n})\n","import { EvaluationFunction } from '..'\nimport { ASTNode, EvaluatedNode, Unit } from '../AST/types'\nimport { warning } from '../error'\nimport { registerEvaluationFunction } from '../evaluationFunctions'\nimport { bonus, defaultNode, mergeMissing } from '../evaluationUtils'\nimport { convertNodeToUnit } from '../nodeUnits'\nimport parse from '../parse'\n\nexport type VariationNode = {\n\texplanation: Array<{\n\t\tcondition: ASTNode\n\t\tconsequence: ASTNode\n\t\tsatisfied?: boolean\n\t}>\n\tnodeKind: 'variations'\n}\n\nexport const devariate = (k, v, context): ASTNode => {\n\tif (k === 'valeur') {\n\t\treturn parse(v, context)\n\t}\n\tconst { variations, ...factoredKeys } = v\n\tconst explanation = parse(\n\t\t{\n\t\t\tvariations: variations.map(({ alors, sinon, si }) => {\n\t\t\t\tconst { attributs, ...otherKeys } = alors ?? sinon\n\t\t\t\treturn {\n\t\t\t\t\t[alors !== undefined ? 'alors' : 'sinon']: {\n\t\t\t\t\t\t...attributs,\n\t\t\t\t\t\t[k]: {\n\t\t\t\t\t\t\t...factoredKeys,\n\t\t\t\t\t\t\t...otherKeys,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t...(si !== undefined && { si }),\n\t\t\t\t}\n\t\t\t}),\n\t\t},\n\t\tcontext\n\t)\n\treturn explanation\n}\n\nexport default function parseVariations(v, context): VariationNode {\n\tconst explanation = v.map(({ si, alors, sinon }) =>\n\t\tsinon !== undefined\n\t\t\t? { consequence: parse(sinon, context), condition: defaultNode(true) }\n\t\t\t: { consequence: parse(alors, context), condition: parse(si, context) }\n\t)\n\n\treturn {\n\t\texplanation,\n\t\tnodeKind: 'variations',\n\t}\n}\n\nconst evaluate: EvaluationFunction<'variations'> = function (node) {\n\tconst [nodeValue, explanation, unit] = node.explanation.reduce<\n\t\t[\n\t\t\tEvaluatedNode['nodeValue'],\n\t\t\tVariationNode['explanation'],\n\t\t\tUnit | undefined,\n\t\t\tboolean | undefined\n\t\t]\n\t>(\n\t\t(\n\t\t\t[evaluation, explanations, unit, previousConditions],\n\t\t\t{ condition, consequence },\n\t\t\ti: number\n\t\t) => {\n\t\t\tif (previousConditions === true) {\n\t\t\t\treturn [\n\t\t\t\t\tevaluation,\n\t\t\t\t\t[...explanations, { condition, consequence }],\n\t\t\t\t\tunit,\n\t\t\t\t\tpreviousConditions,\n\t\t\t\t]\n\t\t\t}\n\t\t\tconst evaluatedCondition = this.evaluateNode(condition)\n\t\t\tconst currentCondition =\n\t\t\t\tpreviousConditions === undefined\n\t\t\t\t\t? previousConditions\n\t\t\t\t\t: !previousConditions &&\n\t\t\t\t\t  (evaluatedCondition.nodeValue === undefined\n\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t: evaluatedCondition.nodeValue !== false &&\n\t\t\t\t\t\t\t  evaluatedCondition.nodeValue !== null)\n\n\t\t\tif (currentCondition === false || currentCondition === null) {\n\t\t\t\treturn [\n\t\t\t\t\tevaluation,\n\t\t\t\t\t[...explanations, { condition: evaluatedCondition, consequence }],\n\t\t\t\t\tunit,\n\t\t\t\t\tpreviousConditions,\n\t\t\t\t]\n\t\t\t}\n\t\t\tlet evaluatedConsequence: EvaluatedNode | undefined = undefined\n\t\t\tif (\n\t\t\t\tevaluatedCondition.nodeValue !== false &&\n\t\t\t\tevaluatedCondition.nodeValue !== null\n\t\t\t) {\n\t\t\t\tevaluatedConsequence = this.evaluateNode(consequence!)\n\t\t\t\tif (unit) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tevaluatedConsequence = convertNodeToUnit(\n\t\t\t\t\t\t\tunit,\n\t\t\t\t\t\t\tevaluatedConsequence!\n\t\t\t\t\t\t)\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\twarning(\n\t\t\t\t\t\t\tthis.context.logger,\n\t\t\t\t\t\t\t`L'unité de la branche n° ${\n\t\t\t\t\t\t\t\ti + 1\n\t\t\t\t\t\t\t} du mécanisme 'variations' n'est pas compatible avec celle d'une branche précédente`,\n\t\t\t\t\t\t\t{ dottedName: this.cache._meta.evaluationRuleStack[0] },\n\t\t\t\t\t\t\te\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [\n\t\t\t\tcurrentCondition && evaluatedConsequence?.nodeValue,\n\t\t\t\t[\n\t\t\t\t\t...explanations,\n\t\t\t\t\t{\n\t\t\t\t\t\tcondition: evaluatedCondition,\n\t\t\t\t\t\tconsequence: evaluatedConsequence ?? consequence,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tunit || evaluatedConsequence?.unit,\n\t\t\t\tpreviousConditions || currentCondition,\n\t\t\t]\n\t\t},\n\t\t[null, [], undefined, false]\n\t)\n\n\treturn {\n\t\t...node,\n\t\tnodeValue,\n\t\t...(unit !== undefined && { unit }),\n\t\texplanation,\n\t\tmissingVariables: explanation.reduce(\n\t\t\t(values, { condition, consequence }) =>\n\t\t\t\tmergeMissing(\n\t\t\t\t\tvalues,\n\t\t\t\t\tmergeMissing(\n\t\t\t\t\t\tbonus((condition as EvaluatedNode).missingVariables),\n\t\t\t\t\t\t'nodeValue' in condition &&\n\t\t\t\t\t\t\tcondition.nodeValue !== false &&\n\t\t\t\t\t\t\tcondition.nodeValue !== null\n\t\t\t\t\t\t\t? (consequence as EvaluatedNode).missingVariables\n\t\t\t\t\t\t\t: {}\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t{}\n\t\t),\n\t}\n}\n\nregisterEvaluationFunction('variations', evaluate)\n","import nearley from 'nearley'\nimport { PublicodesError } from './error'\nimport grammar from './grammar'\n\n// TODO: nearley is currently exported as a CommonJS module which is why we need\n// to destructure the default import instead of directly importing the symbols\n// we need. This is sub-optimal because we our bundler will not tree-shake\n// unused nearley symbols.\n// https://github.com/kach/nearley/issues/535\nconst { Grammar, Parser } = nearley\n\nconst compiledGrammar = Grammar.fromCompiled(grammar)\n\nconst parser = new Parser(compiledGrammar)\nconst initialState = parser.save()\n\ntype BinaryOp =\n\t| { '+': [ExprAST, ExprAST] }\n\t| { '-': [ExprAST, ExprAST] }\n\t| { '*': [ExprAST, ExprAST] }\n\t| { '/': [ExprAST, ExprAST] }\n\t| { '>': [ExprAST, ExprAST] }\n\t| { '<': [ExprAST, ExprAST] }\n\t| { '>=': [ExprAST, ExprAST] }\n\t| { '<=': [ExprAST, ExprAST] }\n\t| { '=': [ExprAST, ExprAST] }\n\t| { '!=': [ExprAST, ExprAST] }\n\ntype UnaryOp = { '-': [{ value: 0 }, ExprAST] }\n\n/** AST of a publicodes expression. */\nexport type ExprAST =\n\t| BinaryOp\n\t| UnaryOp\n\t| { variable: string }\n\t| { constant: { type: 'number'; nodeValue: number }; unité?: string }\n\t| { constant: { type: 'boolean'; nodeValue: boolean } }\n\t| { constant: { type: 'string' | 'date'; nodeValue: string } }\n\n/**\n * Parse a publicodes expression into an JSON object representing the AST.\n *\n * The parsing is done with the [nearley](https://nearley.js.org/) parser based\n * on the [grammar](https://github.com/betagouv/publicodes/blob/290c079d1f22baed77a96bdd834ef6cb44fa8da9/packages/core/source/grammar.ne)\n *\n * @param rawNode The expression to parse\n * @param dottedName The dottedName of the rule being parsed\n *\n * @returns The parsing result as a JSON object\n *\n * @throws A `SyntaxError` if the expression is invalid\n * @throws A `PublicodesInternalError` if the parser is unable to parse the expression\n *\n * @example\n * ```ts\n * parseExpression('20.3 * nombre', 'foo . bar')\n * // returns { \"*\": [ { constant: { type: \"number\", nodeValue: 20.3 } }, { variable:\"nombre\" } ] }\n * ```\n */\nexport function parseExpression(rawNode: string, dottedName: string): ExprAST {\n\t/* Strings correspond to infix expressions.\n\t * Indeed, a subset of expressions like simple arithmetic operations `3 + (quantity * 2)` or like `salary [month]` are more explicit that their prefixed counterparts.\n\t * This function makes them prefixed operations. */\n\tconst singleLineExpression = (rawNode + '').replace(/\\s*\\n\\s*/g, ' ').trim()\n\n\ttry {\n\t\tparser.restore(initialState)\n\t\tconst [parseResult] = parser.feed(singleLineExpression).results\n\n\t\tif (parseResult == null) {\n\t\t\tthrow new PublicodesError(\n\t\t\t\t'InternalError',\n\t\t\t\t`\nUn problème est survenu lors du parsing de l'expression \\`${singleLineExpression}\\` :\n\n\tle parseur Nearley n'a pas réussi à parser l'expression.\n`,\n\t\t\t\t{ dottedName }\n\t\t\t)\n\t\t}\n\t\treturn parseResult\n\t} catch (e) {\n\t\tif (e instanceof PublicodesError) {\n\t\t\tthrow e\n\t\t}\n\t\tthrow new PublicodesError(\n\t\t\t'SyntaxError',\n\t\t\t`\\`${singleLineExpression}\\` n'est pas une expression valide`,\n\t\t\t{ dottedName },\n\t\t\te\n\t\t)\n\t}\n}\n","/* Those are postprocessor functions for the Nearley grammar.ne.\nThe advantage of putting them here is to get prettier's JS formatting, since Nealrey doesn't support it https://github.com/kach/nearley/issues/310 */\nimport { normalizeDateString } from './date.ts'\n\nexport const binaryOperation = ([A, , operator, , B]) => ({\n\t[operator.value.toLowerCase()]: [A, B],\n})\n\nexport const unaryOperation = ([operator, , A]) => ({\n\t[operator]: [number([{ value: '0' }]), A],\n})\n\nexport const variable = ({ value: variable }) => {\n\treturn {\n\t\tvariable,\n\t}\n}\n\nexport const JSONObject = ([{ value }]) => {\n\tconsole.log(value)\n\t// TODO\n}\nexport const number = ([{ value }]) => ({\n\tconstant: {\n\t\ttype: 'number',\n\t\tnodeValue: parseFloat(value),\n\t},\n})\n\nexport const numberWithUnit = (value) => ({\n\t...number(value),\n\tunité: value[2].value,\n})\n\nexport const date = ([{ value }]) => {\n\treturn {\n\t\tconstant: {\n\t\t\ttype: 'date',\n\t\t\tnodeValue: normalizeDateString(value),\n\t\t},\n\t}\n}\n\nexport const boolean = ([{ value }]) => ({\n\tconstant: {\n\t\ttype: 'boolean',\n\t\tnodeValue: value === 'oui',\n\t},\n})\n\nexport const string = ([{ value }]) => ({\n\tconstant: {\n\t\ttype: 'string',\n\t\tnodeValue: value.slice(1, -1),\n\t},\n})\n","// Generated automatically by nearley, version 2.20.1\n// http://github.com/Hardmath123/nearley\nfunction id(x) { return x[0]; }\n\nimport {\n  string, date, variable, binaryOperation, unaryOperation, boolean, number, numberWithUnit, JSONObject\n} from './grammarFunctions.js';\nimport moo from \"moo\";\n\n\nconst dateRegexp = `(?:(?:0?[1-9]|[12][0-9]|3[01])\\\\/)?(?:0?[1-9]|1[012])\\\\/\\\\d{4}`\nconst letter = '[a-zA-Z\\u00C0-\\u017F€$%]';\nconst letterOrNumber = '[a-zA-Z\\u00C0-\\u017F0-9\\',°]';\nconst word = `${letter}(?:[-']?${letterOrNumber}+)*`;\n\nconst numberRegExp = '-?(?:[1-9][0-9]+|[0-9])(?:\\\\.[0-9]+)?';\nconst lexer = moo.compile({\n  '(': '(',\n  ')': ')',\n  '[': '[',\n  ']': ']',\n  comparison: ['>','<','>=','<=','=','!='],\n  date: new RegExp(dateRegexp),\n\tboolean: ['oui','non'],\n  number: new RegExp(numberRegExp),\n  word:  new RegExp(word),\n  string: [/'.*'/, /\".*\"/],\n  JSONObject: /{.*}/,\n  additionSubstraction: /[\\+-]/,\n  multiplicationDivision: ['*','/'],\n  dot: ' . ',\n  \".\": '.',\n  space: { match: /[\\s]+/, lineBreaks: true },\n});\n\nconst join = (args) => ({value: (args.map(x => x && x.value).join(\"\"))})\nconst flattenJoin = ([a, b]) => Array.isArray(b) ? join([a, ...b]) : a\nlet Lexer = lexer;\nlet ParserRules = [\n    {\"name\": \"main\", \"symbols\": [\"Comparison\"], \"postprocess\": id},\n    {\"name\": \"main\", \"symbols\": [\"NumericValue\"], \"postprocess\": id},\n    {\"name\": \"main\", \"symbols\": [\"Date\"], \"postprocess\": id},\n    {\"name\": \"main\", \"symbols\": [\"NonNumericTerminal\"], \"postprocess\": id},\n    {\"name\": \"main\", \"symbols\": [\"JSONObject\"], \"postprocess\": id},\n    {\"name\": \"NumericValue\", \"symbols\": [\"AdditionSubstraction\"], \"postprocess\": id},\n    {\"name\": \"NumericValue\", \"symbols\": [\"Negation\"], \"postprocess\": id},\n    {\"name\": \"NumericTerminal\", \"symbols\": [\"Variable\"], \"postprocess\": id},\n    {\"name\": \"NumericTerminal\", \"symbols\": [\"number\"], \"postprocess\": id},\n    {\"name\": \"Negation\", \"symbols\": [{\"literal\":\"-\"}, (lexer.has(\"space\") ? {type: \"space\"} : space), \"Parentheses\"], \"postprocess\": unaryOperation},\n    {\"name\": \"Parentheses\", \"symbols\": [{\"literal\":\"(\"}, (lexer.has(\"space\") ? {type: \"space\"} : space), \"NumericValue\", (lexer.has(\"space\") ? {type: \"space\"} : space), {\"literal\":\")\"}], \"postprocess\": ([,,e]) => e},\n    {\"name\": \"Parentheses\", \"symbols\": [{\"literal\":\"(\"}, \"NumericValue\", {\"literal\":\")\"}], \"postprocess\": ([,e]) => e},\n    {\"name\": \"Parentheses\", \"symbols\": [\"NumericTerminal\"], \"postprocess\": id},\n    {\"name\": \"Date\", \"symbols\": [\"Variable\"], \"postprocess\": id},\n    {\"name\": \"Date\", \"symbols\": [(lexer.has(\"date\") ? {type: \"date\"} : date)], \"postprocess\": date},\n    {\"name\": \"Comparison\", \"symbols\": [\"Comparable\", (lexer.has(\"space\") ? {type: \"space\"} : space), (lexer.has(\"comparison\") ? {type: \"comparison\"} : comparison), (lexer.has(\"space\") ? {type: \"space\"} : space), \"Comparable\"], \"postprocess\": binaryOperation},\n    {\"name\": \"Comparison\", \"symbols\": [\"Date\", (lexer.has(\"space\") ? {type: \"space\"} : space), (lexer.has(\"comparison\") ? {type: \"comparison\"} : comparison), (lexer.has(\"space\") ? {type: \"space\"} : space), \"Date\"], \"postprocess\": binaryOperation},\n    {\"name\": \"Comparable$subexpression$1\", \"symbols\": [\"AdditionSubstraction\"]},\n    {\"name\": \"Comparable$subexpression$1\", \"symbols\": [\"NonNumericTerminal\"]},\n    {\"name\": \"Comparable\", \"symbols\": [\"Comparable$subexpression$1\"], \"postprocess\": ([[e]]) => e},\n    {\"name\": \"NonNumericTerminal\", \"symbols\": [(lexer.has(\"boolean\") ? {type: \"boolean\"} : boolean)], \"postprocess\": boolean},\n    {\"name\": \"NonNumericTerminal\", \"symbols\": [(lexer.has(\"string\") ? {type: \"string\"} : string)], \"postprocess\": string},\n    {\"name\": \"Variable$ebnf$1\", \"symbols\": []},\n    {\"name\": \"Variable$ebnf$1$subexpression$1\", \"symbols\": [(lexer.has(\"dot\") ? {type: \"dot\"} : dot), \"Words\"], \"postprocess\": join},\n    {\"name\": \"Variable$ebnf$1\", \"symbols\": [\"Variable$ebnf$1\", \"Variable$ebnf$1$subexpression$1\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"Variable\", \"symbols\": [\"Words\", \"Variable$ebnf$1\"], \"postprocess\": x => variable(flattenJoin(x))},\n    {\"name\": \"Words$ebnf$1$subexpression$1$ebnf$1\", \"symbols\": [(lexer.has(\"space\") ? {type: \"space\"} : space)], \"postprocess\": id},\n    {\"name\": \"Words$ebnf$1$subexpression$1$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"Words$ebnf$1$subexpression$1\", \"symbols\": [\"Words$ebnf$1$subexpression$1$ebnf$1\", \"WordOrNumber\"], \"postprocess\": join},\n    {\"name\": \"Words$ebnf$1\", \"symbols\": [\"Words$ebnf$1$subexpression$1\"]},\n    {\"name\": \"Words$ebnf$1$subexpression$2$ebnf$1\", \"symbols\": [(lexer.has(\"space\") ? {type: \"space\"} : space)], \"postprocess\": id},\n    {\"name\": \"Words$ebnf$1$subexpression$2$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"Words$ebnf$1$subexpression$2\", \"symbols\": [\"Words$ebnf$1$subexpression$2$ebnf$1\", \"WordOrNumber\"], \"postprocess\": join},\n    {\"name\": \"Words$ebnf$1\", \"symbols\": [\"Words$ebnf$1\", \"Words$ebnf$1$subexpression$2\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"Words\", \"symbols\": [\"WordOrKeyword\", \"Words$ebnf$1\"], \"postprocess\": flattenJoin},\n    {\"name\": \"Words\", \"symbols\": [(lexer.has(\"word\") ? {type: \"word\"} : word)], \"postprocess\": id},\n    {\"name\": \"WordOrKeyword\", \"symbols\": [(lexer.has(\"word\") ? {type: \"word\"} : word)], \"postprocess\": id},\n    {\"name\": \"WordOrKeyword\", \"symbols\": [(lexer.has(\"boolean\") ? {type: \"boolean\"} : boolean)], \"postprocess\": id},\n    {\"name\": \"WordOrNumber\", \"symbols\": [\"WordOrKeyword\"], \"postprocess\": id},\n    {\"name\": \"WordOrNumber\", \"symbols\": [(lexer.has(\"number\") ? {type: \"number\"} : number)], \"postprocess\": id},\n    {\"name\": \"UnitDenominator$ebnf$1$subexpression$1\", \"symbols\": [(lexer.has(\"space\") ? {type: \"space\"} : space)]},\n    {\"name\": \"UnitDenominator$ebnf$1\", \"symbols\": [\"UnitDenominator$ebnf$1$subexpression$1\"], \"postprocess\": id},\n    {\"name\": \"UnitDenominator$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"UnitDenominator\", \"symbols\": [\"UnitDenominator$ebnf$1\", {\"literal\":\"/\"}, \"Words\"], \"postprocess\": join},\n    {\"name\": \"UnitNumerator$ebnf$1$subexpression$1\", \"symbols\": [{\"literal\":\".\"}, \"Words\"]},\n    {\"name\": \"UnitNumerator$ebnf$1\", \"symbols\": [\"UnitNumerator$ebnf$1$subexpression$1\"], \"postprocess\": id},\n    {\"name\": \"UnitNumerator$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"UnitNumerator\", \"symbols\": [\"Words\", \"UnitNumerator$ebnf$1\"], \"postprocess\": flattenJoin},\n    {\"name\": \"Unit$ebnf$1\", \"symbols\": [\"UnitNumerator\"], \"postprocess\": id},\n    {\"name\": \"Unit$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"Unit$ebnf$2\", \"symbols\": []},\n    {\"name\": \"Unit$ebnf$2\", \"symbols\": [\"Unit$ebnf$2\", \"UnitDenominator\"], \"postprocess\": function arrpush(d) {return d[0].concat([d[1]]);}},\n    {\"name\": \"Unit\", \"symbols\": [\"Unit$ebnf$1\", \"Unit$ebnf$2\"], \"postprocess\": flattenJoin},\n    {\"name\": \"AdditionSubstraction\", \"symbols\": [\"AdditionSubstraction\", (lexer.has(\"space\") ? {type: \"space\"} : space), (lexer.has(\"additionSubstraction\") ? {type: \"additionSubstraction\"} : additionSubstraction), (lexer.has(\"space\") ? {type: \"space\"} : space), \"MultiplicationDivision\"], \"postprocess\": binaryOperation},\n    {\"name\": \"AdditionSubstraction\", \"symbols\": [\"MultiplicationDivision\"], \"postprocess\": id},\n    {\"name\": \"MultiplicationDivision\", \"symbols\": [\"MultiplicationDivision\", (lexer.has(\"space\") ? {type: \"space\"} : space), (lexer.has(\"multiplicationDivision\") ? {type: \"multiplicationDivision\"} : multiplicationDivision), (lexer.has(\"space\") ? {type: \"space\"} : space), \"Parentheses\"], \"postprocess\": binaryOperation},\n    {\"name\": \"MultiplicationDivision\", \"symbols\": [\"Parentheses\"], \"postprocess\": id},\n    {\"name\": \"number\", \"symbols\": [(lexer.has(\"number\") ? {type: \"number\"} : number)], \"postprocess\": number},\n    {\"name\": \"number$ebnf$1$subexpression$1\", \"symbols\": [(lexer.has(\"space\") ? {type: \"space\"} : space)]},\n    {\"name\": \"number$ebnf$1\", \"symbols\": [\"number$ebnf$1$subexpression$1\"], \"postprocess\": id},\n    {\"name\": \"number$ebnf$1\", \"symbols\": [], \"postprocess\": function(d) {return null;}},\n    {\"name\": \"number\", \"symbols\": [(lexer.has(\"number\") ? {type: \"number\"} : number), \"number$ebnf$1\", \"Unit\"], \"postprocess\": numberWithUnit},\n    {\"name\": \"JSONObject\", \"symbols\": [(lexer.has(\"JSONObject\") ? {type: \"JSONObject\"} : JSONObject)], \"postprocess\": JSONObject}\n];\nlet ParserStart = \"main\";\nexport default { Lexer, ParserRules, ParserStart };\n","import { ASTNode } from './AST/types'\nimport { PublicodesError, PublicodesInternalError } from './error'\nimport abattement from './mecanisms/abattement'\nimport applicable from './mecanisms/applicable'\nimport arrondi from './mecanisms/arrondi'\nimport avec from './mecanisms/avec'\nimport barème from './mecanisms/barème'\nimport { decompose } from './mecanisms/composantes'\nimport condition from './mecanisms/condition'\nimport durée from './mecanisms/durée'\nimport {\n\tparseEstApplicable,\n\tparseEstDéfini,\n\tparseEstNonDéfini,\n} from './mecanisms/est'\nimport { parseEstNonApplicable } from './mecanisms/est-non-applicable'\nimport grille from './mecanisms/grille'\nimport { mecanismInversion } from './mecanisms/inversion'\nimport { parseMaximumDe, parseMinimumDe } from './mecanisms/max-min'\nimport moyenne from './mecanisms/moyenne'\nimport nonApplicable from './mecanisms/non-applicable'\nimport { mecanismOnePossibility } from './mecanisms/one-possibility'\nimport operations from './mecanisms/operation'\nimport parDéfaut from './mecanisms/parDéfaut'\nimport plafond from './mecanisms/plafond'\nimport plancher from './mecanisms/plancher'\nimport produit from './mecanisms/product'\nimport { mecanismRecalcul } from './mecanisms/recalcul'\nimport résoudreRéférenceCirculaire from './mecanisms/résoudre-référence-circulaire'\nimport simplifierUnité from './mecanisms/simplifier-unité'\nimport situation from './mecanisms/situation'\nimport somme from './mecanisms/somme'\nimport tauxProgressif from './mecanisms/tauxProgressif'\nimport texte from './mecanisms/texte'\nimport toutesCesConditions from './mecanisms/toutes-ces-conditions'\nimport uneDeCesConditions from './mecanisms/une-de-ces-conditions'\nimport unité from './mecanisms/unité'\nimport variableManquante from './mecanisms/variablesManquantes'\nimport variations, { devariate } from './mecanisms/variations'\nimport { parseExpression } from './parseExpression'\nimport { Context } from './parsePublicodes'\nimport parseReference from './reference'\nimport parseRule from './rule'\n\nexport default function parse(rawNode, context: Context): ASTNode {\n\tif (rawNode == undefined) {\n\t\tthrow new PublicodesError(\n\t\t\t'SyntaxError',\n\t\t\t`\n\tUne des valeurs de la formule est vide.\n\tVérifiez que tous les champs à droite des deux points sont remplis`,\n\t\t\t{ dottedName: context.dottedName }\n\t\t)\n\t}\n\tif (typeof rawNode === 'boolean') {\n\t\tthrow new PublicodesError(\n\t\t\t'SyntaxError',\n\t\t\t`\nLes valeurs booléennes true / false ne sont acceptées.\nUtilisez leur contrepartie française : 'oui' / 'non'`,\n\t\t\t{ dottedName: context.dottedName }\n\t\t)\n\t}\n\tconst node =\n\t\ttypeof rawNode === 'object'\n\t\t\t? rawNode\n\t\t\t: parseExpression(rawNode, context.dottedName)\n\tif ('nodeKind' in node) {\n\t\treturn node\n\t}\n\tif ('nom' in node) {\n\t\treturn parseRule(node, context)\n\t}\n\n\treturn {\n\t\t...parseChainedMecanisms(node, context),\n\t\trawNode,\n\t}\n}\n\nfunction parseMecanism(rawNode, context: Context) {\n\tif (Array.isArray(rawNode)) {\n\t\tthrow new PublicodesError(\n\t\t\t'SyntaxError',\n\t\t\t`\nIl manque le nom du mécanisme pour le tableau : [${rawNode\n\t\t\t\t.map((x) => `'${x}'`)\n\t\t\t\t.join(', ')}]\nLes mécanisme possibles sont : 'somme', 'le maximum de', 'le minimum de', 'toutes ces conditions', 'une de ces conditions'.\n\t\t`,\n\t\t\t{ dottedName: context.dottedName }\n\t\t)\n\t}\n\n\tconst keys = Object.keys(rawNode)\n\tif (keys.length > 1) {\n\t\tthrow new PublicodesError(\n\t\t\t'SyntaxError',\n\t\t\t`\nLes mécanismes suivants se situent au même niveau : ${keys\n\t\t\t\t.map((x) => `'${x}'`)\n\t\t\t\t.join(', ')}\nCela vient probablement d'une erreur dans l'indentation\n\t`,\n\t\t\t{ dottedName: context.dottedName }\n\t\t)\n\t}\n\tif (keys.length === 0) {\n\t\treturn { nodeKind: 'constant', nodeValue: undefined }\n\t}\n\n\tconst mecanismName = keys[0]\n\tconst values = rawNode[mecanismName]\n\tconst parseFn = parseFunctions[mecanismName]\n\n\tif (!parseFn) {\n\t\tthrow new PublicodesError(\n\t\t\t'SyntaxError',\n\t\t\t`Le mécanisme \"${mecanismName}\" est inconnu.\n\nVérifiez qu'il n'y ait pas d'erreur dans l'orthographe du nom.`,\n\t\t\t{ dottedName: context.dottedName }\n\t\t)\n\t}\n\ttry {\n\t\t// Mécanisme de composantes. Voir mécanismes.md/composantes\n\t\tif (values?.composantes) {\n\t\t\treturn decompose(mecanismName, values, context)\n\t\t}\n\t\tif (values?.variations && Object.values(values).length > 1) {\n\t\t\treturn devariate(mecanismName, values, context)\n\t\t}\n\t\treturn parseFn(values, context)\n\t} catch (e) {\n\t\tif (e instanceof PublicodesError) {\n\t\t\tthrow e\n\t\t}\n\t\tthrow new PublicodesError(\n\t\t\t'SyntaxError',\n\t\t\tmecanismName\n\t\t\t\t? `➡️ Dans le mécanisme ${mecanismName}\n${e.message}`\n\t\t\t\t: e.message,\n\t\t\t{ dottedName: context.dottedName }\n\t\t)\n\t}\n}\n\n// Chainable mecanisme in their composition order (first one is applyied first)\nconst chainableMecanisms = [\n\tvariableManquante,\n\tavec,\n\tapplicable,\n\tnonApplicable,\n\tarrondi,\n\tunité,\n\tsimplifierUnité,\n\tplancher,\n\tplafond,\n\tparDéfaut,\n\tsituation,\n\trésoudreRéférenceCirculaire,\n\tabattement,\n]\n\nfunction parseChainedMecanisms(rawNode, context: Context): ASTNode {\n\tconst parseFn = chainableMecanisms.find((fn) => fn.nom in rawNode)\n\tif (!parseFn) {\n\t\treturn parseMecanism(rawNode, context)\n\t}\n\tconst { [parseFn.nom]: param, ...valeur } = rawNode\n\n\treturn parseMecanism(\n\t\t{\n\t\t\t[parseFn.nom]: {\n\t\t\t\tvaleur,\n\t\t\t\t[parseFn.nom]: param,\n\t\t\t},\n\t\t},\n\t\tcontext\n\t)\n}\n\nconst parseFunctions = {\n\t...operations,\n\t...chainableMecanisms.reduce((acc, fn) => ({ [fn.nom]: fn, ...acc }), {}),\n\t'inversion numérique': mecanismInversion,\n\t'le maximum de': parseMaximumDe,\n\t'le minimum de': parseMinimumDe,\n\t'taux progressif': tauxProgressif,\n\t'toutes ces conditions': toutesCesConditions,\n\t'est non défini': parseEstNonDéfini,\n\t'est non applicable': parseEstNonApplicable,\n\t'est applicable': parseEstApplicable,\n\t'est défini': parseEstDéfini,\n\t'une de ces conditions': uneDeCesConditions,\n\t'une possibilité': mecanismOnePossibility,\n\tcondition,\n\tbarème,\n\tdurée,\n\tgrille,\n\tmultiplication: produit,\n\tproduit,\n\trecalcul: mecanismRecalcul,\n\tsomme,\n\tmoyenne,\n\t[texte.nom]: texte,\n\tvaleur: parse,\n\tvariable: parseReference,\n\tvariations,\n\tconstant: (v) => ({\n\t\ttype: v.type,\n\t\t// In the documentation we want to display constants defined in the source\n\t\t// with their full precision. This is especially useful for percentages like\n\t\t// APEC 0,036 %.\n\t\tfullPrecision: true,\n\t\tisNullable: v.nodeValue == null,\n\t\tmissingVariables: {},\n\t\tnodeValue: v.nodeValue,\n\t\tnodeKind: 'constant',\n\t}),\n}\n\nexport const mecanismKeys = Object.keys(parseFunctions)\n","import { PublicodesInternalError } from './error'\nimport { registerEvaluationFunction } from './evaluationFunctions'\nimport { Context } from './parsePublicodes'\n\nexport type ReferenceNode = {\n\tnodeKind: 'reference'\n\tname: string\n\tcontextDottedName: string\n\tdottedName?: string\n\ttitle?: string\n\tacronym?: string\n}\n\nexport default function parseReference(\n\tv: string,\n\tcontext: Context\n): ReferenceNode {\n\tif (!context.dottedName) {\n\t\tthrow new PublicodesInternalError({\n\t\t\tmessage:\n\t\t\t\t\"Une référence ne peut pas exister en dehors d'une règle (`context.dottedName` est vide)\",\n\t\t\tcontext,\n\t\t})\n\t}\n\treturn {\n\t\tnodeKind: 'reference',\n\t\tname: v,\n\t\tcontextDottedName: context.dottedName,\n\t}\n}\n\nregisterEvaluationFunction('reference', function evaluateReference(node) {\n\tif (!node.dottedName) {\n\t\tthrow new PublicodesInternalError(node)\n\t}\n\tconst explanation = this.evaluateNode(\n\t\tthis.context.parsedRules[node.dottedName]\n\t)\n\tdelete explanation.sourceMap\n\treturn {\n\t\t...explanation,\n\t\t...node,\n\t}\n})\n","import { Logger, ParsedRules } from '.'\nimport { makeASTTransformer, traverseParsedRules } from './AST'\nimport { PublicodesError } from './error'\nimport inferNodeType, { NodesTypes } from './inferNodeType'\nimport parse from './parse'\nimport { inlineReplacements, ReplacementRule } from './replacement'\nimport { Rule } from './rule'\nimport {\n\tdisambiguateReferenceNode,\n\tupdateReferencesMapsFromReferenceNode,\n} from './ruleUtils'\nimport { getUnitKey } from './units'\nimport { weakCopyObj } from './utils'\n\nexport type Context<RuleNames extends string = string> = {\n\tdottedName: RuleNames | ''\n\tparsedRules: ParsedRules<RuleNames>\n\tnodesTypes: NodesTypes\n\treferencesMaps: ReferencesMaps<RuleNames>\n\trulesReplacements: RulesReplacements<RuleNames>\n\tgetUnitKey?: getUnitKey\n\tlogger: Logger\n\tinversionMaxIterations?: number\n}\n\nexport type RulesReplacements<RuleNames extends string> = Partial<\n\tRecord<RuleNames, ReplacementRule[]>\n>\n\nexport type ReferencesMaps<Names extends string> = {\n\treferencesIn: Map<Names, Set<Names>>\n\trulesThatUse: Map<Names, Set<Names>>\n}\n\ntype RawRule = Omit<Rule, 'nom'> | string | number\nexport type RawPublicodes<RuleNames extends string> = Partial<\n\tRecord<RuleNames, RawRule>\n>\n\nexport function createContext<RuleNames extends string>(\n\tpartialContext: Partial<Context<RuleNames>>\n): Context<RuleNames> {\n\treturn {\n\t\tdottedName: '',\n\t\tlogger: console,\n\t\tgetUnitKey: (x) => x,\n\t\tparsedRules: {} as ParsedRules<RuleNames>,\n\t\treferencesMaps: { referencesIn: new Map(), rulesThatUse: new Map() },\n\t\tnodesTypes: new WeakMap(),\n\t\trulesReplacements: {},\n\n\t\t...partialContext,\n\t}\n}\n\nexport function copyContext<C extends Context>(context: C): C {\n\treturn {\n\t\t...context,\n\t\tparsedRules: { ...context.parsedRules },\n\t\treferencesMaps: {\n\t\t\treferencesIn: new Map(context.referencesMaps.referencesIn),\n\t\t\trulesThatUse: new Map(context.referencesMaps.rulesThatUse),\n\t\t},\n\t}\n}\nexport default function parsePublicodes<\n\tContextNames extends string,\n\tNewRulesNames extends string\n>(\n\trawRules: RawPublicodes<NewRulesNames>,\n\tpartialContext: Partial<Context<ContextNames>> = createContext({})\n): Pick<\n\tContext<ContextNames | NewRulesNames>,\n\t'parsedRules' | 'nodesTypes' | 'referencesMaps' | 'rulesReplacements'\n> {\n\t// STEP 1 : get the rules as an object\n\n\tif (typeof rawRules === 'string')\n\t\tthrow new PublicodesError(\n\t\t\t'EngineError',\n\t\t\t'Publicodes does not parse yaml rule sets itself anymore. Please provide a parsed js object. E.g. the `eemeli/yaml` package.',\n\t\t\t{}\n\t\t)\n\n\t// let rules = { ...rawRules } // take 7-8ms\n\tlet rules = weakCopyObj(rawRules) // take 1-2ms\n\n\t// STEP 2: Rules parsing\n\tconst context = createContext(partialContext)\n\tlet previousParsedRules = context.parsedRules\n\tcontext.parsedRules = {} as ParsedRules<ContextNames>\n\n\tfor (const dottedName in rules) {\n\t\tlet rule = rules[dottedName]\n\t\tif (typeof rule === 'string' || typeof rule === 'number') {\n\t\t\trule = { valeur: `${rule}` }\n\t\t}\n\t\tif (typeof rule !== 'object') {\n\t\t\tthrow new PublicodesError(\n\t\t\t\t'SyntaxError',\n\t\t\t\t`Rule ${dottedName} is incorrectly written. Please give it a proper value.`,\n\t\t\t\t{ dottedName }\n\t\t\t)\n\t\t}\n\t\tconst copy = weakCopyObj(rule) as typeof rule & { nom: string }\n\t\tcopy.nom = dottedName\n\t\tparse(copy, context)\n\t}\n\n\tlet parsedRules = {} as ParsedRules<NewRulesNames | ContextNames>\n\tfor (const dottedName in previousParsedRules) {\n\t\tparsedRules[dottedName] = previousParsedRules[dottedName]\n\t}\n\tfor (const dottedName in context.parsedRules) {\n\t\tparsedRules[dottedName] = context.parsedRules[dottedName]\n\t}\n\n\t// STEP 3: Disambiguate reference\n\tlet [newRules, referencesMaps] = disambiguateReferencesAndCollectDependencies(\n\t\tparsedRules,\n\t\tcontext.parsedRules,\n\t\tcontext.referencesMaps\n\t)\n\n\t// STEP 4: Inline replacements\n\tlet rulesReplacements\n\t;[parsedRules, rulesReplacements] = inlineReplacements<\n\t\tNewRulesNames,\n\t\tContextNames\n\t>({\n\t\tparsedRules,\n\t\tnewRules: newRules as any,\n\t\treferencesMaps,\n\t\tpreviousReplacements: context.rulesReplacements,\n\t\tlogger: context.logger,\n\t})\n\n\t// STEP 5: type inference\n\tconst nodesTypes = inferNodeType(\n\t\tObject.keys(newRules),\n\t\tparsedRules,\n\t\tcontext.nodesTypes\n\t)\n\n\treturn {\n\t\tparsedRules,\n\t\tnodesTypes,\n\t\treferencesMaps,\n\t\trulesReplacements,\n\t}\n}\n\nfunction disambiguateReferencesAndCollectDependencies<\n\tNewNames extends string,\n\tPreviousNames extends string\n>(\n\tparsedRules: ParsedRules<PreviousNames>,\n\tnewRules: ParsedRules<NewNames>,\n\treferencesMaps: ReferencesMaps<PreviousNames>\n): [\n\tparsedRules: ParsedRules<NewNames>,\n\treferencesMap: ReferencesMaps<PreviousNames | NewNames>\n] {\n\tconst disambiguateReference = makeASTTransformer((node) =>\n\t\tdisambiguateReferenceNode(node, parsedRules)\n\t)\n\tconst disambiguateReferencesAndCollectDependencies = makeASTTransformer(\n\t\t(node) => {\n\t\t\tconst n = disambiguateReferenceNode(node, parsedRules)\n\t\t\tif (n) {\n\t\t\t\tupdateReferencesMapsFromReferenceNode(n, referencesMaps)\n\t\t\t}\n\t\t\treturn n\n\t\t}\n\t)\n\tconst disambiguatedRules = traverseParsedRules((node) => {\n\t\tif (node.nodeKind === 'replacementRule') {\n\t\t\t// The dependencies of replacements will be collected later, during the inlining\n\t\t\treturn disambiguateReference(node)\n\t\t}\n\t\treturn disambiguateReferencesAndCollectDependencies(node)\n\t}, newRules)\n\treturn [\n\t\tdisambiguatedRules,\n\t\treferencesMaps as ReferencesMaps<NewNames | PreviousNames>,\n\t]\n}\n"],"names":["Arrow","_ref","className","jsxs","xmlns","height","viewBox","width","fill","role","children","jsx","d","AccordionContainer","styled","div","H4","h4","AccordionWrapper","_ref2","i","css","Child","_ref3","open","StyledArrow","_ref4","$isOpen","Accordion","_ref5","items","setOpen","useState","toggleAccordion","arr","jsx2","map","_ref6","id","title","jsxs2","onClick","PreWrapper","styled2","Bar","Pre","pre","Code","_ref7","tabs","tab","setTab","useState2","tabKeys","Object","keys","activeTab","jsxs3","navigator","clipboard","jsx3","writeText","length","filter","name","References","_ref8","references","jsx4","entries","_ref9","link","jsxs4","style","display","alignItems","href","target","marginRight","capitalise0","DefaultTextRenderer","_ref10","jsx5","DefaultLinkRenderer","props","defaultRenderers","renderers","base","Text","Link","fromEntries","key","_ref11","val","RenderersContext","createContext","BasepathContext","DottedNameContext","EngineContext","useEngine","engine","useContext","Error","colors","somme","plafond","plancher","abattement","produit","composantes","variations","barème","grille","avec","colors_default","NodeValuePointer","_ref13","data","unit","jsx6","StyledNodeValuePointer","formatValue","nodeValue","styled3","span","Mecanism","_ref14","value","displayName","jsxs5","StyledMecanism","mecanismName","MecanismName","StyledMecanismValue","InfixMecanism","_ref15","prefixed","position","Explanation","node","InlineMecanismName","_ref16","inline","_ref17","Fragment","StyledMecanismName","_ref18","a","_ref19","css2","CapitalizeFirstLetter","BarèmeAttributes","_ref23","explanation","multiplicateur","jsxs8","Fragment3","jsx9","assiette","isDefault","TrancheTable","_ref24","tranches","activeTranche","find","_ref25","isActive","taux","montant","tranche","Tranche","_ref26","isHighlighted","Infinity","StyledComponent","styled4","writtenNumbers_default","encodeRuleName","utils","RuleLink","_ref28","dottedName","currentEngineId","documentationPath","displayIcon","linkComponent","propsRest","useContext2","dottedNameContext","findCommonAncestor","rule","context","parsedRules","newPath","contextTitle","ruleParents","reverse","startsWith","trim","join","jsxs10","to","split","slice","rawNode","icônes","jsx11","RuleLinkWithContext","currentEngineIdFromUrl","window","URLSearchParams","location","search","get","useSubEngine","subEngineId","Number","UnfoldIsEnabledContext","createContext2","UnfoldButton","styled5","button","StyledGuide","DefaultInlineMecanism","_ref29","sourceMap","args","isChainableMecanism","isUnaryMecanism","jsxs12","Fragment5","jsx13","ListOrScalarExplanation","valeur","paddingTop","_ref30","padding","_ref31","Array","isArray","Table","isZeroOrNotApplicable","x","useContext4","evaluate","_ref32","applicableExplanation","notApplicableExplanation","reduce","acc","push","showNotApplicable","setShowNotApplicable","useState4","useMemo","Math","random","toString","substring","StyledContainer","Row","StyledButtonContainer","styled6","ul","_ref33","StyledRow","Provider","li","StyledOperation","styled7","PlafondSmall","styled8","small","Styled","styled9","StyledExplanation","Highlight","styled10","StyledComponent2","styled11","UIComponents","constant","_ref12","type","fullPrecision","precision","arrondi","_ref20","jsx7","jsxs6","_ref22","parseUnit","jsxs7","Fragment2","jsx8","_ref21","_ref27","jsxs9","jsx10","c","textAlign","fontSize","margin","durée","jsx15","nodeKind","jsx21","jsxs16","justifyContent","flexWrap","facteur","_ref34","jsx18","jsxs13","inversion","_ref35","jsx19","inversionFailed","jsxs14","Fragment6","inversionGoal","inversionCandidates","el","operation","_ref36","operator","isUnaryOperation","jsxs15","jsx20","Fragment7","texte","_ref44","jsx29","element","reference","useContext3","folded","setFolded","useState3","isFoldEnabled","contextDottedName","includes","virtualRule","jsx12","jsxs11","flex","flexDirection","maxWidth","Fragment4","jsx16","jsx17","_ref40","jsx25","jsxs19","capitalise02","nom","condition","jsx14","_ref42","useContext5","situationValeur","jsx27","jsxs21","recalcul","_ref37","recalculEngine","subEngines","jsx22","jsxs17","Fragment8","recalculNode","amendedSituation","_ref38","origin","replacement","applicableReplacement","_ref39","consequence","replacedNode","jsx23","replacementRule","jsxs18","jsx24","replacedReference","par","Fragment9","replacementNode","dans","whiteListedNames","child","blackListedNames","_ref43","jsx28","jsxs22","_ref45","jsx30","_ref41","jsxs20","jsx26","unité","_ref46","formatValue2","jsxs23","Fragment10","jsx31","serializeUnit","jsx33","_ref47","expandedVariation","toggleVariation","useState5","jsx32","jsxs24","Fragment11","_ref48","satisfied","transition","opacity","marginBottom","_ref49","visualisationKind","displayedNode","transformAST","node2","evaluateNode","evaluateEverything","Component","encodeRuleName2","utils2","RuleSource","_ref50","useRuleSource","host","linkLabel","jsx34","jsxs25","dependencies","from","referencesMaps","referencesIn","rules","_ref51","situation","endsWith","dottedName2","formatValueForStudio","source","encodeURIComponent","JSON","stringify","hostname","formatValue3","replace","match","toLowerCase","Ul","styled12","Li","DeveloperAccordion","_ref52","apiDocumentationUrl","apiEvaluateUrl","npmPackage","Accordion2","useContext6","accordionItems","jsxs26","Fragment12","jsx35","ActualRule","ActualSituation","utils3","isExperimental","baseContext","StyledWarning","PackageUsage","ApiUsage","MissingVars","selfMissing","missingVariables","ReverseMissing","ruleIsNotDefined","Effect","replacements","elem","_ref53","Code2","_ref54","json","LINK_NPM_LABEL","LINK_PUBLICODES_LABEL","_ref55","LINK_API_LABEL","_ref56","expressions","curl","_ref57","isReplacementOfThisRule","some","_ref58","_ref59","ruleNamesWithMissing","rulesThatUse","ruleName","private","_ref60","effects","Meta","_ref61","description","Head","useContext7","jsxs27","jsx36","property","content","RuleHeader","_ref62","question","displayTitle","jsxs28","jsx37","utils4","parentDottedName","RulesNav","_ref63","mobileMenuPortalId","openNavButtonPortalId","baseEngine","navOpen","setNavOpen","useState6","initLevel","dn","utils5","parent","level","setLevel","useEffect2","prev","getParsedRules","toggleDropdown","useCallback","ruleDottedName","prevLevel","_ref64","dot","openNavButtonPortalElement","document","getElementById","menu","jsxs29","Container","$open","jsx38","Background","ReactDOM","OpenNavButton","Nav","sort","_ref65","_ref66","b","localeCompare","_ref67","rest","ruleParent","MemoNavLi","active","onClickDropdown","isMobileMenu","matchMedia","breakpointsWidth","lg","matches","mobileMenuPortalElement","NavLi","_ref68","childrenCount","ruleDot","activeLi","useRef2","current","scrollIntoView","behavior","block","ref","paddingLeft","DropdownButton","StyledArrow2","memo","sm","md","xl","styled13","_ref69","_ref70","nav","_ref71","_ref72","RulePage","_ref73","rulePath","language","showDevSection","prevRenderers","useRef3","renderersValue","setRenderers","useState7","useEffect3","jsx39","Rule","utils6","decodeRuleName","parseInt","_ref74","References2","useContext8","nullableParent","ruleDisabledByItsParent","traversedVariables","_ref75","_","_ref76","buildSituationUsedInRule","références","jsxs30","Container2","Article","lineHeight","formatValue4","Fragment13","serializeUnit2","paddingBottom","note","styled14","article","Logger","messages","warn","message","this","error","log","toJSX","m","React","background","borderRadius","nl2br","Documentation","onClickShare","defaultTarget","onTargetChange","baseUrl","logger","Engine","parse","targets","pathToRules","_ref77","utils7","getDocumentationSiteMap","ruleToPaths","invertObj","pathname","useLocation","searchParams","history","useHistory","currentTarget","setTarget","setCurrentTarget","useEffect","last","set","newPathname","ErrorBoundary","evt","preventDefault","stopPropagation","state","getDerivedStateFromError","console","render","reload","newlineRegex","str","line","index","EXAMPLE_CODE","tryToParseJson","jsonCodeToYaml","Studio","hash","initialValue","code","hashCode","decodeURIComponent","objOrYaml","editorValue","setEditorValue","debouncedEditorValue","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","handleShare","useParams","styles","studio","MonacoEditor","defaultValue","onChange","newValue","options","minimap","enabled","automaticLayout","require_nearley","__commonJS","exports","module","root","factory","symbols","postprocess","highestId","State","dot2","wantedBy","isComplete","Column","grammar","states","wants","scannable","completed","Grammar2","start","byName","forEach","hasOwnProperty","StreamLexer","reset","Parser2","fromCompiled","keepHistory","lexer","lexerState","column","table","predict","process","getSymbolShortDisplay","symbol","literal","RegExp","test","String","prototype","withCursorAt","symbolSequence","nextState","left","right","build","finish","fail","nextColumn","w","complete","exp","nulls","r","s","copy","lexer2","Lexer","ParserStart","ParserRules","g","buffer","lastLineBreak","col","next","ch","save","formatError","token","lines","max","nextLineBreak","indexOf","lastLineDigits","pad2","n","feed","chunk","e","err","reportLexerError","offset","text","constructor","expect","isToken","reportError","results","lexerError","tokenDisplay","lexerMessage","reportErrorCommon","lastColumnIndex","lastColumn","expectantStates","nextSymbol","displayStateStack","buildFirstStateStack","stateStack","symbolDisplay","getSymbolDisplay","lastDisplay","sameDisplayCount","j","getSymbolLongDisplay","visited","prevState","childVisited","concat","childResult","restore","splice","rewind","considerations","t","Parser","Grammar","nearley","require_moo","hasSticky","sticky","isRegExp","o","call","isObject","reCapture","reUnion","regexps","regexpOrLiteral","obj","ignoreCase","global","multiline","ruleOptions","include","defaultType","lineBreaks","fallback","pop","shouldThrow","toRules","spec","array","result","arrayToRules","object","getOwnPropertyNames","thing","objectToRules","defaultErrorRule","compileRules","hasStates","errorRule","fast","create","fastAllowed","unicodeFlag","groups","parts","shift","charCodeAt","unicode","pat","regexp","exec","fallbackRule","flags","suffix","checkStateGroup","Lexer2","startState","stack","info","queuedToken","queuedText","queuedThrow","setState","re","popState","pushState","eat","tokenToString","_getGroup","groupCount","queuedGroup","_token","group","charAt","lastIndex","matchNL","nl","size","Symbol","iterator","LexerIterator","done","firstDisplayedLine","lastDisplayedLine","displayedLines","string2","numLines","idx","lastIndexOf","startPosition","lastNLines","errorLines","lineNo","clone","has","tokenType","compile","all","$all","ruleMap","included","newRules","k","newRule","apply","fastKeys","freeze","keywords","isMap","Map","reverseMap","types","item","keyword","define","amd","moo","PublicodesError","originalError","super","buildMessage","isError","SyntaxError","EvaluationError","UnknownRule","PrivateRule","PublicodesInternalError","payload","UnreachableCaseError","warning","information","experimentalRuleWarning","addToMapSet","add","Set","weakCopyObj","makeASTTransformer","fn","stopOnUpdate","transform","updatedNode","traverseASTNode","makeASTVisitor","visit","transformizedVisit","traverseSourceMap","traverseRuleNode","traverseArrondiNode","traverseUnaryOperationNode","traverseNodeWithTranches","traverseArrayNode","traverseDuréeNode","traverseRésoudreRéférenceCirculaireNode","traverseInversionNode","traverseOperationNode","traverseRecalculNode","traverseUnitéNode","traverseVariationNode","traverseReplacementNode","traverseTextNode","traverseConditionNode","v","suggestions","parents","definitionRule","traverseTranche","depuis","si","alors","sinon","evaluationFunctions","registerEvaluationFunction","evaluationFunction","UNDEFINED_TYPE","isNullable","inferNodesTypes","newRulesNames","nodesTypes","inferNodeUnitAndCache","operationKind","consequencesTypes","inferNodeType","createParseInlinedMecanism","body","parsedBody","parsedDefaultArgs","parseInlineMecanism","providedArgs","name2","parsedProvidedArgs","parsedInlineMecanism","argName","assign","toCamelCase","createParseInlinedMecanismWithArray","ltr","toUpperCase","notApplicableNode","undefinedNode","undefinedNumberNode","abattement_default","applicable_default","collectNodeMissing","bonus","missings","mergeMissing","mergeAllMissing","defaultNode","getUnitKey","u","splitUnit","string3","baseUnits","unitCounts","getUnitCounts","flatMap","primaryUnit","power","decomposePower","Boolean","numerators","denominators","lastNumberFromString","countUnits","powerMatch","printUnits","units","count","formatUnit2","baseUnit","combinePower","plural","rawUnit","simplify","noUnit","inferUnit","rawUnits","equals","every","removeOnce","eqFn","list","findIndex","convertTable","singleUnitConversionFactor","unitsConversionFactor","factor","fromUnit","toUnits","toUnit","equivalentTable","convertUnit","serializedFrom","serializedTo","areEquivalentSerializedUnit","countByUnitClass","counters","classIndex","convertibleUnitClasses","unitClass","numA","denomA","numB","denomB","uniq","unitClasses2","flat","areUnitConvertible","fromSimplified","factorTo","simplifyUnitWithValue","toSimplified","factorFrom","round","convertTable2","classes","ratio","ia","ib","areSameClass","unitsClass","toFixed","simplifyUnit","symb","removePercentages","roundWithPrecision","fractionDigits","parseArrondi","parseAvec","simplifyNodeUnit","cache","_meta","evaluationRuleStack","parseTranches","evaluatePlafondUntilActiveTranche","parsedTranches","parsedTranche","activeTrancheFound","isAfterActive","plafondValue","plancherValue","calculationValues","evaluate15","bind","min","evaluateBarème","nodeValue2","decompose","factoredKeys","composante","attributs","otherKeys","parseCondition","normalizeDateString","dateString","day","month","year","normalizeDate","evaluation","pad","date2","Date","getDate","convertToDate","setMinutes","getMinutes","getTimezoneOffset","todayString","getFullYear","getMonth","objectShape","parseEstNonDéfini","fromDate","toDate","getTime","parseEstDéfini","parseEstApplicable","convertNodeToUnit","numberFormatter","maximumFractionDigits","minimumFractionDigits","adaptedMinimumFractionDigits","isInteger","Intl","NumberFormat","currency","format","booleanTranslations","fr","true","false","en","_temp","displayedUnit","formatUnit","isNaN","simplifiedNode","serializedUnit","formatNumber","ruleUtils_exports","__export","contextNameToDottedName","cyclicDependencies","disambiguateReference","disambiguateReferenceNode","getChildrenRules","isAccessible","nameLeaf","ruleWithDedicatedDocumentationPage","updateReferencesMapsFromReferenceNode","incrementOrInitEntry","decrementOrRemoveEntry","edgeArgsToId","isDirected","v_","w_","tmp","edgeObjToId","edgeObj","Graph","_nodeCount","_edgeCount","_isDirected","_label","_defaultNodeLabelFn","_defaultEdgeLabelFn","_nodes","_in","_preds","_out","_sucs","_edgeObjs","_edgeLabels","opts","directed","setGraph","label","graph","nodeCount","nodes","setNode","arguments","setNodes","vs","hasNode","successors","sucsV","edgeCount","edges","values","setEdge","edgeArgsToObj","edge","hasEdge","removeEdge","outEdges","outV","tarjan","dfs","entry","onStack","lowlink","cmpt","rawRules","parsePublicodes","dependenciesGraph","rulesDeps","depDottedName","buildDependenciesGraph","reversedCycles","smallCycles","cycle","rulesDependenciesObject","loopFrom","smallCycleStartingAt","smallCycle","previousVertex","vertex","minCycle","someCycle","squashCycle","printableStronglyConnectedComponents","subCycleToHighlight","edgesSet","edgeIsInCycle","printInDotFormat","splitName","joinName","strs","contextName","dottedName1","splitDottedName1","splitDottedName2","commonAncestor","experimental","partialName","existingDottedName","accessibleDottedName","acronym","acronyme","remplacementRuleId","parseReplacements","règle","refs","parseRendNonApplicable","inlineReplacements","previousReplacements","newReplacements","ret","getReplacements","ruleNamesWithNewReplacements","newRuleNamesWithPreviousReplacements","obj1","obj2","inlinePreviousReplacement","makeReplacementInliner","inlineNewReplacement","replacedReferenceNode","applicableReplacements","r1","r2","criterion1","criterion2","applicableReplacementsCacheKey","evaluateDisablingParent","parentMissingVariables","parentRuleStack","unshift","parentIsNotApplicable","parentEvaluation","parseEstNonApplicable","valeurEvaluation","updateRuleMissingVariables","isNotApplicable","isNotApplicableEvaluation","evaluatedValeur","uniroot","func","lowerLimit","upperLimit","errorTol","maxIter","acceptableErrorTol","actualTolerance","newStep","prevStep","p","q","fa","fb","fc","abs","t1","t2","cb","activeTranches","inversionEngine","shallowCopy","ruleToInverse","candidate","evaluatedInversionGoal","lastEvaluation","numberOfIteration","setSituation","keepPreviousSituation","evaluateWithValue","goal","x1","y1","x2","y2","maxIterations","inversionMaxIterations","inversionFail","traversedVariablesStack","parseMaximumDe","ou","parseMinimumDe","reduceToSumNodes","valeurs","somme_default","moyenne_default","oneIfApplicable","non_applicable_default","knownOperations","et","parseOperation","node1","evaluatedNode","isAdditionOrSubstractionWithPercentage","operatorFunction","operation_default","f","parD_faut_default","plafond_default","plancher_default","product_default","currentRecalcul","originRule","originRuleEvaluation","replacementEvaluation","parseRésoudreRéférenceCirculaire","ruleToSolve","parseSimplifierUnité","numberOfIterations","calculationEngine","y0","y","defaultReturn","situation_default","lastTranche","activeTrancheIndex","previousTranche","previousTaux","lowerTaux","upperTaux","coeff","NAME","parseTexte","expression","matchAll","parsedNode","toutes_ces_conditions_default","une_de_ces_conditions_default","parseUnité","parseVariableManquante","missingVariable","maxMissingScore","devariate","explanations","unit2","previousConditions","evaluatedCondition","currentCondition","evaluatedConsequence","import_nearley","__toESM","binaryOperation","A","B","JSONObject","number","parseFloat","date","boolean","string","word","default","comparison","additionSubstraction","multiplicationDivision","space","flattenJoin","grammar_default","variable2","variable","parser","initialState","singleLineExpression","parseResult","parseExpression","rawRule","privateRule","privé","ruleValue","mecanismKeys","formule","ruleContext","remplace","parseRule","parseChainedMecanisms","parseMecanism","parseFn","parseFunctions","chainableMecanisms","param","mecanismInversion","mecanismOnePossibility","possibilités","dur_e_default","parseObject","objectShape2","parsedValue","multiplication","mecanismRecalcul","moyenne","partialContext","WeakMap","rulesReplacements","copyContext","previousParsedRules","disambiguateReference2","disambiguateReferencesAndCollectDependencies2","disambiguatedRules","traverseParsedRules","disambiguateReferencesAndCollectDependencies","emptyCache","_Engine","publicParsedRules","initialContext","resetCache","situationToParse","savedBaseContext","checkExperimentalRule","getRule","cachedNode","isTraversedVariablesBoundary","newEngine"],"sourceRoot":""}