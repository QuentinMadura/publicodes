"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[796],{5318:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>b});var o=n(7378);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=i,b=m["".concat(s,".").concat(d)]||m[d]||c[d]||r;return n?o.createElement(b,a(a({ref:t},u),{},{components:n})):o.createElement(b,a({ref:t},u))}));function b(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:i,a[1]=l;for(var p=2;p<r;p++)a[p]=n[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6407:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var o=n(5773),i=(n(7378),n(5318));const r={sidebar_position:2,title:"Optimisations",hide_table_of_contents:!1},a=void 0,l={unversionedId:"tools/optim",id:"tools/optim",title:"Optimisations",description:"Constant folding",source:"@site/docs/tools/optim.mdx",sourceDirName:"tools",slug:"/tools/optim",permalink:"/docs/tools/optim",draft:!1,editUrl:"https://github.com/betagouv/publicodes/edit/master/website/docs/tools/optim.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Optimisations",hide_table_of_contents:!1},sidebar:"tutorialSidebar",previous:{title:"Imports de r\xe8gles",permalink:"/docs/tools/imports"},next:{title:"Introduction",permalink:"/docs/pourquoi-publicodes/introduction"}},s={},p=[{value:"<em>Constant folding</em>",id:"constant-folding",level:2},{value:"Motivation",id:"motivation",level:3},{value:"Usage",id:"usage",level:3},{value:"Exemple",id:"exemple",level:4}],u={toc:p},m="wrapper";function c(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"constant-folding"},(0,i.kt)("em",{parentName:"h2"},"Constant folding")),(0,i.kt)("admonition",{title:"Attention",type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Cette optimisation est encore exp\xe9rimentale et contient encore des bugs mais\n\xe9galement une marge d'am\xe9lioration importante. N'h\xe9sitez pas \xe0 nous faire des\nretours sur les probl\xe8mes rencontr\xe9s sur le d\xe9p\xf4t\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/publicodes/tools/issues"},(0,i.kt)("inlineCode",{parentName:"a"},"@publicodes/tools")),".")),(0,i.kt)("h3",{id:"motivation"},"Motivation"),(0,i.kt)("p",null,"Les mod\xe8les de calculs \xe9crits en Publicodes sont par\n",(0,i.kt)("a",{parentName:"p",href:"../pourquoi-publicodes/standard-modeles-ouverts#document%C3%A9s-sourc%C3%A9s"},(0,i.kt)("em",{parentName:"a"},"design")),"\nimpl\xe9ment\xe9s pour \xeatre le plus transparent et intelligible possible pour le plus\ngrand nombre.\nCela implique de d\xe9tailler au maximum les calculs, ce qui peut conduire \xe0 une\ncomplexit\xe9 importante des mod\xe8les. Cependant, cette complexit\xe9 n'est justifi\xe9e\nque pour la ",(0,i.kt)("a",{parentName:"p",href:"../api/react-ui"},"documentation")," et non pour le calcul en lui-m\xeame."),(0,i.kt)("p",null,"Par exemple, consid\xe9rons les r\xe8gles suivantes :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="nosgestesclimat/data/alimentation/d\xe9chets.publicodes"',title:'"nosgestesclimat/data/alimentation/d\xe9chets.publicodes"'},"alimentation . d\xe9chets . gestes . bonus compostage biod\xe9chets:\n  formule:\n    somme:\n      - omr . putrescibles . r\xe9duction compost\n      - (-1) * omr . putrescibles . compost\xe9s\n  unit\xe9: kgCO2e\n\nalimentation . d\xe9chets . omr . putrescibles . r\xe9duction compost:\n  formule: omr . putrescibles * (gisement r\xe9duction / quantit\xe9 r\xe9elle)\n  unit\xe9: kgCO2e\n")),(0,i.kt)("p",null,"La r\xe8gle ",(0,i.kt)("inlineCode",{parentName:"p"},"alimentation . d\xe9chets . omr . putrescibles . r\xe9duction compost"),"\nd\xe9pends de 18 autres r\xe8gles pour \xeatre calcul\xe9e. Cependant, la valeur ne d\xe9pend\npas de l'utilisateur\xb7ice et pourrait \xeatre calcul\xe9e \xe0 l'avance (c'est une constante).\nC'est l'objectif de l'optimisation par ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Constant_folding"},(0,i.kt)("em",{parentName:"a"},"constant\nfolding"))," : ",(0,i.kt)("strong",{parentName:"p"},"calculer toutes les\nvaleurs qui ne d\xe9pendent pas de l'utilisateur \xe0 l'avance et remplacer les r\xe8gles\ndirectement par leur valeur"),"."),(0,i.kt)("p",null,"Ainsi, apr\xe8s optimisation on obtient :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"alimentation . d\xe9chets . gestes . bonus compostage biod\xe9chets:\n  formule:\n    somme:\n      - 11.505999999999998\n      - (-0.4949999999999999)\n")),(0,i.kt)("h3",{id:"usage"},"Usage"),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"An API documentation is available in English ",(0,i.kt)("a",{parentName:"p",href:"https://publicodes.github.io/tools/modules/optims.html"},"here"),".")),(0,i.kt)("p",null,"L'optimisation par ",(0,i.kt)("em",{parentName:"p"},"constant folding")," est disponible dans le module\n",(0,i.kt)("inlineCode",{parentName:"p"},"@publicodes/tools/optims")," via la fonction\n",(0,i.kt)("a",{parentName:"p",href:"https://publicodes.github.io/tools/functions/optims.constantFolding.html"},(0,i.kt)("inlineCode",{parentName:"a"},"constantFolding")),"\nqui prend en param\xe8tre :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"un moteur Publicodes (instanci\xe9 avec le jeu de r\xe8gles \xe0 optimiser)"),(0,i.kt)("li",{parentName:"ul"},"un pr\xe9dicat qui prend en param\xe8tre un couple ",(0,i.kt)("inlineCode",{parentName:"li"},"(nom de la r\xe8gle, noeud de la\nr\xe8gle)")," et retourne ",(0,i.kt)("inlineCode",{parentName:"li"},"true")," si la r\xe8gle doit \xeatre conserv\xe9e apr\xe8s optimisation"),(0,i.kt)("li",{parentName:"ul"},"un objet de param\xe8tres :",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"isFoldedAttr")," : le nom de l'attribut \xe0 utiliser pour marquer une r\xe8gle\ncomme optimis\xe9e (par d\xe9faut ",(0,i.kt)("inlineCode",{parentName:"li"},"optimized"),")")))),(0,i.kt)("h4",{id:"exemple"},"Exemple"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import Engine from 'publicodes'\nimport { constantFolding } from '@publicodes/tools/optims'\n\nconst optimizedRules = constantFolding(\n  // A publicode engine instantiated with the rules to optimize.\n  new Engine(baseRules),\n  // A predicate returning true if the rule needs to be kept.\n  ([ruleName, ruleNode]) => {\n    return ['root', 'root . bis'].includes(ruleName) ||  ruleNode.rawNode['to keep']\n  }\n)\n")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("a",{parentName:"p",href:"https://nosgestesclimat.fr"},"Nos Gestes Climat")," utilise cette optimisation pour\nr\xe9duire le temps d'instanciation du moteur dans le client :"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"voir le ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/incubateur-ademe/nosgestesclimat/blob/59b02d4576851bd4d7688a52ea3f54e6a0156840/scripts/modelOptim.mjs#L12-L45"},"code\nsource")),(0,i.kt)("li",{parentName:"ul"},"voir la ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/incubateur-ademe/nosgestesclimat/pull/1697"},"PR"),"\nqui a permis de r\xe9duire le temps d'instanciation et d'\xe9valuation de plus de\n50%."))))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=422741d2.d03fe939.js.map